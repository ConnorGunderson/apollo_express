generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model EFMigrationsHistory {
  MigrationId    String @id(map: "PK___EFMigrationsHistory") @db.NVarChar(150)
  ProductVersion String @db.NVarChar(32)

  @@map("__EFMigrationsHistory")
}

model MigrationHistory {
  MigrationId    String @db.NVarChar(150)
  ContextKey     String @db.NVarChar(300)
  Model          Bytes
  ProductVersion String @db.NVarChar(32)

  @@id([MigrationId, ContextKey], map: "PK_dbo.__MigrationHistory")
  @@map("__MigrationHistory")
}

model RefactorLog {
  OperationKey String @id(map: "PK____Refact__D3AEFFDB7C3F3DD8") @db.UniqueIdentifier

  @@map("__RefactorLog")
}

model AccountCodeTypes {
  Id                                        Int                    @id(map: "PK_AccountCodeTypes") @default(autoincrement())
  ClientId                                  Int
  Name                                      String                 @db.VarChar(50)
  Format                                    String                 @db.VarChar(100)
  IsActive                                  Boolean                @default(true, map: "DF_AccountCodeTypes_IsActive")
  CreatedAt                                 DateTime               @default(now(), map: "DF_AccountCodeTypes_CreatedAt")
  UpdatedAt                                 DateTime?
  CreatedById                               Int?
  UpdatedById                               Int?
  Clients                                   Clients                @relation(fields: [ClientId], references: [Id], onUpdate: NoAction, map: "FK_AccountCodeTypes_Clients")
  Users_AccountCodeTypes_CreatedByIdToUsers Users?                 @relation("AccountCodeTypes_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AccountCodeTypes_Users_CreatedById")
  Users_AccountCodeTypes_UpdatedByIdToUsers Users?                 @relation("AccountCodeTypes_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AccountCodeTypes_Users_UpdatedById")
  PatternAccountCodes                       PatternAccountCodes[]
  ShipmentAccountCodes                      ShipmentAccountCodes[]

  @@index([Id, Name, ClientId, IsActive], map: "IX_AccountCodeTypes_ClientId_IsActive")
}

model AccrualTypes {
  Id                   Int     @id(map: "PK_AccrualTypes") @default(autoincrement())
  Enumeration          String  @db.VarChar(30)
  Name                 String  @db.VarChar(50)
  IsAccountsPayable    Boolean @default(true, map: "DF_AccrualTypes_IsAccountsPayable")
  IsAccountsReceivable Boolean @default(false, map: "DF_AccrualTypes_IsAccountsReceivable")
  IsActive             Boolean @default(true, map: "DF_AccrualTypes_IsActive")
  SortOrder            Int?
  Rates                Rates[]

  @@unique([Id, Enumeration], map: "IX_AccrualTypes_Enumeration")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model ArchivedMessages {
  Id             Int      @default(autoincrement())
  MessageId      String?  @db.UniqueIdentifier
  InterchangeId  String?  @db.UniqueIdentifier
  Property       String?  @db.Xml
  Body           Bytes?
  Size           BigInt?
  IsCompressed   Boolean?
  CompressedSize BigInt?

  @@ignore
}

model AspNetRoles {
  Id              String            @id(map: "PK_dbo.AspNetRoles") @db.NVarChar(128)
  Name            String            @unique(map: "RoleNameIndex") @db.NVarChar(256)
  AspNetUserRoles AspNetUserRoles[]
}

model AspNetUserClaims {
  Id         Int     @id(map: "PK_dbo.AspNetUserClaims") @default(autoincrement())
  UserId     Int
  ClaimType  String? // @db.NVarChar(200)
  ClaimValue String? // @db.NVarChar(200)

  @@index([ClaimType, ClaimValue, Id, UserId], map: "IX_AspNetUserClaims_UserId")
}

model AspNetUserLogins {
  LoginProvider String      @db.NVarChar(128)
  ProviderKey   String      @db.NVarChar(128)
  UserId        String      @db.NVarChar(128)
  AspNetUsers   AspNetUsers @relation(fields: [UserId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_dbo.AspNetUserLogins_dbo.AspNetUsers_UserId")

  @@id([LoginProvider, ProviderKey, UserId], map: "PK_dbo.AspNetUserLogins")
  @@index([UserId], map: "IX_UserId")
}

model AspNetUserRoles {
  UserId      String      @db.NVarChar(128)
  RoleId      String      @db.NVarChar(128)
  AspNetRoles AspNetRoles @relation(fields: [RoleId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_dbo.AspNetUserRoles_dbo.AspNetRoles_RoleId")
  AspNetUsers AspNetUsers @relation(fields: [UserId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_dbo.AspNetUserRoles_dbo.AspNetUsers_UserId")

  @@id([UserId, RoleId], map: "PK_dbo.AspNetUserRoles")
  @@index([RoleId], map: "IX_RoleId")
  @@index([UserId], map: "IX_UserId")
}

model AspNetUsers {
  Id                   String             @id(map: "PK_dbo.AspNetUsers") @db.NVarChar(128)
  Email                String?            @db.NVarChar(256)
  EmailConfirmed       Boolean
  PasswordHash         String?            @db.NVarChar(Max)
  SecurityStamp        String?            @db.NVarChar(Max)
  PhoneNumber          String?            @db.NVarChar(Max)
  PhoneNumberConfirmed Boolean
  TwoFactorEnabled     Boolean
  LockoutEndDateUtc    DateTime?          @db.DateTime
  LockoutEnabled       Boolean
  AccessFailedCount    Int
  UserName             String             @unique(map: "UserNameIndex") @db.NVarChar(256)
  AspNetUserLogins     AspNetUserLogins[]
  AspNetUserRoles      AspNetUserRoles[]
}

model AverageTransitTimes {
  Id                Int    @id(map: "PK_AverageTransitTimes") @default(autoincrement())
  LocationSplc      String @db.VarChar(9)
  DestinationSplc   String @db.VarChar(9)
  Average           Int
  Minimum           Int
  Maximum           Int
  StandardDeviation Float
  SampleSize        Int
}

model BadOrderReasons {
  Id           Int           @id(map: "PK_BadOrderReasons_1") @default(autoincrement())
  Code         String        @db.Char(1)
  Enumeration  String?       @db.VarChar(30)
  Name         String        @db.VarChar(50)
  Abbreviation String        @db.VarChar(4)
  Description  String?       @db.VarChar(Max)
  IsActive     Boolean       @default(true, map: "DF_BadOrderReasons_IsActive")
  SortOrder    Int?
  ServiceLogs  ServiceLogs[]

  @@unique([Id, Code], map: "IX_BadOrderReasons_Code")
  @@unique([Id, Enumeration], map: "IX_BadOrderReasons_Enumeration")
}

model BillingTypes {
  Id          Int         @id(map: "PK_BillingTypes") @default(autoincrement())
  Code        String      @db.Char(1)
  Enumeration String      @db.VarChar(30)
  Name        String      @db.VarChar(50)
  IsActive    Boolean     @default(true, map: "DF_BillingTypes_IsActive")
  SortOrder   Int?
  Patterns    Patterns[]
  Shipments   Shipments[]
  Waybills    Waybills[]

  @@unique([Id, Code], map: "IX_BillingTypes_Code")
  @@unique([Id, Enumeration], map: "IX_BillingTypes_Enumeration")
}

model BolTypes {
  Id          Int       @id(map: "PK_BolTypes") @default(autoincrement())
  Name        String    @db.VarChar(50)
  Description String    @db.VarChar(250)
  IsActive    Boolean
  Enumeration String    @db.VarChar(50)
  Clients     Clients[]
}

model CarLocationMessageDocuments {
  Id                         Int                        @id(map: "PK_CarLocationDocuments") @default(autoincrement())
  CarLocationMessageSourceId Int?
  FleetId                    String?                    @db.VarChar(9)
  FileName                   String                     @db.VarChar(100)
  RecordCount                Int?
  CreatedDate                DateTime?
  ImportId                   Int?
  Imported                   DateTime
  CarLocationMessageSources  CarLocationMessageSources? @relation(fields: [CarLocationMessageSourceId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CarLocationMessageDocuments_CarLocationMessageSources")
}

model CarLocationMessages {
  Id                                   Int                                    @id(map: "PK_CarLocationMessages") @default(autoincrement())
  ParentId                             Int?
  CarLocationMessageDocumentId         Int?
  ClientId                             Int?
  EquipmentCode                        String?                                @db.VarChar(10)
  EquipmentInitial                     String                                 @db.VarChar(4)
  EquipmentNumber                      String                                 @db.VarChar(6)
  EquipmentId                          Int?
  ShipmentId                           Int?
  SightingCityCode                     String?                                @db.VarChar(9)
  SightingCityName                     String?                                @db.VarChar(20)
  SightingState                        String?                                @db.VarChar(2)
  SightingSplc                         String?                                @db.VarChar(9)
  SightingLatitude                     Decimal?                               @db.Decimal(9, 6)
  SightingLongitude                    Decimal?                               @db.Decimal(9, 6)
  SightingDate                         DateTime
  SightingLoadedEmpty                  String                                 @db.Char(1)
  SightingEventCode                    String                                 @db.Char(1)
  SightingTrainId                      String?                                @db.VarChar(6)
  SightingJunction                     String?                                @db.VarChar(6)
  SightingScac                         String                                 @db.VarChar(4)
  DestinationCityCode                  String?                                @db.VarChar(9)
  DestinationCityName                  String?                                @db.VarChar(20)
  DestinationState                     String?                                @db.VarChar(2)
  DestinationSplc                      String?                                @db.VarChar(9)
  DestinationLatitude                  Decimal?                               @db.Decimal(9, 6)
  DestinationLongitude                 Decimal?                               @db.Decimal(9, 6)
  EtaCityCode                          String?                                @db.VarChar(9)
  EtaCityName                          String?                                @db.VarChar(20)
  EtaState                             String?                                @db.VarChar(2)
  EtaSplc                              String?                                @db.VarChar(9)
  EtaEventCode                         String?                                @db.Char(1)
  EtaDate                              DateTime?
  EtaPredictive                        Boolean?
  WaybillNumber                        String?                                @db.VarChar(50)
  Source                               String?                                @db.VarChar(4)
  ImportId                             Int?
  Comments                             String?                                @db.VarChar(Max)
  SentDate                             DateTime?
  IsActive                             Boolean
  CreatedAt                            DateTime
  UpdatedAt                            DateTime?
  CreatedById                          Int?
  UpdatedById                          Int?
  EtaPredictiveDate                    DateTime?
  ServiceLogs                          ServiceLogs[]
  ShipmentEquipmentCarLocationMessages ShipmentEquipmentCarLocationMessages[]

  @@index([ClientId, EquipmentCode, Id, IsActive, CreatedAt, CreatedById], map: "IX_CarLocationMessages_CreatedAt_CreatedById")
  @@index([DestinationCityName, DestinationState, EquipmentCode, EquipmentInitial, EquipmentNumber, EtaDate, Id, IsActive, SentDate, ShipmentId, SightingCityName, SightingEventCode, SightingJunction, SightingLoadedEmpty, SightingScac, SightingState, SightingTrainId, Source, WaybillNumber, SightingDate, ClientId], map: "IX_CarLocationMessages_Default")
  @@index([ClientId, IsActive, EquipmentCode, SightingDate, SightingEventCode, SightingLoadedEmpty], map: "IX_CarLocationMessages_EquipmentCode")
  @@index([IsActive, EquipmentId, SightingDate, SightingEventCode, SightingLoadedEmpty], map: "IX_CarLocationMessages_EquipmentId")
  @@index([EquipmentId, Id, ImportId], map: "IX_CarLocationMessages_ImportId")
}

model CarLocationMessageSources {
  Id                                                 Int                               @id(map: "PK_CarLocationMessageSources") @default(autoincrement())
  Name                                               String                            @db.VarChar(50)
  FtpUserName                                        String?                           @db.VarChar(50)
  FtpPassword                                        String?                           @db.VarChar(50)
  FtpServer                                          String?                           @db.VarChar(300)
  FtpTestServer                                      String?                           @db.VarChar(300)
  Filemap                                            String?                           @db.VarChar(50)
  InboundDirectory                                   String?                           @db.VarChar(50)
  OutboundDirectory                                  String?                           @db.VarChar(50)
  SegmentTerminator                                  String?                           @db.VarChar(1)
  ElementTerminator                                  String?                           @db.VarChar(1)
  SupportContactEmail                                String?                           @db.VarChar(50)
  SupportPhone                                       String?                           @db.VarChar(50)
  CarLocationMessageModeId                           Int?
  IsActive                                           Boolean
  Scac                                               String                            @db.VarChar(4)
  FleetName                                          String?                           @db.VarChar(9)
  ISAHeader                                          String?                           @db.VarChar(500)
  CLIHeaderText                                      String?                           @db.VarChar(500)
  CLUHeaderText                                      String?                           @db.VarChar(500)
  FileNameSuffix                                     String?                           @db.VarChar(50)
  FileNamePrefix                                     String?                           @db.VarChar(50)
  CLIFtpServer                                       String?                           @db.VarChar(300)
  CLIFtpUserName                                     String?                           @db.VarChar(50)
  CLIFtpPassword                                     String?                           @db.VarChar(50)
  Priority                                           Int?
  SendCLI                                            Boolean?
  AddRailExclusions                                  Boolean?
  ClmFormat                                          String                            @db.Char(1)
  CreatedAt                                          DateTime                          @default(now(), map: "DF__CarLocati__Creat__3D4AA7E7")
  UpdatedAt                                          DateTime
  CreatedById                                        Int?
  UpdatedById                                        Int?
  Users_CarLocationMessageSources_CreatedByIdToUsers Users?                            @relation("CarLocationMessageSources_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CarLocationMessageSources_Users_CreatedById")
  Users_CarLocationMessageSources_UpdatedByIdToUsers Users?                            @relation("CarLocationMessageSources_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CarLocationMessageSources_Users_UpdatedById")
  CarLocationMessageDocuments                        CarLocationMessageDocuments[]
  ClientCarLocationMessageSources                    ClientCarLocationMessageSources[]
}

model CarLocationMessageTriggerEquipments {
  Id                          Int                        @id(map: "PK_CarLocationMessageTriggerEquipments") @default(autoincrement())
  CarLocationMessageTriggerId Int
  EquipmentId                 Int
  CarLocationMessageTriggers  CarLocationMessageTriggers @relation(fields: [CarLocationMessageTriggerId], references: [Id], onUpdate: NoAction, map: "FK_CarLocationMessageTriggerEquipments_CarLocationMessageTriggers")
  Equipments                  Equipments                 @relation(fields: [EquipmentId], references: [Id], onUpdate: NoAction, map: "FK_CarLocationMessageTriggerEquipments_Equipments")
}

model CarLocationMessageTriggers {
  Id                                  Int                                   @id(map: "PK_CarLocationMessageTriggers") @default(autoincrement())
  ClientId                            Int?
  Name                                String                                @db.VarChar(50)
  ConditionSightingScac               String?                               @db.VarChar(4)
  ConditionSightingJunction           String?                               @db.VarChar(6)
  ConditionSightingCityName           String?                               @db.VarChar(20)
  ConditionSightingCityCode           String?                               @db.VarChar(9)
  ConditionSightingState              String?                               @db.VarChar(2)
  ConditionSightingSplc               String?                               @db.VarChar(9)
  ConditionSightingLoadedEmpty        String?                               @db.Char(1)
  ConditionSightingEventCode          String?                               @db.Char(1)
  ConditionDestinationCityName        String?                               @db.VarChar(20)
  ConditionDestinationCityCode        String?                               @db.VarChar(9)
  ConditionDestinationState           String?                               @db.VarChar(2)
  ConditionDestinationSplc            String?                               @db.VarChar(9)
  ConditionStartDate                  DateTime?
  ConditionEndDate                    DateTime?
  ConditionEndEventCode               String?                               @db.Char(1)
  ActionSightingScac                  String?                               @db.VarChar(4)
  ActionSightingJunction              String?                               @db.VarChar(6)
  ActionSightingCityCode              String?                               @db.VarChar(9)
  ActionSightingCityName              String?                               @db.VarChar(20)
  ActionSightingState                 String?                               @db.VarChar(2)
  ActionSightingSplc                  String?                               @db.VarChar(9)
  ActionSightingLoadedEmpty           String?                               @db.Char(1)
  ActionSightingEventCode             String?                               @db.Char(1)
  ActionDestinationCityCode           String?                               @db.VarChar(9)
  ActionDestinationCityName           String?                               @db.VarChar(20)
  ActionDestinationState              String?                               @db.VarChar(2)
  ActionDestinationSplc               String?                               @db.VarChar(9)
  ActionSightingWaybillNumber         String?                               @db.VarChar(50)
  ActionSightingEtaDate               DateTime?
  ActionSightingMinuteAdjustment      Int?
  ActionEtaDate                       DateTime?
  Comments                            String?                               @db.VarChar(Max)
  IsActionDeleteOriginal              Boolean
  ModifyExisting                      Boolean?
  IsActive                            Boolean                               @default(true, map: "DF_CarLocationMessageTriggers_IsActive")
  IsDeleted                           Boolean                               @default(false, map: "DF_CarLocationMessageTriggers_IsDeleted")
  CreatedAt                           DateTime?                             @default(now(), map: "DF_CarLocationMessageTriggers_CreatedAt")
  UpdatedAt                           DateTime?
  CreatedById                         Int?
  UpdatedById                         Int?
  ConditionEtaDate                    DateTime?
  CarLocationMessageTriggerEquipments CarLocationMessageTriggerEquipments[]
}

model Carriers {
  Id                                              Int                              @id(map: "PK_Carriers") @default(autoincrement())
  CarrierTypeId                                   Int                              @default(2, map: "DF_Carriers_CarrierTypeId")
  Scac                                            String                           @db.VarChar(4)
  Name                                            String                           @db.VarChar(100)
  Url                                             String?                          @db.VarChar(200)
  IsClassOne                                      Boolean                          @default(false, map: "DF_Carriers_IsClassOne")
  IsMexican                                       Boolean                          @default(false, map: "DF_Carriers_IsClassOne1")
  CancellationTypeId                              Int?                             @default(1, map: "DF_Carriers_CancellationTypeId")
  UsageIndicatorId                                Int                              @default(1, map: "DF_Carriers_UsageIndicatorId")
  RepetitionSeparator                             String?                          @db.Char(1)
  ElementSeparator                                String?                          @default("*", map: "DF_Carriers_ElementSeperator") @db.Char(1)
  ComponentSeparator                              String?                          @default(":", map: "DF_Carriers_ComponentSeperator") @db.Char(1)
  SegmentTerminator                               String?                          @default("~", map: "DF_Carriers_SegmentTerminator") @db.Char(1)
  AddLineFeed                                     Boolean                          @default(false, map: "DF_Carriers_LineFeed")
  IsActive                                        Boolean                          @default(true, map: "DF_Carriers_Active")
  CreatedAt                                       DateTime                         @default(now(), map: "DF__Carriers__Create__1EFA5F9A")
  UpdatedAt                                       DateTime?
  CreatedById                                     Int?
  UpdatedById                                     Int?
  CarrierTypes                                    CarrierTypes                     @relation(fields: [CarrierTypeId], references: [Id], onUpdate: NoAction, map: "FK_Carriers_CarrierTypes")
  Users_Carriers_CreatedByIdToUsers               Users?                           @relation("Carriers_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Carriers_Users_CreatedById")
  Users_Carriers_UpdatedByIdToUsers               Users?                           @relation("Carriers_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Carriers_Users_UpdatedById")
  UsageIndicators                                 UsageIndicators                  @relation(fields: [UsageIndicatorId], references: [Id], onUpdate: NoAction, map: "FK_Carriers_UsageIndicators")
  CarrierTransactionSets                          CarrierTransactionSets[]
  CommonYardDelays                                CommonYardDelays[]
  Diversions                                      Diversions[]
  FreightInvoicePriceAuthorities                  FreightInvoicePriceAuthorities[]
  FreightInvoices                                 FreightInvoices[]
  FuelSurcharges                                  FuelSurcharges[]
  Junctions_CarriersToJunctions_CarrierId         Junctions[]                      @relation("CarriersToJunctions_CarrierId")
  Junctions_CarriersToJunctions_JunctionCarrierId Junctions[]                      @relation("CarriersToJunctions_JunctionCarrierId")
  PatternPriceAuthorities                         PatternPriceAuthorities[]
  Patterns                                        Patterns[]
  RateContracts                                   RateContracts[]
  RateTemplates                                   RateTemplates[]
  ServiceLogs                                     ServiceLogs[]
  ShipmentPriceAuthorities                        ShipmentPriceAuthorities[]
  Shipments                                       Shipments[]
  StationCarriers                                 StationCarriers[]
  Vendors                                         Vendors[]
  WaybillPriceAuthorities                         WaybillPriceAuthorities[]
  Waybills                                        Waybills[]

  @@unique([Id, IsActive, IsClassOne, Name, Scac], map: "IX_Carriers_Scac")
}

model CarrierTransactionSets {
  Id               Int             @id(map: "PK_CarrierTransactionSets") @default(autoincrement())
  CarrierId        Int
  TransactionSetId Int
  UsageIndicatorId Int
  Server           String          @db.VarChar(100)
  Username         String          @db.VarChar(50)
  Password         String          @db.VarChar(50)
  Folder           String?         @db.VarChar(100)
  IsSecureFtp      Boolean         @default(false, map: "DF_CarrierTransactionSets_IsSecureFtp")
  Isa01            String?         @db.Char(2)
  Isa02            String?         @db.Char(10)
  Isa03            String?         @db.Char(2)
  Isa04            String?         @db.Char(10)
  Isa05            String?         @db.Char(2)
  Isa06            String?         @db.Char(15)
  Isa07            String?         @db.Char(2)
  Isa08            String?         @db.Char(15)
  Isa12            String?         @db.Char(5)
  Gs02             String?         @db.VarChar(15)
  Gs03             String?         @db.VarChar(15)
  Gs08             String?         @db.VarChar(12)
  Suffix           String?         @db.VarChar(4)
  Carriers         Carriers        @relation(fields: [CarrierId], references: [Id], onUpdate: NoAction, map: "FK_CarrierTransactionSets_Carriers")
  TransactionSets  TransactionSets @relation(fields: [TransactionSetId], references: [Id], onUpdate: NoAction, map: "FK_CarrierTransactionSets_TransactionSets")
  UsageIndicators  UsageIndicators @relation(fields: [UsageIndicatorId], references: [Id], onUpdate: NoAction, map: "FK_CarrierTransactionSets_UsageIndicators")

  @@unique([CarrierId, TransactionSetId, UsageIndicatorId], map: "IX_CarrierTransactionSets_Unique")
}

model CarrierTypes {
  Id          Int        @id(map: "PK_CarrierTypes")
  Enumeration String     @db.VarChar(30)
  Name        String     @db.VarChar(50)
  IsActive    Boolean
  SortOrder   Int?
  Carriers    Carriers[]

  @@unique([Id, Enumeration], map: "IX_CarrierTypes_Enumeration")
}

model CentralizedStations {
  ID                Int      @id(map: "PK_CentralizedStations") @default(autoincrement())
  SCAC              String   @db.VarChar(4)
  SPLC              String   @db.VarChar(9)
  LocationName      String   @db.VarChar(30)
  LocationCode      String   @db.VarChar(9)
  State             String   @db.VarChar(2)
  Country           String   @db.VarChar(2)
  Latitude          Decimal? @db.Decimal(9, 6)
  Longitude         Decimal? @db.Decimal(9, 6)
  TimeZoneId        Int
  IsDaylightSavings Boolean

  @@index([SPLC], map: "CentralizedStations_SPLC")
}

model Claims {
  Id         Int          @id(map: "PK_Claims") @default(autoincrement())
  Type       String       @db.NVarChar(255)
  Value      String       @db.NVarChar(255)
  ValueType  String       @db.NVarChar(255)
  RoleClaims RoleClaims[]
}

model ClientAliases {
  Id                                     Int       @id(map: "PK_ClientAliases") @default(autoincrement())
  ClientId                               Int
  Name                                   String    @db.VarChar(35)
  CreatedAt                              DateTime  @default(now(), map: "DF__ClientAli__Creat__3DE9C665")
  UpdatedAt                              DateTime?
  CreatedById                            Int?
  UpdatedById                            Int?
  Clients                                Clients   @relation(fields: [ClientId], references: [Id], onUpdate: NoAction, map: "FK_ClientAliases_Clients")
  Users_ClientAliases_CreatedByIdToUsers Users?    @relation("ClientAliases_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ClientAliases_Users_CreatedById")
  Users_ClientAliases_UpdatedByIdToUsers Users?    @relation("ClientAliases_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ClientAliases_Users_UpdatedById")
}

model ClientCarLocationMessageSources {
  Id                         Int                       @id(map: "PK_ClientCarLocationMessageSource") @default(autoincrement())
  CarLocationMessageSourceId Int
  ClientId                   Int
  IsMandatory                Boolean                   @default(false, map: "DF_ClientCarLocationMessageSource_IsMandatory")
  CarLocationMessageSources  CarLocationMessageSources @relation(fields: [CarLocationMessageSourceId], references: [Id], onUpdate: NoAction, map: "FK_ClientCarLocationMessageSources_CarLocationMessageSources")
}

model ClientCloseServiceLogTypes {
  Id               Int             @id(map: "PK_ClientCloseServiceLogTypes") @default(autoincrement())
  ClientId         Int
  ServiceLogTypeId Int
  Clients          Clients         @relation(fields: [ClientId], references: [Id], onUpdate: NoAction, map: "FK_ClientCloseServiceLogTypes_Clients")
  ServiceLogTypes  ServiceLogTypes @relation(fields: [ServiceLogTypeId], references: [Id], onUpdate: NoAction, map: "FK_ClientCloseServiceLogTypes_ServiceLogTypes")

  @@unique([ClientId, ServiceLogTypeId], map: "IX_ClientCloseServiceLogTypes_ClientId_ServiceLogTypeId")
}

model ClientEmptyDropCodes {
  Id                  Int     @id(map: "PK_ClientEmptyDropCodes") @default(autoincrement())
  ClientId            Int
  SightingEventCode   String  @db.Char(1)
  SightingLoadedEmpty String? @db.Char(1)
  EmptyDropCode       String  @db.Char(2)
  Clients             Clients @relation(fields: [ClientId], references: [Id], onUpdate: NoAction, map: "FK_ClientEmptyDropCodes_Clients")

  @@index([EmptyDropCode, SightingEventCode, SightingLoadedEmpty, ClientId], map: "ClientEmptyDropCodes_ClientId")
}

model ClientHazardousContactTypes {
  Id          Int     @id(map: "PK_ClientHazardousContactTypes")
  Name        String  @db.VarChar(50)
  Enumeration String  @db.VarChar(30)
  Description String? @db.VarChar(Max)
  IsActive    Boolean @default(true, map: "DF_ClientHazardousContactTypes_IsActive")
  SortOrder   Int?
}

model ClientLoadedDropCodes {
  Id                  Int     @id(map: "PK_ClientLoadedDropCodes") @default(autoincrement())
  ClientId            Int
  SightingEventCode   String  @db.Char(1)
  SightingLoadedEmpty String? @db.Char(1)
  LoadedDropCode      String  @db.Char(2)
  Clients             Clients @relation(fields: [ClientId], references: [Id], onUpdate: NoAction, map: "FK_ClientLoadedDropCodes_Clients")

  @@index([LoadedDropCode, SightingEventCode, SightingLoadedEmpty, ClientId], map: "ClientLoadedDropCodes_ClientId")
}

model ClientOpenServiceLogTypes {
  Id               Int             @id(map: "PK_ClientOpenServiceLogTypes") @default(autoincrement())
  ClientId         Int
  ServiceLogTypeId Int
  Clients          Clients         @relation(fields: [ClientId], references: [Id], onUpdate: NoAction, map: "FK_ClientOpenServiceLogTypes_Clients")
  ServiceLogTypes  ServiceLogTypes @relation(fields: [ServiceLogTypeId], references: [Id], onUpdate: NoAction, map: "FK_ClientOpenServiceLogTypes_ServiceLogTypes")

  @@unique([ClientId, ServiceLogTypeId], map: "IX_ClientOpenServiceLogTypes_ClientId_ServiceLogTypeId")
}

model ClientRepresentatives {
  Id                   Int                 @id(map: "PK_ClientRepresentatives") @default(autoincrement())
  ClientId             Int
  RepresentativeId     Int
  RepresentativeTypeId Int
  CreatedAt            DateTime            @default(now(), map: "DF__ClientRep__Creat__1BCA83E2")
  UpdatedAt            DateTime?
  CreatedById          Int?
  UpdatedById          Int?
  Clients              Clients             @relation(fields: [ClientId], references: [Id], onUpdate: NoAction, map: "FK_ClientRepresentatives_Clients")
  Users                Users               @relation(fields: [RepresentativeId], references: [Id], onUpdate: NoAction, map: "FK_ClientRepresentatives_Users")
  RepresentativeTypes  RepresentativeTypes @relation(fields: [RepresentativeTypeId], references: [Id], onUpdate: NoAction, map: "FK_ClientRepresentatives_RepresentativeTypes")
}

model ClientRoles {
  Id       Int     @id(map: "PK_ClientRoles") @default(autoincrement())
  ClientId Int
  RoleId   Int
  Clients  Clients @relation(fields: [ClientId], references: [Id], onUpdate: NoAction, map: "FK_ClientRoles_Clients")
  Roles    Roles   @relation(fields: [RoleId], references: [Id], onUpdate: NoAction, map: "FK_ClientRoles_Roles")

  @@unique([RoleId, ClientId], map: "IX_ClientRoles_ClientId_RoleId")
}

model Clients {
  Id                               Int                          @id(map: "PK_Clients") @default(autoincrement())
  Name                             String                       @db.VarChar(100)
  ContactEmailSupport              String?                      @db.VarChar(80)
  ContactEmailRates                String?                      @db.VarChar(80)
  ContactPhone                     String?                      @db.VarChar(15)
  ContactName                      String?                      @db.VarChar(35)
  ContactHazmatCertification       String?                      @db.VarChar(35)
  AddressLine1                     String?                      @db.VarChar(55)
  AddressLine2                     String?                      @db.VarChar(55)
  City                             String?                      @db.VarChar(30)
  StateProvince                    String?                      @db.VarChar(2)
  PostalCode                       String?                      @db.VarChar(15)
  Country                          String?                      @db.VarChar(3)
  IndustryId                       Int?
  BolTypeId                        Int                          @default(0, map: "DF_Clients_AutoBolTypeId")
  BolPrefix                        String?                      @db.Char(4)
  BolFormat                        String?                      @db.VarChar(20)
  BolCurrentValue                  Int?
  WeightUnitId                     Int                          @default(3, map: "DF_Clients_WeightUnit")
  VolumeUnitId                     Int                          @default(1, map: "DF_Clients_VolumeUnitId")
  TimeZoneId                       Int?
  HazardousContactTypeId           Int?
  WeightQualifier                  String                       @default("N", map: "DF_Clients_WeightType") @db.Char(1)
  HasCanadianGrain                 Boolean                      @default(false, map: "DF_Clients_IsCanadianGrain")
  HasMultipleProducts              Boolean                      @default(false, map: "DF_Clients_IsMultipleProducts")
  HasPatternRateVisible            Boolean                      @default(false, map: "DF_Clients_IsDisplayPatternRate")
  HasCapacityWarnings              Boolean                      @default(false, map: "DF_Clients_IsDisplayCapacityWarning")
  HasBillingLocationGroup          Boolean                      @default(false, map: "DF_Clients_IsDisplayBillingLocationGroup")
  HasEdICancellations              Boolean                      @default(false, map: "DF_Clients_IsEdICancellation")
  HasCancellationNotifications     Boolean                      @default(false, map: "DF_Clients_NotifyContactsOnCancellation")
  HasClms                          Boolean                      @default(false, map: "DF_Clients_SupportsClms")
  HasFreightAccrued                Boolean                      @default(false, map: "DF_Clients_IsFreightAccrued")
  HasRatesManaged                  Boolean?
  HasLoadNumber                    Boolean                      @default(false, map: "DF__Clients__HasLoad__6AA692EC")
  HasVolumeMeasurement             Boolean                      @default(false, map: "DF__Clients__HasVolu__6B9AB725")
  TempCarDropCodeLoaded            String?                      @db.VarChar(2)
  TempCarDropCodeEmpty             String?                      @db.VarChar(2)
  ClientRateTypeId                 Int?
  CurrencyId                       Int?
  FreightInvoiceTypeId             Int?
  FreightCustomerNumber            String?                      @db.VarChar(50)
  FreightBalanceDueAccount         String?                      @db.VarChar(50)
  IsActive                         Boolean                      @default(true, map: "DF_Clients_Active")
  CreatedAt                        DateTime                     @default(now(), map: "DF__Clients__Created__1FEE83D3")
  UpdatedAt                        DateTime?
  CreatedById                      Int?
  UpdatedById                      Int?
  TableauSiteId                    String?                      @db.VarChar(50)
  IsOT57Client                     Boolean                      @default(false, map: "DF_Clients_IsOT57Client")
  BolTypes                         BolTypes                     @relation(fields: [BolTypeId], references: [Id], onUpdate: NoAction, map: "FK_Clients_BolType")
  Users_Clients_CreatedByIdToUsers Users?                       @relation("Clients_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Clients_Users_CreatedById")
  Users_Clients_UpdatedByIdToUsers Users?                       @relation("Clients_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Clients_Users_UpdatedById")
  AccountCodeTypes                 AccountCodeTypes[]
  ClientAliases                    ClientAliases[]
  ClientCloseServiceLogTypes       ClientCloseServiceLogTypes[]
  ClientEmptyDropCodes             ClientEmptyDropCodes[]
  ClientLoadedDropCodes            ClientLoadedDropCodes[]
  ClientOpenServiceLogTypes        ClientOpenServiceLogTypes[]
  ClientRepresentatives            ClientRepresentatives[]
  ClientRoles                      ClientRoles[]
  Commodities                      Commodities[]
  Contacts                         Contacts[]
  Diversions                       Diversions[]
  Files                            Files[]
  Fleets                           Fleets[]
  FreightAccounts                  FreightAccounts[]
  FreightInvoices                  FreightInvoices[]
  Invoices                         Invoices[]
  Locations                        Locations[]
  NotificationContacts             NotificationContacts[]
  NotificationFtpLocations         NotificationFtpLocations[]
  NotificationGroups               NotificationGroups[]
  Parties                          Parties[]
  Patterns                         Patterns[]
  RateContracts                    RateContracts[]
  Reports                          Reports[]
  ServiceLogs                      ServiceLogs[]
  Shipments                        Shipments[]
  UserClients                      UserClients[]
  Vendors                          Vendors[]
  WaybillStatuses                  WaybillStatuses[]
}

model CoilStatuses {
  Id          Int     @id(map: "PK_CoilStatus") @default(autoincrement())
  Enumeration String? @db.VarChar(30)
  Name        String? @db.VarChar(50)
  IsActive    Boolean
  SortOrder   Int?

  @@unique([Id, Enumeration], map: "IX_CoilStatuses_Enumeration")
}

model CoilTypes {
  Id          Int     @id(map: "PK_CoilTypes") @default(autoincrement())
  Enumeration String? @db.VarChar(30)
  Name        String? @db.VarChar(50)
  IsActive    Boolean @default(true, map: "DF_CoilTypes_IsActive")
  SortOrder   Int?

  @@unique([Id, Enumeration], map: "IX_CoilTypes_Enumeration")
}

model Commodities {
  Id                                       Int                                       @id(map: "PK_Commodities") @default(autoincrement())
  ClientId                                 Int
  CommodityGroupId                         Int?
  Name                                     String                                    @db.VarChar(50)
  Code                                     String?                                   @db.VarChar(20)
  Description                              String?                                   @db.VarChar(Max)
  Stcc                                     String                                    @db.VarChar(7)
  IsActive                                 Boolean                                   @default(true, map: "DF_Commodities_IsActive")
  SourceId                                 Int?
  CanadianShippingName                     String?                                   @db.VarChar(125)
  DomesticShippingName                     String?                                   @db.VarChar(125)
  InternationalShippingName                String?                                   @db.VarChar(125)
  TechnicalName                            String?                                   @db.VarChar(125)
  TradeName                                String?                                   @db.VarChar(125)
  HazardousClassification                  String?                                   @db.VarChar(75)
  UnNaCode                                 String?                                   @db.VarChar(6)
  PackingGroup                             String?                                   @db.VarChar(3)
  CreatedAt                                DateTime                                  @default(now(), map: "DF__Commoditi__Creat__21D6CC45")
  UpdatedAt                                DateTime?
  CreatedById                              Int?
  UpdatedById                              Int?
  SatCommodityCode                         String?                                   @db.VarChar(30)
  CustomsCode                              String?                                   @db.VarChar(30)
  Clients                                  Clients                                   @relation(fields: [ClientId], references: [Id], onUpdate: NoAction, map: "FK_Commodities_Clients")
  CommodityGroups                          CommodityGroups?                          @relation(fields: [CommodityGroupId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Commodities_CommodityGroups")
  Users_Commodities_CreatedByIdToUsers     Users?                                    @relation("Commodities_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Commodities_Users_CreatedById")
  UnitedNationsStandardProductServiceCodes UnitedNationsStandardProductServiceCodes? @relation(fields: [SatCommodityCode], references: [Code], onDelete: NoAction, onUpdate: NoAction, map: "FK_Commodities_UnitedNationsStandardProductServiceCodes")
  StandardTransportationCommodityCodes     StandardTransportationCommodityCodes      @relation(fields: [Stcc], references: [Code], onUpdate: NoAction, map: "FK_Commodities_StandardTransportationCommodityCodes")
  Users_Commodities_UpdatedByIdToUsers     Users?                                    @relation("Commodities_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Commodities_Users_UpdatedById")
  CommodityHazardousMaterials              CommodityHazardousMaterials[]
  PatternCommodities                       PatternCommodities[]
  PatternRateDetails                       PatternRateDetails[]
  ShipmentCommodities                      ShipmentCommodities[]

  @@index([Id, Name, Stcc, ClientId], map: "IX_Commodities_ClientId")
  @@index([SourceId], map: "IX_Commodities_SourceId")
}

model CommodityGroups {
  Id                                       Int           @id(map: "PK_CommodityGroups") @default(autoincrement())
  ClientId                                 Int
  Name                                     String        @db.VarChar(50)
  Description                              String?       @db.VarChar(Max)
  CreatedAt                                DateTime      @default(now(), map: "DF__Commodity__Creat__27DA89B5")
  UpdatedAt                                DateTime?
  CreatedById                              Int?
  UpdatedById                              Int?
  IsActive                                 Boolean
  Users_CommodityGroups_CreatedByIdToUsers Users?        @relation("CommodityGroups_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CommodityGroups_Users_CreatedById")
  Users_CommodityGroups_UpdatedByIdToUsers Users?        @relation("CommodityGroups_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CommodityGroups_Users_UpdatedById")
  Commodities                              Commodities[]
}

model CommodityHazardousMaterialCanadianRequirements {
  Id                           Int                         @id(map: "PK_CommodityHazardousMaterialCanadianRequirements") @default(autoincrement())
  CommodityHazardousMaterialId Int
  EmergencyResponsePlanNumber  String                      @db.VarChar(12)
  PhoneNumber1                 String                      @db.VarChar(80)
  PhoneNumber2                 String?                     @db.VarChar(80)
  IsSpecialCommodity           Boolean?
  CommodityHazardousMaterials  CommodityHazardousMaterials @relation(fields: [CommodityHazardousMaterialId], references: [Id], onUpdate: NoAction, map: "FK_CommodityHazardousMaterialCanadianRequirements_CommodityHazardousMaterials")
}

model CommodityHazardousMaterialClassifications {
  Id                                              Int                                        @id(map: "PK_CommodityHazardousMaterialClassifications") @default(autoincrement())
  CommodityHazardousMaterialId                    Int
  HazardousClassQualifierId                       Int
  HazardousClassificationId                       Int
  IsReportableQuantity                            Boolean?
  CommodityHazardousMaterials                     CommodityHazardousMaterials                @relation(fields: [CommodityHazardousMaterialId], references: [Id], onUpdate: NoAction, map: "FK_CommodityHazardousMaterialClassifications_CommodityHazardousMaterials")
  HazardousClassQualifiers                        HazardousClassQualifiers                   @relation(fields: [HazardousClassQualifierId], references: [Id], onUpdate: NoAction, map: "FK_CommodityHazardousMaterialClassifications_HazardousClassQualifiers")
  HazardousClassifications                        HazardousClassifications                   @relation(fields: [HazardousClassificationId], references: [Id], onUpdate: NoAction, map: "FK_CommodityHazardousMaterialClassifications_HazardousClassifications")
  CommodityHazardousMaterialClassifications       CommodityHazardousMaterialClassifications  @relation("CommodityHazardousMaterialClassificationsToCommodityHazardousMaterialClassifications_Id", fields: [Id], references: [Id], onUpdate: NoAction, map: "FK_CommodityHazardousMaterialClassifications_CommodityHazardousMaterialClassifications")
  other_CommodityHazardousMaterialClassifications CommodityHazardousMaterialClassifications? @relation("CommodityHazardousMaterialClassificationsToCommodityHazardousMaterialClassifications_Id")

  @@index([HazardousClassificationId, HazardousClassQualifierId, IsReportableQuantity, CommodityHazardousMaterialId], map: "IX_CommodityHazardousMaterialClassifications_CommodityHazardousMaterialId")
}

model CommodityHazardousMaterialContacts {
  Id                           Int                         @id(map: "PK_CommodityHazardousMaterialContacts") @default(autoincrement())
  CommodityHazardousMaterialId Int
  ContactId                    Int?
  ContactTypeId                Int
  Name                         String                      @db.VarChar(35)
  PhoneNumber                  String                      @db.VarChar(30)
  FaxNumber                    String?                     @db.VarChar(30)
  EmailAddress                 String?                     @db.VarChar(80)
  CommodityHazardousMaterials  CommodityHazardousMaterials @relation(fields: [CommodityHazardousMaterialId], references: [Id], onUpdate: NoAction, map: "FK_CommodityHazardousMaterialContacts_CommodityHazardousMaterials")
}

model CommodityHazardousMaterialEpaRequirements {
  Id                           Int                          @id(map: "PK_CommodityHazardousMaterialEpaRequirements") @default(autoincrement())
  CommodityHazardousMaterialId Int?
  WasteStreamNumberCode        String?                      @db.VarChar(6)
  WasteCharacteristicsCode     String?                      @db.VarChar(16)
  CommodityHazardousMaterials  CommodityHazardousMaterials? @relation(fields: [CommodityHazardousMaterialId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CommodityHazardousMaterialEpaRequirements_CommodityHazardousMaterials")
}

model CommodityHazardousMaterialFreeForms {
  Id                             Int                           @id(map: "PK_CommodityHazardousMaterialFreeForms") @default(autoincrement())
  CommodityHazardousMaterialId   Int
  ShippingInformationQualifierId Int
  ShippingInformation1           String                        @db.VarChar(250)
  ShippingInformation2           String?                       @db.VarChar(25)
  HazardZoneCodeId               Int?
  CommodityHazardousMaterials    CommodityHazardousMaterials   @relation(fields: [CommodityHazardousMaterialId], references: [Id], onUpdate: NoAction, map: "FK_CommodityHazardousMaterialFreeForms_CommodityHazardousMaterials")
  HazardZoneCodes                HazardZoneCodes?              @relation(fields: [HazardZoneCodeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CommodityHazardousMaterialFreeForms_HazardZoneCodes")
  ShippingInformationQualifiers  ShippingInformationQualifiers @relation(fields: [ShippingInformationQualifierId], references: [Id], onUpdate: NoAction, map: "FK_CommodityHazardousMaterialFreeForms_ShippingInformationQualifiers")

  @@index([HazardZoneCodeId, ShippingInformation1, ShippingInformation2, ShippingInformationQualifierId, CommodityHazardousMaterialId], map: "IX_CommodityHazardousMaterialFreeForms_CommodityHazardousMaterialId")
}

model CommodityHazardousMaterialReferences {
  Id                           Int                         @id(map: "PK_CommodityHazardousMaterialReferences") @default(autoincrement())
  CommodityHazardousMaterialId Int
  ExtendedReferenceTypeId      Int
  ReferenceText                String                      @db.VarChar(30)
  ReferenceDate                DateTime?                   @db.Date
  CommodityHazardousMaterials  CommodityHazardousMaterials @relation(fields: [CommodityHazardousMaterialId], references: [Id], onUpdate: NoAction, map: "FK_CommodityHazardousMaterialReferences_CommodityHazardousMaterials")
  ExtendedReferenceTypes       ExtendedReferenceTypes      @relation(fields: [ExtendedReferenceTypeId], references: [Id], onUpdate: NoAction, map: "FK_CommodityHazardousMaterialReferences_ExtendedReferenceTypes")
}

model CommodityHazardousMaterials {
  Id                                             Int                                              @id(map: "PK_CommodityHazardousMaterials") @default(autoincrement())
  CommodityId                                    Int
  Name                                           String                                           @db.VarChar(125)
  UnNaCode                                       String?                                          @db.VarChar(6)
  PageNumber                                     Int?
  Stcc                                           String?                                          @db.VarChar(7)
  RegulatoryNumber                               String?                                          @db.VarChar(5)
  PackingGroupCodeId                             Int?
  SourceId                                       Int?
  UnitCodeId                                     Int                                              @default(1, map: "DF_CommodityHazardousMaterials_UnitCodeId")
  Commodities                                    Commodities                                      @relation(fields: [CommodityId], references: [Id], onUpdate: NoAction, map: "FK_CommodityHazardousMaterials_Commodities")
  PackingGroupCodes                              PackingGroupCodes?                               @relation(fields: [PackingGroupCodeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CommodityHazardousMaterials_PackingGroupCodes")
  UnitCodes                                      UnitCodes                                        @relation(fields: [UnitCodeId], references: [Id], onUpdate: NoAction, map: "FK_CommodityHazardousMaterials_UnitCodes")
  CommodityHazardousMaterialCanadianRequirements CommodityHazardousMaterialCanadianRequirements[]
  CommodityHazardousMaterialClassifications      CommodityHazardousMaterialClassifications[]
  CommodityHazardousMaterialContacts             CommodityHazardousMaterialContacts[]
  CommodityHazardousMaterialEpaRequirements      CommodityHazardousMaterialEpaRequirements[]
  CommodityHazardousMaterialFreeForms            CommodityHazardousMaterialFreeForms[]
  CommodityHazardousMaterialReferences           CommodityHazardousMaterialReferences[]
  CommodityHazardousMaterialShippingNames        CommodityHazardousMaterialShippingNames[]
}

model CommodityHazardousMaterialShippingNames {
  Id                           Int                         @id(map: "PK_CommodityHazardousMaterialShippingNames") @default(autoincrement())
  CommodityHazardousMaterialId Int
  ShippingNameQualifierId      Int
  ShippingName                 String                      @db.VarChar(125)
  IsNotOtherwiseSpecified      Boolean
  CommodityHazardousMaterials  CommodityHazardousMaterials @relation(fields: [CommodityHazardousMaterialId], references: [Id], onUpdate: NoAction, map: "FK_CommodityHazardousMaterialShippingNames_CommodityHazardousMaterials")
  ShippingNameQualifiers       ShippingNameQualifiers      @relation(fields: [ShippingNameQualifierId], references: [Id], onUpdate: NoAction, map: "FK_CommodityHazardousMaterialShippingNames_ShippingNameQualifiers")

  @@index([IsNotOtherwiseSpecified, ShippingName, ShippingNameQualifierId, CommodityHazardousMaterialId], map: "IX_CommodityHazardousMaterialShippingNames_CommodityHazardousMaterialId")
}

model CommodityMajorGroups {
  Id        Int     @id(map: "PK_CommodityMajorGroups") @default(autoincrement())
  Code      String  @db.Char(2)
  Name      String  @db.VarChar(50)
  IsActive  Boolean @default(true, map: "DF_CommodityMajorGroups_IsActive")
  SortOrder Int?
}

model CommodityMinorGroups {
  Id        Int     @id(map: "PK_CommodityMinorGroups") @default(autoincrement())
  Code      String  @db.Char(4)
  Name      String  @db.VarChar(50)
  IsActive  Boolean @default(true, map: "DF_CommodityMinorGroups_IsActive")
  SortOrder Int?
}

model CommoditySubMajorGroups {
  Id        Int     @id(map: "PK_CommoditySubMajorGroups") @default(autoincrement())
  Code      String  @db.Char(3)
  Name      String  @db.VarChar(50)
  IsActive  Boolean @default(true, map: "DF_CommoditySubMajorGroups_IsActive")
  SortOrder Int?
}

model CommonYardDelays {
  Id                                        Int       @id(map: "PK_CommonYardDelays") @default(autoincrement())
  CarrierId                                 Int
  LocationName                              String    @db.VarChar(19)
  LocationCity                              String    @db.VarChar(30)
  LocationState                             String    @db.VarChar(2)
  LocationSplc                              String    @db.VarChar(9)
  DelayDays                                 Int
  IsActive                                  Boolean   @default(true, map: "DF_CommonYardDelays_IsActive")
  CreatedAt                                 DateTime  @default(now(), map: "DF_CommonYardDelays_CreatedAt")
  UpdatedAt                                 DateTime?
  CreatedById                               Int
  UpdatedById                               Int?
  Carriers                                  Carriers  @relation(fields: [CarrierId], references: [Id], onUpdate: NoAction, map: "FK_CommonYardDelays_Carriers")
  Users_CommonYardDelays_CreatedByIdToUsers Users     @relation("CommonYardDelays_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onUpdate: NoAction, map: "FK_CommonYardDelays_Users_CreatedById")
  Users_CommonYardDelays_UpdatedByIdToUsers Users?    @relation("CommonYardDelays_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CommonYardDelays_Users_UpdatedById")
}

model ContactContactTypes {
  Id                                           Int          @id(map: "PK_ContactContactTypes") @default(autoincrement())
  ContactId                                    Int
  ContactTypeId                                Int
  CreatedAt                                    DateTime     @default(now(), map: "DF__ContactCo__Creat__23BF14B7")
  UpdatedAt                                    DateTime
  CreatedById                                  Int?
  UpdatedById                                  Int?
  Contacts                                     Contacts     @relation(fields: [ContactId], references: [Id], onUpdate: NoAction, map: "FK_ContactContactTypes_Contacts")
  ContactTypes                                 ContactTypes @relation(fields: [ContactTypeId], references: [Id], onUpdate: NoAction, map: "FK_ContactContactTypes_ContactTypes")
  Users_ContactContactTypes_CreatedByIdToUsers Users?       @relation("ContactContactTypes_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ContactContactTypes_Users_CreatedById")
  Users_ContactContactTypes_UpdatedByIdToUsers Users?       @relation("ContactContactTypes_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ContactContactTypes_Users_UpdatedById")

  @@unique([ContactId, ContactTypeId], map: "IX_ContactContactTypes_Unique")
}

model Contacts {
  Id                                Int                     @id(map: "PK_Contacts") @default(autoincrement())
  ClientId                          Int
  Name                              String                  @db.VarChar(35)
  PhoneNumber                       String?                 @db.VarChar(15)
  FaxNumber                         String?                 @db.VarChar(15)
  EmailAddress                      String?                 @db.VarChar(80)
  IsActive                          Boolean                 @default(true, map: "DF_Contacts_IsActive")
  CreatedAt                         DateTime                @default(now(), map: "DF__Contacts__Create__24B338F0")
  UpdatedAt                         DateTime?
  CreatedById                       Int?
  UpdatedById                       Int?
  Clients                           Clients                 @relation(fields: [ClientId], references: [Id], onUpdate: NoAction, map: "FK_Contacts_Clients")
  Users_Contacts_CreatedByIdToUsers Users?                  @relation("Contacts_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Contacts_Users_CreatedById")
  Users_Contacts_UpdatedByIdToUsers Users?                  @relation("Contacts_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Contacts_Users_UpdatedById")
  ContactContactTypes               ContactContactTypes[]
  PartyContacts                     PartyContacts[]
  PatternContacts                   PatternContacts[]
  ShipmentContacts                  ShipmentContacts[]
  ShipmentPartyContacts             ShipmentPartyContacts[]
  WaybillContacts                   WaybillContacts[]
  WaybillPartyContacts              WaybillPartyContacts[]
}

model ContactTypes {
  Id                          Int                           @id(map: "PK_ContactTypes")
  Code                        String                        @db.Char(2)
  Name                        String                        @db.VarChar(50)
  Enumeration                 String                        @db.VarChar(30)
  IsHazmatType                Boolean                       @default(false, map: "DF_ContactFunctions_IsHazmatContact")
  IsPatternType               Boolean                       @default(true, map: "DF_ContactTypes_IsPatternType")
  IsShipmentType              Boolean                       @default(false, map: "DF_ContactFunctions_IsShipmentContact")
  IsActive                    Boolean                       @default(true, map: "DF_ContactFunctions_IsActive")
  SortOrder                   Int?
  ContactContactTypes         ContactContactTypes[]
  FreightInvoicePartyContacts FreightInvoicePartyContacts[]
  PartyContacts               PartyContacts[]
  PatternContacts             PatternContacts[]
  ShipmentContacts            ShipmentContacts[]
  ShipmentPartyContacts       ShipmentPartyContacts[]
  WaybillContacts             WaybillContacts[]
  WaybillPartyContacts        WaybillPartyContacts[]

  @@unique([Id, Code], map: "IX_ContactTypes_Code")
  @@unique([Id, Enumeration], map: "IX_ContactTypes_Enumeration")
}

model Countries {
  Id             Int              @id(map: "PK_Countries") @default(autoincrement())
  Code           String           @db.VarChar(3)
  Enumeration    String           @db.VarChar(30)
  Name           String           @db.VarChar(50)
  SortOrder      Int?
  StateProvinces StateProvinces[]

  @@unique([Id, Code], map: "IX_Countries_Code")
  @@unique([Id, Enumeration], map: "IX_Countries_Enumeration")
}

model Currencies {
  Id                        Int                         @id(map: "PK_Currencies") @default(autoincrement())
  Code                      String                      @db.Char(3)
  Enumeration               String                      @db.VarChar(30)
  Name                      String                      @db.VarChar(50)
  IsActive                  Boolean                     @default(true, map: "DF_Currencies_IsActive")
  SortOrder                 Int?
  FreightInvoices           FreightInvoices[]
  Invoices                  Invoices[]
  Rates                     Rates[]
  ShipmentEquipmentAccruals ShipmentEquipmentAccruals[]

  @@unique([Id, Code], map: "IX_Currencies_Code")
  @@unique([Id, Enumeration], map: "IX_Currencies_Enumeration")
}

model CustomerStationOpenCarriers {
  Id                                                   Int      @id(map: "PK_CustomerStationOpenCarriers") @default(autoincrement())
  CustomerStationId                                    Int
  CarrierId                                            Int
  CreatedAt                                            DateTime @default(now(), map: "DF__CustomerS__Creat__2883C9D4")
  UpdatedAt                                            DateTime
  CreatedById                                          Int?
  UpdatedById                                          Int?
  Users_CustomerStationOpenCarriers_CreatedByIdToUsers Users?   @relation("CustomerStationOpenCarriers_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CustomerStationOpenCarriers_Users_CreatedById")
  Users_CustomerStationOpenCarriers_UpdatedByIdToUsers Users?   @relation("CustomerStationOpenCarriers_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CustomerStationOpenCarriers_Users_UpdatedById")
}

model CustomerStations {
  Id                                        Int       @id(map: "PK_ServingCarrierReciprocalSwitches") @default(autoincrement())
  CifNumber                                 String    @db.VarChar(9)
  SubLocation                               String    @db.VarChar(4)
  PartyName                                 String    @db.VarChar(35)
  PartyAddressLine1                         String?   @db.VarChar(55)
  PartyAddressLine2                         String?   @db.VarChar(55)
  PartyCity                                 String?   @db.VarChar(30)
  PartyState                                String?   @db.Char(2)
  PartyCountry                              String?   @db.Char(2)
  PartyPostalCode                           String?   @db.VarChar(15)
  StationCity                               String?   @db.VarChar(19)
  StationState                              String?   @db.Char(2)
  Splc                                      String?   @db.VarChar(9)
  Fsac                                      String?   @db.VarChar(5)
  CarrierId                                 Int?
  SwitchingStatusTypeId                     Int?
  Restrictions                              String?   @db.VarChar(Max)
  CreatedAt                                 DateTime  @default(now(), map: "DF__CustomerS__Creat__2977EE0D")
  UpdatedAt                                 DateTime?
  CreatedById                               Int?
  UpdatedById                               Int?
  Users_CustomerStations_CreatedByIdToUsers Users?    @relation("CustomerStations_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CustomerStations_Users_CreatedById")
  Users_CustomerStations_UpdatedByIdToUsers Users?    @relation("CustomerStations_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CustomerStations_Users_UpdatedById")
}

model CustomReferenceTypeOptions {
  Id                                                  Int                  @id(map: "PK_CustomReferenceTypeOptions") @default(autoincrement())
  CustomReferenceTypeId                               Int
  Value                                               String?              @db.VarChar(80)
  Label                                               String               @db.VarChar(100)
  IsActive                                            Boolean              @default(true, map: "DF_CustonReferenceTypeOptions_IsActive")
  SortOrder                                           Int?
  CreatedAt                                           DateTime             @default(now(), map: "DF_CustonReferenceTypeOptions_CreatedAt")
  UpdatedAt                                           DateTime?
  CreatedById                                         Int?
  UpdatedById                                         Int?
  Users_CustomReferenceTypeOptions_CreatedByIdToUsers Users?               @relation("CustomReferenceTypeOptions_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CustomReferenceTypeOptions_Users_CreatedById")
  CustomReferenceTypes                                CustomReferenceTypes @relation(fields: [CustomReferenceTypeId], references: [Id], onUpdate: NoAction, map: "FK_CustomReferenceTypeOptions_CustomReferenceTypes")
  Users_CustomReferenceTypeOptions_UpdatedByIdToUsers Users?               @relation("CustomReferenceTypeOptions_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CustomReferenceTypeOptions_Users_UpdatedById")
}

model CustomReferenceTypes {
  Id                                            Int                          @id(map: "PK_CustomReferenceTypes") @default(autoincrement())
  ClientId                                      Int
  Name                                          String                       @db.VarChar(50)
  FormInputTypeId                               Int                          @default(4, map: "DF_CustomReferenceTypes_FormInputTypeId")
  MinLength                                     Int?
  MaxLength                                     Int?
  IsActive                                      Boolean                      @default(true, map: "DF_CustomReferenceTypes_IsActive")
  SortOrder                                     Int?
  CreatedAt                                     DateTime                     @default(now(), map: "DF__CustomRef__Creat__2A6C1246")
  UpdatedAt                                     DateTime?
  CreatedById                                   Int?
  UpdatedById                                   Int?
  Users_CustomReferenceTypes_CreatedByIdToUsers Users?                       @relation("CustomReferenceTypes_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CustomReferenceTypes_Users_CreatedById")
  FormInputTypes                                FormInputTypes               @relation(fields: [FormInputTypeId], references: [Id], onUpdate: NoAction, map: "FK_CustomReferenceTypes_FormInputTypes")
  Users_CustomReferenceTypes_UpdatedByIdToUsers Users?                       @relation("CustomReferenceTypes_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CustomReferenceTypes_Users_UpdatedById")
  CustomReferenceTypeOptions                    CustomReferenceTypeOptions[]
  PatternCustomReferences                       PatternCustomReferences[]
  ShipmentCustomReferences                      ShipmentCustomReferences[]
}

model DemurrageChargeEquipmentTypes {
  Id                Int              @id(map: "PK__Demurrag__3214EC0716118F9B") @default(autoincrement())
  DemurrageChargeId Int
  EquipmentTypeId   Int
  DemurrageCharges  DemurrageCharges @relation(fields: [DemurrageChargeId], references: [Id], onUpdate: NoAction, map: "FK_DemurrageChargeEquipmentTypes_DemurrageCharges1")
  EquipmentTypes    EquipmentTypes   @relation(fields: [EquipmentTypeId], references: [Id], onUpdate: NoAction, map: "FK_DemurrageChargeEquipmentTypes_EquipmentTypes")

  @@unique([DemurrageChargeId, EquipmentTypeId], map: "AK_EquipmentTypeDemurrageCharge")
}

model DemurrageCharges {
  Id                            Int                             @id(map: "PK_DemurrageCharge") @default(autoincrement())
  DemurrageId                   Int
  FlatFee                       Float?                          @db.Money
  BeginDay                      Int
  EndDay                        Int?
  DemurrageRate                 Float?                          @db.Money
  CommodityName                 String?                         @db.VarChar(200)
  STCC                          String?                         @db.VarChar(7)
  Ownership                     String?                         @db.VarChar(10)
  Hazmat                        Boolean?
  LoadedEmpty                   String?                         @db.Char(1)
  Comments                      String?                         @db.VarChar(200)
  IsActive                      Boolean                         @default(true, map: "DF_DemurrageCharges_IsActive")
  CreatedAt                     DateTime
  UpdatedAt                     DateTime?
  CreatedById                   Int?
  UpdatedById                   Int?
  DemurrageRules                DemurrageRules                  @relation(fields: [DemurrageId], references: [Id], onUpdate: NoAction, map: "FK_DemurrageCharges_DemurrageRules")
  DemurrageChargeEquipmentTypes DemurrageChargeEquipmentTypes[]
}

model DemurrageParties {
  Id             Int            @id(map: "PK_DemurrageParties") @default(autoincrement())
  DemurrageId    Int
  PartyId        Int
  PartyTypeId    Int
  CreatedAt      DateTime
  UpdatedAt      DateTime?
  CreatedById    Int?
  UpdatedById    Int?
  SourceId       Int?
  DemurrageRules DemurrageRules @relation(fields: [DemurrageId], references: [Id], onUpdate: NoAction, map: "FK_DemurrageParties_DemurrageRules")
  Parties        Parties        @relation(fields: [PartyId], references: [Id], onUpdate: NoAction, map: "FK_DemurrageParties_Parties")
  PartyTypes     PartyTypes     @relation(fields: [PartyTypeId], references: [Id], onUpdate: NoAction, map: "FK_DemurrageParties_PartyTypes")
}

model DemurrageRules {
  Id                Int                @id(map: "PK_DemurrageRule") @default(autoincrement())
  Name              String             @db.VarChar(100)
  BusinessUnitId    Int?
  Contract          String?            @db.VarChar(100)
  Vendor            String?            @db.VarChar(100)
  Description       String?            @db.VarChar(250)
  ReportingPeriod   String             @db.VarChar(20)
  ExpirationDate    DateTime?
  EffectiveDate     DateTime
  LocationName      String             @db.VarChar(100)
  SwitchSunday      Boolean
  SwitchMonday      Boolean
  SwitchTuesday     Boolean
  SwitchWednesday   Boolean
  SwitchThursday    Boolean
  SwitchFriday      Boolean
  SwitchSaturday    Boolean
  CutoffTime        DateTime?
  IncludeLocation   Boolean
  StartOnSwitchDays Boolean
  InFee             Float?             @db.Money
  OutFee            Float?             @db.Money
  IsDeleted         Boolean            @default(false, map: "DF_DemurrageRules_IsDeleted")
  IsActive          Boolean            @default(true, map: "DF_DemurrageRules_IsActive")
  CreatedAt         DateTime           @default(now(), map: "DF_DemurrageRules_CreatedAt1")
  UpdatedAt         DateTime?
  CreatedById       Int?
  UpdatedById       Int?
  ClientId          Int
  FreeDays          Int?
  TargetDays        Int?
  CreditDays        Int?
  DemurrageCharges  DemurrageCharges[]
  DemurrageParties  DemurrageParties[]
}

model DemurrageTriggers {
  Id                                 Int                                  @id(map: "PK_DemurrageTrigger") @default(autoincrement())
  DemurrageId                        Int?
  CarrierScac                        String?                              @db.VarChar(4)
  LoadedEmptyStatus                  String?                              @db.VarChar(1)
  SightingEventCode                  String?                              @db.VarChar(1)
  LocationCity                       String?                              @db.VarChar(20)
  LocationState                      String?                              @db.VarChar(2)
  LocationSPLC                       String?                              @db.VarChar(9)
  DestinationCity                    String?                              @db.VarChar(20)
  DestinationState                   String?                              @db.VarChar(2)
  DestinationSPLC                    String?                              @db.VarChar(9)
  EndTrigger                         Boolean
  CreatedAt                          DateTime
  UpdatedAt                          DateTime?
  CreatedById                        Int?
  UpdatedById                        Int?
  DemurrageTriggerSightingEventCodes DemurrageTriggerSightingEventCodes[]
}

model DemurrageTriggerSightingEventCodes {
  Id                 Int               @default(autoincrement())
  DemurrageTriggerId Int
  SightingEventId    Int
  SightingEventCode  String?           @db.Char(1)
  DemurrageTriggers  DemurrageTriggers @relation(fields: [DemurrageTriggerId], references: [Id], onUpdate: NoAction, map: "FK_DemurrageTriggerSightingEventCodes_DemurrageTriggers1")

  @@id([DemurrageTriggerId, SightingEventId], map: "PK__Demurrag__3214EC07650207DC")
}

model DiversionCannedResponses {
  Id        Int     @id(map: "PK_DiversionCannedResponses") @default(autoincrement())
  Comment   String? @db.VarChar(Max)
  IsActive  Boolean
  SortOrder Int?
}

model DiversionComments {
  Id          Int        @id(map: "PK_DiversionComments") @default(autoincrement())
  DiversionId Int
  Comment     String     @db.VarChar(Max)
  CreatedAt   DateTime   @default(now(), map: "DF_DiversionComments_CreatedAt")
  CreatedById Int?
  Users       Users?     @relation(fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DiversionComments_Users_CreatedById")
  Diversions  Diversions @relation(fields: [DiversionId], references: [Id], onUpdate: NoAction, map: "FK_DiversionComments_Diversions")

  @@index([Id, DiversionId], map: "IX_DiversionComments_DiversionId")
}

model DiversionEquipments {
  Id            Int       @id(map: "PK_DiversionEquipments") @default(autoincrement())
  DiversionId   Int
  EquipmentId   Int?
  EquipmentCode String    @db.VarChar(10)
  CreatedAt     DateTime
  UpdatedAt     DateTime?
  CreatedById   Int?
  UpdatedById   Int?

  @@index([EquipmentId, Id, DiversionId], map: "IX_DiversionEquipments_DiversionId")
  @@index([DiversionId, Id, EquipmentCode], map: "IX_DiversionEquipments_EquipmentCode")
  @@index([DiversionId, Id, EquipmentId], map: "IX_DiversionEquipments_EquipmentId")
}

model DiversionExtendedReferences {
  Id                                                   Int       @id(map: "PK_DiversionExtendedReferences") @default(autoincrement())
  DiversionId                                          Int
  ExtendedReferenceTypeId                              Int
  ReferenceText                                        String    @db.VarChar(80)
  CreatedAt                                            DateTime  @default(now(), map: "DF_DiversionExtendedReferences_CreatedAt")
  UpdatedAt                                            DateTime?
  CreatedById                                          Int?
  UpdatedById                                          Int?
  Users_DiversionExtendedReferences_CreatedByIdToUsers Users?    @relation("DiversionExtendedReferences_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DiversionExtendedReferences_Users_CreatedById")
  Users_DiversionExtendedReferences_UpdatedByIdToUsers Users?    @relation("DiversionExtendedReferences_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DiversionExtendedReferences_Users_UpdatedById")

  @@index([Id, DiversionId], map: "IX_DiversionEquipments_DiversionId")
}

model DiversionParties {
  Id                                        Int         @id(map: "PK_DiversionParties") @default(autoincrement())
  DiversionId                               Int
  PartyTypeId                               Int?
  PartyId                                   Int?
  CreatedAt                                 DateTime    @default(now(), map: "DF__Diversion__Creat__6B667852")
  UpdatedAt                                 DateTime?
  CreatedById                               Int?
  UpdatedById                               Int?
  Users_DiversionParties_CreatedByIdToUsers Users?      @relation("DiversionParties_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DiversionParties_Users_CreatedById")
  Diversions                                Diversions  @relation(fields: [DiversionId], references: [Id], onUpdate: NoAction, map: "FK_DiversionParties_Diversions")
  Parties                                   Parties?    @relation(fields: [PartyId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DiversionParties_Parties")
  PartyTypes                                PartyTypes? @relation(fields: [PartyTypeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DiversionParties_PartyTypes")
  Users_DiversionParties_UpdatedByIdToUsers Users?      @relation("DiversionParties_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DiversionParties_Users_UpdatedById")

  @@index([Id, DiversionId], map: "IX_DiversionParties_DiversionId")
  @@index([Id, PartyId], map: "IX_DiversionParties_PartyId")
}

model DiversionRouteSegments {
  Id                                              Int                  @id(map: "PK_DiversionRouteSegments") @default(autoincrement())
  DiversionId                                     Int
  SequenceNumber                                  Int
  Scac                                            String               @db.VarChar(4)
  RoutingSequenceCodeId                           Int
  JunctionRule260                                 String?              @db.VarChar(5)
  JunctionSplc                                    String?              @db.VarChar(9)
  CreatedAt                                       DateTime             @default(now(), map: "DF__Diversion__Creat__73079A1A")
  UpdatedAt                                       DateTime?
  CreatedById                                     Int?
  UpdatedById                                     Int?
  Users_DiversionRouteSegments_CreatedByIdToUsers Users?               @relation("DiversionRouteSegments_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_SDiversionRouteSegments_Users_CreatedById")
  Diversions                                      Diversions           @relation(fields: [DiversionId], references: [Id], onUpdate: NoAction, map: "FK_DiversionRouteSegments_Diversions")
  RoutingSequenceCodes                            RoutingSequenceCodes @relation(fields: [RoutingSequenceCodeId], references: [Id], onUpdate: NoAction, map: "FK_DiversionRouteSegments_RoutingSequenceCodes")
  Users_DiversionRouteSegments_UpdatedByIdToUsers Users?               @relation("DiversionRouteSegments_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DiversionRouteSegments_Users_UpdatedById")

  @@index([DiversionId], map: "IX_DiversionRouteSegments_DiversionId")
}

model Diversions {
  Id                                  Int                      @id(map: "PK_Diversions") @default(autoincrement())
  ClientId                            Int
  CarrierId                           Int?
  FreightTermId                       Int?
  LoadedEmptyCodeId                   Int?
  DiversionStatusId                   Int?
  CommodityId                         Int?
  FleetId                             Int?
  IsRecordKeeping                     Boolean?
  OriginCity                          String?                  @db.VarChar(30)
  OriginState                         String?                  @db.Char(2)
  OriginCountry                       String?                  @db.Char(2)
  DestinationCity                     String?                  @db.VarChar(30)
  DestinationState                    String?                  @db.Char(2)
  DestinationCountry                  String?                  @db.Char(2)
  Route                               String?                  @db.VarChar(200)
  Diverted                            DateTime                 @default(now(), map: "DF_Diversions_Diverted")
  IsActive                            Boolean                  @default(true, map: "DF_Diversions_IsActive")
  CreatedAt                           DateTime                 @default(now(), map: "DF_Diversions_CreatedAt")
  UpdatedAt                           DateTime?
  CreatedById                         Int?
  UpdatedById                         Int?
  SourceId                            Int?
  TimeZoneId                          Int                      @default(3, map: "DF_Diversions_TimeZoneId")
  PaymentMethodId                     Int                      @default(2, map: "DF__Diversion__Payme__0E109611")
  Carriers                            Carriers?                @relation(fields: [CarrierId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Diversions_Carriers")
  Clients                             Clients                  @relation(fields: [ClientId], references: [Id], onUpdate: NoAction, map: "FK_Diversions_Clients")
  Users_Diversions_CreatedByIdToUsers Users?                   @relation("Diversions_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Diversions_Users_CreatedById")
  FreightTerms                        FreightTerms?            @relation(fields: [FreightTermId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Diversions_FreightTerms")
  Users_Diversions_UpdatedByIdToUsers Users?                   @relation("Diversions_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Diversions_Users_UpdatedById")
  DiversionComments                   DiversionComments[]
  DiversionParties                    DiversionParties[]
  DiversionRouteSegments              DiversionRouteSegments[]
  ServiceLogs                         ServiceLogs[]

  @@index([CarrierId], map: "IX_Diversions_CarrierId")
  @@index([Id, ClientId, IsActive], map: "IX_Diversions_ClientId_IsDeleted_IsActive")
}

model DiversionStatusTypes {
  Id          Int     @id(map: "PK_DiversionStatus") @default(autoincrement())
  Enumeration String  @db.VarChar(30)
  Name        String  @db.VarChar(50)
  IsActive    Boolean @default(true, map: "DF_DiversionStatus_IsActive")
  SortOrder   Int?
}

model DotRailCarClasses {
  Id         Int     @id(map: "PK_DotRailCarClasses") @default(autoincrement())
  Code       String  @db.VarChar(15)
  Name       String  @db.VarChar(30)
  MajorClass String  @db.VarChar(30)
  IsActive   Boolean @default(true, map: "DF_DotRailCarClasses_IsActive")

  @@unique([Id, Code], map: "IX_DotRailCarClasses_Code")
}

model EquipmentCoilStatusTypes {
  Id          Int     @id(map: "PK_EquipmentCoilStatusTypes") @default(autoincrement())
  Enumeration String? @db.VarChar(30)
  Name        String? @db.VarChar(50)
  IsActive    Boolean @default(true, map: "DF_CoilStatus_IsActive")
  SortOrder   Int?

  @@unique([Id, Enumeration], map: "IX_EquipmentCoilStatusTypes_Enumeration")
}

model EquipmentFleetHistories {
  Id          Int       @id(map: "PK_EquipmentFleetHistories") @default(autoincrement())
  EquipmentId Int
  FromFleetId Int?
  ToFleetId   Int?
  CreatedAt   DateTime
  UpdatedAt   DateTime?
  CreatedById Int?
  UpdatedById Int?
}

model EquipmentHistory {
  Id            Int        @id(map: "PK_EquipmentHistory") @default(autoincrement())
  EquipmentId   Int
  ClientId      Int
  EquipmentCode String     @db.VarChar(10)
  SysStartTime  DateTime
  SysEndTime    DateTime?
  Imported      DateTime?
  Equipments    Equipments @relation(fields: [EquipmentId], references: [Id], onUpdate: NoAction, map: "FK_EquipmentHistory_Equipments")

  @@index([ClientId, EquipmentId, EquipmentCode, SysStartTime, SysEndTime], map: "EquipmentHistory_EquipmentCode")
}

model EquipmentOwnershipTypes {
  Id          Int     @id(map: "PK_EquipmentOwnershipTypes") @default(autoincrement())
  Enumeration String? @db.VarChar(30)
  Name        String? @db.VarChar(50)
  IsActive    Boolean @default(true, map: "DF_EquipmentOwnershipTypes_IsActive")
  SortOrder   Int?

  @@unique([Id, Enumeration], map: "IX_EquipmentOwnershipTypes_Enumeration")
}

model Equipments {
  Id                                  Int                                   @id(map: "PK_Equipments") @default(autoincrement())
  FleetId                             Int?
  ClientId                            Int
  EquipmentCode                       String?                               @db.VarChar(10)
  EquipmentInitial                    String                                @db.VarChar(4)
  EquipmentNumber                     String                                @db.VarChar(6)
  EquipmentTypeId                     Int
  Description                         String?                               @db.VarChar(50)
  DotRailcarClassId                   Int?
  EquipmentStatusTypeId               Int
  EquipmentOwnershipTypeId            Int
  IsPrivateEquipment                  Int
  Lessor                              String?                               @db.VarChar(50)
  MileageEqualizationRate             Float?                                @db.Money
  TareWeight                          Int?
  GrossWeight                         Int?
  LoadLimit                           Int?
  GallonCapacity                      Int?
  CubicFeet                           Int?
  Length                              Int?
  Lifespan                            Int?
  BuildDate                           DateTime?                             @db.Date
  InServiceDate                       DateTime?                             @db.Date
  ServiceEquipmentDate                DateTime?                             @db.Date
  PaintDate                           DateTime?                             @db.Date
  PaintColor                          String?                               @db.VarChar(100)
  TankCarClass                        String?                               @db.VarChar(25)
  TankQualificationDate               DateTime?                             @db.Date
  ThicknessTestDate                   DateTime?                             @db.Date
  LiningType                          String?                               @db.VarChar(100)
  LiningDate                          DateTime?                             @db.Date
  LiningExpiration                    DateTime?                             @db.Date
  LiquidValve1                        String?                               @db.VarChar(200)
  LiquidValve2                        String?                               @db.VarChar(200)
  VaporValve1                         String?                               @db.VarChar(200)
  VaporValve2                         String?                               @db.VarChar(200)
  PressureReliefValve                 String?                               @db.VarChar(200)
  VacuumReliefValve                   String?                               @db.VarChar(200)
  Rule88InspectionDate                DateTime?                             @db.Date
  StubSillInspectionDate              DateTime?                             @db.Date
  NextQualificationDueDate            DateTime?                             @db.Date
  ScrapReason                         String?                               @db.VarChar(50)
  ScrapDate                           DateTime?                             @db.Date
  LoadingAuthorityApplicationId       String?                               @db.VarChar(50)
  LoadingAuthorityStatusId            Int?
  LoadingAuthorityEffectiveDate       DateTime?
  LoadingAuthorityExpirationDate      DateTime?
  LoadingAuthorityComments            String?                               @db.VarChar(Max)
  LastContainedCommodityId            Int?
  LastContainedCommodityName          String?                               @db.VarChar(50)
  LastContainedCommodityStcc          String?                               @db.VarChar(7)
  Comments                            String?                               @db.VarChar(Max)
  IsActive                            Boolean                               @default(true, map: "DF_Equipments_IsActive")
  IsDeleted                           Boolean                               @default(false, map: "DF_Equipments_IsDeleted")
  HatchType                           String?                               @db.VarChar(100)
  GateType                            String?                               @db.VarChar(100)
  AARCarTypeCode                      String?                               @db.VarChar(4)
  Insulated                           Boolean?
  CoilStatus                          Boolean?
  CoilStatusId                        Int?
  BottomOutletValve                   String?                               @db.VarChar(250)
  GasketORings                        String?                               @db.VarChar(250)
  CoilTypeId                          Int?
  LastCarLocationMessageId            Int?
  LastShipmentId                      Int?
  IsActiveUpdatedAt                   DateTime                              @default(now(), map: "DF_Equipments_IsActiveUpdatedAt") @db.DateTime
  CreatedAt                           DateTime                              @default(now(), map: "DF__Equipment__Creat__2C545AB8")
  UpdatedAt                           DateTime?
  CreatedById                         Int?
  UpdatedById                         Int?
  PRVInspectionDate                   DateTime?                             @db.Date
  LiningInspectionDate                DateTime?                             @db.Date
  LastActivatorById                   Int?
  LastActivatedAt                     DateTime?
  LastInActivatorById                 Int?
  LastInActivatedAt                   DateTime?
  CarLocationMessageTriggerEquipments CarLocationMessageTriggerEquipments[]
  EquipmentHistory                    EquipmentHistory[]
  FreightInvoiceEquipments            FreightInvoiceEquipments[]
  ServiceLogs                         ServiceLogs[]
  ShipmentEquipments                  ShipmentEquipments[]

  @@unique([ClientId, EquipmentCode], map: "CK_Equipments_EquipmentCode")
  @@unique([EquipmentInitial, EquipmentNumber, Id, IsActive, IsDeleted, ClientId, EquipmentCode], map: "IX_Equipments_ClientId_EquipmentCode")
  @@unique([EquipmentInitial, EquipmentNumber, Id, IsActive, IsDeleted, EquipmentCode, ClientId], map: "IX_Equipments_EquipmentCode_ClientId")
  @@index([EquipmentInitial, EquipmentNumber, Id, IsActive, IsDeleted, FleetId, ClientId], map: "IX_Equipments_FleetId")
  @@index([ClientId, Id, IsDeleted, IsActive], map: "IX_Equipments_IsActive")
}

model EquipmentStatusTypes {
  Id          Int     @id(map: "PK_EquipmentStatusTypes") @default(autoincrement())
  Enumeration String  @db.VarChar(30)
  Name        String  @db.VarChar(50)
  IsActive    Boolean @default(true, map: "DF_EquipmentStatusTypes_IsActive")
  SortOrder   String? @db.NChar(10)

  @@unique([Id, Enumeration], map: "IX_EquipmentStatusTypes_Enumeration")
}

model EquipmentTypes {
  Id                            Int                             @id(map: "PK_EquipmentTypes") @default(autoincrement())
  Code                          String                          @db.Char(2)
  Enumeration                   String                          @db.VarChar(30)
  Name                          String                          @db.VarChar(50)
  IsEquipmentType               Boolean                         @default(true, map: "DF_EquipmentTypes_IsEquipmentType")
  IsRateType                    Boolean                         @default(false, map: "DF_EquipmentTypes_IsRates")
  IsShipmentType                Boolean                         @default(false, map: "DF_EquipmentTypes_IsShipmentType")
  IsActive                      Boolean                         @default(true, map: "DF_EquipmentTypes_IsActive")
  SortOrder                     Int?
  DemurrageChargeEquipmentTypes DemurrageChargeEquipmentTypes[]
  RateDetailEquipmentTypes      RateDetailEquipmentTypes[]
  RateDetails                   RateDetails[]
  RateTemplateDetails           RateTemplateDetails[]

  @@unique([Id, Code], map: "IX_EquipmentTypes_Code")
  @@unique([Id, Enumeration], map: "IX_EquipmentTypes_Enumeration")
}

model EquipmentUploads {
  Id                Int       @id(map: "PK_tEquipmentUploads") @default(autoincrement())
  FleetId           Int
  EquipmentCode     String    @db.VarChar(20)
  ActionCode        String    @db.Char(1)
  IsDemandTrace     Boolean   @default(true, map: "DF_EquipmentUploads_IsDemandTrace")
  DemandTraceOption String?   @db.Char(1)
  StartOfTripDate   DateTime?
  CreatedById       Int?
  CreatedAt         DateTime  @default(now(), map: "DF_EquipmentUploads_CreatedDate")
  ProcessedDate     DateTime?
}

model EstimatedTransitTimes {
  SightingSplc      String @db.VarChar(9)
  DestinationSplc   String @db.VarChar(9)
  Average           Int?
  Minimum           Int?
  Maximum           Int?
  StandardDeviation Float?
  SampleSize        Int?

  @@id([SightingSplc, DestinationSplc], map: "PK_EstimatedTransitTimes")
  @@index([Average, SightingSplc, DestinationSplc], map: "IX_EstimatedTransitTimes_SightingSplc_DestinationSplc")
}

model ExpirationStatusTypes {
  Id          Int     @id(map: "PK_ExpirationStatusTypes") @default(autoincrement())
  Enumeration String  @db.VarChar(30)
  Name        String  @db.VarChar(50)
  IsActive    Boolean @default(true, map: "DF_ExpirationStatusTypes_IsActive")
  SortOrder   Int?
}

model ExtendedReferenceTypes {
  Id                                   Int                                    @id(map: "PK_ExtendedReferenceTypes") @default(autoincrement())
  Code                                 String                                 @db.VarChar(3)
  Enumeration                          String                                 @db.VarChar(30)
  Name                                 String                                 @db.VarChar(80)
  IsHazmatType                         Boolean                                @default(false, map: "DF_ExtendedReferenceTypes_IsHazmatType")
  IsPatternType                        Boolean                                @default(true, map: "DF_ExtendedReferenceTypes_IsPatternType")
  IsShipmentType                       Boolean                                @default(true, map: "DF_ExtendedReferenceTypes_IsShipmentType")
  IsActive                             Boolean                                @default(true, map: "DF_ExtendedReferenceTypes_IsActive")
  SortOrder                            Int?
  CommodityHazardousMaterialReferences CommodityHazardousMaterialReferences[]
  FreightInvoiceExtendedReferences     FreightInvoiceExtendedReferences[]
  PatternExtendedReferences            PatternExtendedReferences[]
  ShipmentHazardousMaterialReferences  ShipmentHazardousMaterialReferences[]
  WaybillHazardousMaterialReferences   WaybillHazardousMaterialReferences[]

  @@unique([Id, Code], map: "IX_ExtendedReferenceTypes_Code")
  @@unique([Id, Enumeration], map: "IX_ExtendedReferenceTypes_Enumeration")
}

model Files {
  Id                             Int       @id(map: "PK_Files") @default(autoincrement())
  GraphTypeId                    Int
  GraphTypeName                  String    @db.VarChar(50)
  ClientId                       Int?
  Path                           String    @db.VarChar(255)
  Name                           String?   @db.VarChar(50)
  MimeType                       String?   @db.VarChar(50)
  CreatedAt                      DateTime?
  UpdatedAt                      DateTime?
  CreatedById                    Int?
  UpdatedById                    Int?
  Clients                        Clients?  @relation(fields: [ClientId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Files_Clients")
  Users_Files_CreatedByIdToUsers Users?    @relation("Files_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Files_Users_CreatedById")
  Users_Files_UpdatedByIdToUsers Users?    @relation("Files_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Files_Users_UpdatedById")
}

model Fleets {
  Id                              Int       @id(map: "PK_Fleets") @default(autoincrement())
  ParentId                        Int?
  ClientId                        Int
  Name                            String    @db.VarChar(50)
  Code                            String?   @db.VarChar(30)
  Path                            String?   @db.VarChar(Max)
  Depth                           Int       @default(0, map: "DF_Fleets_Depth")
  Description                     String?   @db.VarChar(Max)
  IsActive                        Boolean   @default(true, map: "DF_Fleets_IsActive")
  IsDeleted                       Boolean   @default(false, map: "DF_Fleets_IsDeleted")
  CreatedAt                       DateTime  @default(now(), map: "DF__Fleets__CreatedAt")
  UpdatedAt                       DateTime?
  CreatedById                     Int?
  UpdatedById                     Int?
  Clients                         Clients   @relation(fields: [ClientId], references: [Id], onUpdate: NoAction, map: "FK_Fleets_Clients")
  Users_Fleets_CreatedByIdToUsers Users?    @relation("Fleets_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Fleets_Users_CreatedById")
  Fleets                          Fleets?   @relation("FleetsToFleets_ParentId", fields: [ParentId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Fleets_Fleets")
  Users_Fleets_UpdatedByIdToUsers Users?    @relation("Fleets_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Fleets_Users_UpdatedById")
  other_Fleets                    Fleets[]  @relation("FleetsToFleets_ParentId")
}

model FormInputTypes {
  Id                   Int                    @id(map: "PK_FormInputTypes") @default(autoincrement())
  Enumeration          String                 @db.VarChar(30)
  Name                 String                 @db.VarChar(50)
  IsActive             Boolean                @default(true, map: "DF_FormInputTypes_IsActive")
  SortOrder            Int?
  CustomReferenceTypes CustomReferenceTypes[]
}

model FreightAccounts {
  Id            Int     @id(map: "PK_FreightAccounts") @default(autoincrement())
  ClientId      Int
  VendorId      Int
  AccountNumber String  @db.VarChar(50)
  IsActive      Int     @default(1, map: "DF_FreightAccounts_IsActive")
  Clients       Clients @relation(fields: [ClientId], references: [Id], onUpdate: NoAction, map: "FK_FreightAccounts_Clients")
  Vendors       Vendors @relation(fields: [VendorId], references: [Id], onUpdate: NoAction, map: "FK_FreightAccounts_Vendors")
}

model FreightInvoiceCommodities {
  Id                Int             @id(map: "PK_FreightInvoiceCommodities") @default(autoincrement())
  FreightInvoiceId  Int
  Commodity         String          @db.VarChar(100)
  Stcc              String          @db.VarChar(7)
  LadingDescription String          @db.VarChar(Max)
  Weight            Decimal?        @db.Decimal(13, 3)
  Volume            Decimal?        @db.Decimal(11, 3)
  LadingQuantity    Int
  PackingFormId     Int
  SourceId          Int?
  FreightInvoices   FreightInvoices @relation(fields: [FreightInvoiceId], references: [Id], onUpdate: NoAction, map: "FK_FreightInvoiceCommodities_FreightInvoices")
  PackingForms      PackingForms    @relation(fields: [PackingFormId], references: [Id], onUpdate: NoAction, map: "FK_FreightInvoiceCommodities_PackingForms")
}

model FreightInvoiceCommodityCharges {
  Id                        Int      @id(map: "PK_FreightInvoiceCommodityCharges") @default(autoincrement())
  FreightInvoiceCommodityId Int
  RatePerUnit               Float    @db.Money
  RateUnitId                Int
  AmountDue                 Float    @db.Money
  SpecialChargeTypeId       Int?
  SpecialChargeDescription  String?  @db.VarChar(25)
  RateQuantity              Decimal? @db.Decimal(18, 0)
  CurrencyId                Int?
}

model FreightInvoiceEquipments {
  Id                  Int             @id(map: "PK_FreightInvoiceEquipments") @default(autoincrement())
  FreightInvoiceId    Int
  SequenceNumber      Int             @default(0, map: "DF_FreightInvoiceEquipments_SequenceCode")
  EquipmentCode       String?         @db.VarChar(10)
  EquipmentId         Int?
  EquipmentInitial    String          @db.VarChar(4)
  EquipmentNumber     String          @db.VarChar(6)
  SealNumbers         String?         @db.VarChar(500)
  Weight              Decimal?        @db.Decimal(13, 3)
  EquipmentTypeId     Int             @default(11, map: "DF_FreightInvoiceEquipments_EquipmentTypeId")
  GrainCode           String?         @db.VarChar(30)
  GrainOrderReference String?         @db.VarChar(30)
  GrainLoadWeek       Int?
  GrainIncentive      String?         @db.VarChar(30)
  GrainTrainRun       Int?
  GrainBlockSize      Int?
  GrainCot            String?         @db.VarChar(30)
  IsLeadCar           Boolean
  Equipments          Equipments?     @relation(fields: [EquipmentId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_FreightInvoiceEquipments_Equipments")
  FreightInvoices     FreightInvoices @relation(fields: [FreightInvoiceId], references: [Id], onUpdate: NoAction, map: "FK_FreightInvoiceEquipments_FreightInvoices")
}

model FreightInvoiceExtendedReferences {
  Id                      Int                    @id(map: "PK_FreightInvoiceReferences") @default(autoincrement())
  FreightInvoiceId        Int
  ExtendedReferenceTypeId Int
  ReferenceText           String                 @db.VarChar(30)
  ReferenceDate           DateTime?
  ExtendedReferenceTypes  ExtendedReferenceTypes @relation(fields: [ExtendedReferenceTypeId], references: [Id], onUpdate: NoAction, map: "FK_FreightInvoiceExtendedReferences_ExtendedReferenceTypes")
  FreightInvoices         FreightInvoices        @relation(fields: [FreightInvoiceId], references: [Id], onUpdate: NoAction, map: "FK_FreightInvoiceExtendedReferences_FreightInvoices")
}

model FreightInvoiceParties {
  Id                                 Int                                  @id(map: "PK_FreightInvoiceParties") @default(autoincrement())
  FreightInvoiceId                   Int
  PartyTypeId                        Int
  Name                               String                               @db.VarChar(35)
  AddressLine1                       String?                              @db.VarChar(55)
  AddressLine2                       String?                              @db.VarChar(55)
  AddressLine3                       String?                              @db.VarChar(55)
  AddressLine4                       String?                              @db.VarChar(55)
  City                               String?                              @db.VarChar(30)
  State                              String?                              @db.Char(2)
  PostalCode                         String?                              @db.VarChar(15)
  Country                            String?                              @db.Char(2)
  Splc                               String?                              @db.VarChar(9)
  ReferenceId                        String?                              @db.VarChar(80)
  Address                            String?                              @db.VarChar(330)
  FreightInvoices                    FreightInvoices                      @relation(fields: [FreightInvoiceId], references: [Id], onUpdate: NoAction, map: "FK_FreightInvoiceParties_FreightInvoices")
  PartyTypes                         PartyTypes                           @relation(fields: [PartyTypeId], references: [Id], onUpdate: NoAction, map: "FK_FreightInvoiceParties_PartyTypes")
  FreightInvoicePartyBillingSegments FreightInvoicePartyBillingSegments[]
  FreightInvoicePartyContacts        FreightInvoicePartyContacts[]
}

model FreightInvoicePartyBillingSegments {
  Id                    Int                   @id(map: "PK_FreightInvoicePartyBillingSegments") @default(autoincrement())
  FreightInvoicePartyId Int
  OriginFsac            String?               @db.VarChar(5)
  DestinationFsac       String?               @db.VarChar(5)
  OriginSplc            String?               @db.VarChar(9)
  OriginCity            String                @db.VarChar(30)
  OriginState           String?               @db.Char(2)
  OriginCountry         String?               @db.Char(2)
  DestinationSplc       String?               @db.VarChar(9)
  DestinationCity       String                @db.VarChar(30)
  DestinationState      String?               @db.Char(2)
  DestinationCountry    String?               @db.Char(2)
  Scac1                 String                @db.VarChar(4)
  Scac2                 String?               @db.VarChar(4)
  Scac3                 String?               @db.VarChar(4)
  FreightInvoiceParties FreightInvoiceParties @relation(fields: [FreightInvoicePartyId], references: [Id], onUpdate: NoAction, map: "FK_FreightInvoicePartyBillingSegments_FreightInvoiceParties")
}

model FreightInvoicePartyContacts {
  Id                    Int                   @id(map: "PK_FreightInvoicePartyContacts") @default(autoincrement())
  FreightInvoicePartyId Int
  ContactTypeId         Int
  Name                  String?               @db.VarChar(35)
  PhoneNumber           String?               @db.VarChar(30)
  FaxNumber             String?               @db.VarChar(30)
  EmailAddress          String?               @db.VarChar(80)
  ContactTypes          ContactTypes          @relation(fields: [ContactTypeId], references: [Id], onUpdate: NoAction, map: "FK_FreightInvoicePartyContacts_ContactTypes")
  FreightInvoiceParties FreightInvoiceParties @relation(fields: [FreightInvoicePartyId], references: [Id], onUpdate: NoAction, map: "FK_FreightInvoicePartyContacts_FreightInvoiceParties")
}

model FreightInvoicePriceAuthorities {
  Id                   Int                 @id(map: "PK_FreightInvoicePriceAuthorities") @default(autoincrement())
  FreightInvoiceId     Int
  PriceAuthorityTypeId Int
  CarrierId            Int?
  ContractNumber       String              @db.VarChar(30)
  AuthorityNumber      String?             @db.VarChar(10)
  AuthoritySuffix      String?             @db.VarChar(2)
  TariffItemNumber     String?             @db.VarChar(16)
  Carriers             Carriers?           @relation(fields: [CarrierId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_FreightInvoicePriceAuthorities_Carriers")
  FreightInvoices      FreightInvoices     @relation(fields: [FreightInvoiceId], references: [Id], onUpdate: NoAction, map: "FK_FreightInvoicePriceAuthorities_FreightInvoices")
  PriceAuthorityTypes  PriceAuthorityTypes @relation(fields: [PriceAuthorityTypeId], references: [Id], onUpdate: NoAction, map: "FK_FreightInvoicePriceAuthorities_PriceAuthorityTypes")
}

model FreightInvoiceRouteSegments {
  Id                    Int                  @id(map: "PK_FreightInvoiceRouteSegments") @default(autoincrement())
  FreightInvoiceId      Int
  SequenceNumber        Int
  Scac                  String               @db.VarChar(4)
  RoutingSequenceCodeId Int
  JunctionRule260       String?              @db.VarChar(5)
  JunctionSplc          String?              @db.VarChar(9)
  FreightInvoices       FreightInvoices      @relation(fields: [FreightInvoiceId], references: [Id], onUpdate: NoAction, map: "FK_FreightInvoiceRouteSegments_FreightInvoices")
  RoutingSequenceCodes  RoutingSequenceCodes @relation(fields: [RoutingSequenceCodeId], references: [Id], onUpdate: NoAction, map: "FK_FreightInvoiceRouteSegments_RoutingSequenceCodes")
}

model FreightInvoices {
  Id                                       Int                                @id(map: "PK_FreightInvoices") @default(autoincrement())
  ClientId                                 Int?
  TransactionPurposeId                     Int?
  InvoiceNumber                            String                             @db.VarChar(22)
  InvoiceDate                              DateTime                           @db.Date
  NetAmountDue                             Float                              @db.Money
  CurrencyId                               Int
  DueDate                                  DateTime                           @db.Date
  PaymentMethodId                          Int
  CarrierId                                Int
  LeadEquipment                            String                             @db.VarChar(10)
  ShipperParty                             String                             @db.VarChar(60)
  PickupParty                              String?                            @db.VarChar(60)
  ConsigneeParty                           String                             @db.VarChar(60)
  InCareOfParty                            String?                            @db.VarChar(60)
  AccountOfParty                           String?                            @db.VarChar(60)
  AccountOfOriginParty                     String?                            @db.VarChar(60)
  AccountOfDestinationParty                String?                            @db.VarChar(60)
  PayerFreightParty                        String?                            @db.VarChar(60)
  Rule11Party1                             String?                            @db.VarChar(60)
  Rule11Party2                             String?                            @db.VarChar(60)
  Rule11Party3                             String?                            @db.VarChar(60)
  CustomsBrokerParty                       String?                            @db.VarChar(60)
  CanadianCustomsBrokerParty               String?                            @db.VarChar(60)
  MexicanCustomsBrokerParty                String?                            @db.VarChar(60)
  USCustomsBrokerParty                     String?                            @db.VarChar(60)
  ImporterParty                            String?                            @db.VarChar(60)
  ForwarderParty                           String?                            @db.VarChar(60)
  WeightUnitId                             Int                                @default(3, map: "DF_FreightInvoices_WeightUnitId")
  VolumeUnitId                             Int?
  IsSectionSeven                           Boolean
  IsWeighInRoute                           Boolean                            @default(false, map: "DF_FreightInvoices_IsWeighInRoute")
  IsUnitTrain                              Boolean
  WeightQualifierId                        Int                                @default(3, map: "DF_FreightInvoices_WeightQualifierId")
  WeightTypeId                             Int?                               @default(12, map: "DF_FreightInvoices_WeightType")
  TimeZoneId                               Int
  Shipped                                  DateTime
  WaybillNumber                            Int
  WaybillDate                              DateTime                           @db.Date
  Bol                                      String                             @db.VarChar(30)
  PurchaseOrder                            String?                            @db.VarChar(30)
  CustomerOrder                            String?                            @db.VarChar(30)
  Lot                                      String?                            @db.VarChar(30)
  Route                                    String                             @db.VarChar(200)
  EmptyDispositionRoute                    String?                            @db.VarChar(200)
  OriginCity                               String                             @db.VarChar(30)
  OriginState                              String                             @db.Char(2)
  DestinationCity                          String                             @db.VarChar(30)
  DestinationState                         String                             @db.Char(2)
  IsActive                                 Boolean                            @default(true, map: "DF_FreightInvoices_IsActive")
  IsDeleted                                Boolean                            @default(false, map: "DF_FreightInvoices_IsDeleted")
  CreatedAt                                DateTime                           @default(now(), map: "DF_FreightInvoices_CreatedAt")
  UpdatedAt                                DateTime?
  CreatedById                              Int?
  UpdatedById                              Int?
  SourceId                                 Int?
  Carriers                                 Carriers                           @relation(fields: [CarrierId], references: [Id], onUpdate: NoAction, map: "FK_FreightInvoices_Carriers")
  Clients                                  Clients?                           @relation(fields: [ClientId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_FreightInvoices_Clients")
  Users_FreightInvoices_CreatedByIdToUsers Users?                             @relation("FreightInvoices_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_FreightInvoices_Users_CreatedById")
  Currencies                               Currencies                         @relation(fields: [CurrencyId], references: [Id], onUpdate: NoAction, map: "FK_FreightInvoices_Currencies")
  PaymentMethods                           PaymentMethods                     @relation(fields: [PaymentMethodId], references: [Id], onUpdate: NoAction, map: "FK_FreightInvoices_PaymentMethods")
  TimeZones                                TimeZones                          @relation(fields: [TimeZoneId], references: [Id], onUpdate: NoAction, map: "FK_FreightInvoices_TimeZones")
  TransactionPurposes                      TransactionPurposes?               @relation(fields: [TransactionPurposeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_FreightInvoices_TransactionPurposes")
  Users_FreightInvoices_UpdatedByIdToUsers Users?                             @relation("FreightInvoices_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_FreightInvoices_Users_UpdatedById")
  VolumeUnits                              VolumeUnits?                       @relation(fields: [VolumeUnitId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_FreightInvoices_VolumeUnits")
  WeightQualifiers                         WeightQualifiers                   @relation(fields: [WeightQualifierId], references: [Id], onUpdate: NoAction, map: "FK_FreightInvoices_WeightQualifiers")
  WeightTypes                              WeightTypes?                       @relation(fields: [WeightTypeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_FreightInvoices_WeightTypes")
  WeightUnits                              WeightUnits                        @relation(fields: [WeightUnitId], references: [Id], onUpdate: NoAction, map: "FK_FreightInvoices_WeightUnits")
  FreightInvoiceCommodities                FreightInvoiceCommodities[]
  FreightInvoiceEquipments                 FreightInvoiceEquipments[]
  FreightInvoiceExtendedReferences         FreightInvoiceExtendedReferences[]
  FreightInvoiceParties                    FreightInvoiceParties[]
  FreightInvoicePriceAuthorities           FreightInvoicePriceAuthorities[]
  FreightInvoiceRouteSegments              FreightInvoiceRouteSegments[]
}

model FreightTerms {
  Id          Int          @id(map: "PK_FreightTerms") @default(autoincrement())
  Enumeration String       @db.VarChar(30)
  Name        String       @db.VarChar(50)
  IsActive    Boolean      @default(true, map: "DF__FreightTe__IsAct__0BBD6DF4")
  SortOrder   Int?
  Diversions  Diversions[]

  @@unique([Id, Enumeration], map: "IX_FreightTerms_Enumeration")
}

model FrequencyTypes {
  Id              Int               @id(map: "PK_FrequencyTypes") @default(autoincrement())
  Code            String            @unique(map: "CK_FrequencyTypes_Code") @db.Char(2)
  Enumeration     String            @db.VarChar(30)
  Name            String            @db.VarChar(50)
  IsActive        Boolean           @default(true, map: "DF_FrequencyTypes_IsActive")
  SortOrder       Int?
  ReportSchedules ReportSchedules[]
}

model FuelSurchargeDetails {
  Id              Int            @id(map: "PK_FuelSurchargeDetails") @default(autoincrement())
  FuelSurchargeId Int
  RateUnitId      Int
  RatePerUnit     Decimal        @db.Decimal(8, 5)
  EffectiveDate   DateTime       @db.Date
  ExpirationDate  DateTime       @db.Date
  FuelSurcharges  FuelSurcharges @relation(fields: [FuelSurchargeId], references: [Id], onUpdate: NoAction, map: "FK_FuelSurchargeDetails_FuelSurcharges")
  RateUnits       RateUnits      @relation(fields: [RateUnitId], references: [Id], onUpdate: NoAction, map: "FK_FuelSurchargeDetails_RateUnits")

  @@unique([FuelSurchargeId, EffectiveDate, ExpirationDate], map: "CK_FuelSurchargeDetails_FuelSurchargeId")
  @@index([RatePerUnit, FuelSurchargeId, EffectiveDate, ExpirationDate], map: "IX_FuelSurchargeDetails_FuelSurchargeId_EffectiveDate_ExpirationDate")
}

model FuelSurchargePriceIndexes {
  Id                Int            @id(map: "PK_FuelSurchargePriceIndexes") @default(autoincrement())
  FuelSurchargeId   Int
  PriceIndexMinimum Decimal        @db.Decimal(8, 5)
  PriceIndexMaximum Decimal        @db.Decimal(8, 5)
  RatePerUnit       Decimal        @db.Decimal(8, 5)
  IsActive          Boolean        @default(true, map: "DF_FuelSurchargePriceIndexes_IsActive")
  FuelSurcharges    FuelSurcharges @relation(fields: [FuelSurchargeId], references: [Id], onUpdate: NoAction, map: "FK_FuelSurchargePriceIndexes_FuelSurcharges")
}

model FuelSurcharges {
  Id                                      Int                         @id(map: "PK_FuelSurcharges") @default(autoincrement())
  CarrierId                               Int
  Code                                    String                      @unique(map: "CK_FuelSurcharges_Code") @db.VarChar(30)
  Name                                    String                      @db.VarChar(100)
  PriceIndexId                            Int?
  RateUnitId                              Int                         @default(3, map: "DF_FuelSurcharges_IsMileageBased")
  RatePerUnit                             Decimal?                    @db.Decimal(8, 5)
  IsIntermodal                            Boolean                     @default(false, map: "DF_FuelSurcharges_IsIntermodal")
  IsActive                                Boolean                     @default(true, map: "DF_FuelSurcharges_IsActive")
  CreatedAt                               DateTime                    @default(now(), map: "DF__FuelSurch__Creat__31190FD5")
  UpdatedAt                               DateTime?
  CreatedById                             Int?
  UpdatedById                             Int?
  Carriers                                Carriers                    @relation(fields: [CarrierId], references: [Id], onUpdate: NoAction, map: "FK_FuelSurcharges_Carriers")
  Users_FuelSurcharges_CreatedByIdToUsers Users?                      @relation("FuelSurcharges_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_FuelSurcharges_Users_CreatedById")
  PriceIndexes                            PriceIndexes?               @relation(fields: [PriceIndexId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_FuelSurcharges_PriceIndexes")
  RateUnits                               RateUnits                   @relation(fields: [RateUnitId], references: [Id], onUpdate: NoAction, map: "FK_FuelSurcharges_RateUnits")
  Users_FuelSurcharges_UpdatedByIdToUsers Users?                      @relation("FuelSurcharges_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_FuelSurcharges_Users_UpdatedById")
  FuelSurchargeDetails                    FuelSurchargeDetails[]
  FuelSurchargePriceIndexes               FuelSurchargePriceIndexes[]
  Rates                                   Rates[]
}

model HazardousClassifications {
  Id                                        Int                                         @id(map: "PK_HazardousClassification") @default(autoincrement())
  Code                                      String?                                     @db.VarChar(10)
  Name                                      String?                                     @db.VarChar(75)
  Enumeration                               String?                                     @db.VarChar(30)
  CommodityHazardousMaterialClassifications CommodityHazardousMaterialClassifications[]

  @@unique([Id, Code], map: "CK_HazardousClassifications_Code")
}

model HazardousClassQualifiers {
  Id                                        Int                                         @id(map: "PK_HazardousClassQualifiers") @default(autoincrement())
  Code                                      String                                      @db.Char(1)
  Enumeration                               String                                      @db.VarChar(30)
  Name                                      String                                      @db.VarChar(50)
  SortOrder                                 Int?
  CommodityHazardousMaterialClassifications CommodityHazardousMaterialClassifications[]
  ShipmentHazardousMaterialClassifications  ShipmentHazardousMaterialClassifications[]
  WaybillHazardousMaterialClassifications   WaybillHazardousMaterialClassifications[]

  @@unique([Id, Code], map: "IX_HazardousClassQualifiers_Code")
  @@unique([Id, Enumeration], map: "IX_HazardousClassQualifiers_Enumeration")
}

model HazardZoneCodes {
  Id                                  Int                                   @id(map: "PK_HazardZoneCodes") @default(autoincrement())
  Code                                String                                @db.Char(1)
  Enumeration                         String                                @db.VarChar(30)
  Name                                String                                @db.VarChar(50)
  SortOrder                           Int?
  CommodityHazardousMaterialFreeForms CommodityHazardousMaterialFreeForms[]
  ShipmentHazardousMaterialFreeForms  ShipmentHazardousMaterialFreeForms[]
  WaybillHazardousMaterialFreeForms   WaybillHazardousMaterialFreeForms[]

  @@unique([Id, Code], map: "IX_HazardZoneCodes_Code")
  @@unique([Id, Enumeration], map: "IX_HazardZoneCodes_Enumeration")
}

model Industries {
  Id             Int       @id(map: "PK_Industries") @default(autoincrement())
  Name           String    @db.VarChar(100)
  IndustryTypeId Int?
  Comments       String?   @db.VarChar(100)
  IsActive       Boolean   @default(true, map: "DF_Industries_IsActive")
  CreatedAt      DateTime
  UpdatedAt      DateTime?
  CreatedById    Int?
  UpdatedById    Int?
}

model IndustryTypes {
  Id          Int     @id(map: "PK_IndustryTypes") @default(autoincrement())
  Code        String  @db.Char(3)
  Enumeration String  @db.VarChar(30)
  Name        String  @db.VarChar(50)
  Description String? @db.VarChar(Max)
  IsActive    Boolean @default(true, map: "DF_IndustryTypes_IsActive")
  SortOrder   Int?
}

model InvoiceEquipments {
  Id                Int               @id(map: "PK_InvoiceEquipments") @default(autoincrement())
  InvoiceId         Int
  EquipmentCode     String            @db.VarChar(10)
  Weight            Int?
  WeightQualifierId Int?
  WeightQualifiers  WeightQualifiers? @relation(fields: [WeightQualifierId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_InvoiceEquipments_Invoices")
}

model Invoices {
  Id                                Int              @id(map: "PK_Invoices") @default(autoincrement())
  ClientId                          Int
  InvoiceStatusId                   Int?
  FreightAccountId                  Int?
  SummaryNumber                     String?          @db.VarChar(30)
  InvoiceNumber                     String?          @db.VarChar(30)
  LeadCarNumber                     String?          @db.VarChar(30)
  InvoiceBOLNumber                  String?          @db.VarChar(30)
  InvoiceTypeId                     Int?
  InvoicedDate                      DateTime?        @db.Date
  OriginCity                        String?          @db.VarChar(30)
  OriginState                       String?          @db.Char(2)
  DestinationCity                   String?          @db.VarChar(30)
  DestinationState                  String?          @db.Char(2)
  ShippedDate                       DateTime?        @db.Date
  ShipmentId                        Int?
  InvoiceParty                      String?          @db.VarChar(30)
  CurrencyId                        Int
  Comments                          String?          @db.VarChar(50)
  IsAssessorialBill                 Boolean?
  IsBalanceDue                      Boolean?
  CreatedById                       Int
  UpdatedById                       Int?
  CreatedAt                         DateTime         @default(now(), map: "DF_Invoices_CreatedAt")
  UpdatedAt                         DateTime?
  Clients                           Clients          @relation(fields: [ClientId], references: [Id], onUpdate: NoAction, map: "FK_Invoices_Clients")
  Users_Invoices_CreatedByIdToUsers Users            @relation("Invoices_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onUpdate: NoAction, map: "FK_Invoices_Users")
  Currencies                        Currencies       @relation(fields: [CurrencyId], references: [Id], onUpdate: NoAction, map: "FK_Invoices_Currencies")
  InvoiceStatuses                   InvoiceStatuses? @relation(fields: [InvoiceStatusId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Invoices_InvoiceStatuses")
  InvoiceTypes                      InvoiceTypes?    @relation(fields: [InvoiceTypeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Invoices_InvoiceTypes")
  Users_Invoices_UpdatedByIdToUsers Users?           @relation("Invoices_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Invoices_Users1")
}

model InvoiceStatuses {
  Id          Int        @id(map: "PK_InvoiceStatuses") @default(autoincrement())
  Enumeration String     @db.VarChar(30)
  Name        String     @db.VarChar(50)
  IsActive    Boolean    @default(true, map: "DF_InvoiceStatuses_IsActive")
  SortOrder   Int?
  Invoices    Invoices[]
}

model InvoiceTypes {
  Id          Int        @id(map: "PK_InvoiceTypes") @default(autoincrement())
  Enumeration String     @db.VarChar(30)
  Name        String     @db.VarChar(50)
  IsActive    Boolean    @default(true, map: "DF_InvoiceTypes_IsActive")
  SortOrder   Int?
  Invoices    Invoices[]
}

model Junctions {
  Id                                             Int      @id(map: "PK_Junctions") @default(autoincrement())
  CarrierId                                      Int
  JunctionCarrierId                              Int
  Name                                           String   @db.VarChar(19)
  Rule260                                        String   @db.VarChar(5)
  Splc                                           String   @db.VarChar(9)
  City                                           String   @db.VarChar(30)
  State                                          String   @db.VarChar(2)
  OperatingPlate                                 String?  @db.Char(1)
  OperatingWeight                                Int?
  Carriers_CarriersToJunctions_CarrierId         Carriers @relation("CarriersToJunctions_CarrierId", fields: [CarrierId], references: [Id], onUpdate: NoAction, map: "FK_Junctions_Carriers")
  Carriers_CarriersToJunctions_JunctionCarrierId Carriers @relation("CarriersToJunctions_JunctionCarrierId", fields: [JunctionCarrierId], references: [Id], onUpdate: NoAction, map: "FK_Junctions_Carriers1")

  @@index([City, Id, JunctionCarrierId, Name, Rule260, Splc, State, CarrierId], map: "IX_Junctions_CarrierId")
  @@index([CarrierId, City, Id, Name, Rule260, Splc, State, JunctionCarrierId], map: "IX_Junctions_JunctionCarrierId")
  @@index([CarrierId, City, Id, JunctionCarrierId, Name, Splc, State, Rule260], map: "IX_Junctions_Rule260")
}

model LoadedEmptyCodes {
  Id          Int     @id(map: "PK_LoadedEmptyCodes") @default(autoincrement())
  Code        String  @unique(map: "IX_LoadedEmptyCodes_Code") @db.Char(1)
  Enumeration String  @db.VarChar(30)
  Name        String  @db.VarChar(50)
  Description String? @db.VarChar(Max)
  IsActive    Boolean @default(true, map: "DF_LoadedEmptyCodes_IsActive")
  SortOrder   Int?
}

model LoadingAuthorityStatuses {
  Id          Int     @id(map: "PK_LoadingAuthorityStatuses") @default(autoincrement())
  Enumeration String? @db.VarChar(30)
  Name        String? @db.VarChar(50)
  IsActive    Boolean @default(true, map: "DF_LoadingAuthorityStatuses_IsActive")
  SortOrder   Int?
}

model Locations {
  Id                                 Int         @id(map: "PK_Locations") @default(autoincrement())
  ClientId                           Int
  Name                               String      @db.VarChar(50)
  IsActive                           Boolean
  CreatedAt                          DateTime
  UpdatedAt                          DateTime?
  CreatedById                        Int?
  UpdatedById                        Int?
  Code                               String?     @db.VarChar(50)
  Description                        String?     @db.VarChar(Max)
  Clients                            Clients     @relation(fields: [ClientId], references: [Id], onUpdate: NoAction, map: "FK_Locations_Clients")
  Users_Locations_CreatedByIdToUsers Users?      @relation("Locations_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Locations_Users_CreatedById")
  Users_Locations_UpdatedByIdToUsers Users?      @relation("Locations_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Locations_Users_UpdatedById")
  Patterns                           Patterns[]
  Shipments                          Shipments[]
}

model NotificationContacts {
  Id                                            Int                                     @id(map: "PK_NotificationContacts") @default(autoincrement())
  ClientId                                      Int
  Name                                          String                                  @db.VarChar(35)
  PhoneNumber                                   String?                                 @db.VarChar(30)
  FaxNumber                                     String?                                 @db.VarChar(30)
  EmailAddress                                  String                                  @db.VarChar(80)
  IsActive                                      Boolean                                 @default(true, map: "DF_NotificationContacts_IsActive")
  CreatedAt                                     DateTime                                @default(now(), map: "DF__Notificat__Creat__33015847")
  UpdatedAt                                     DateTime?
  CreatedById                                   Int?
  UpdatedById                                   Int?
  Clients                                       Clients                                 @relation(fields: [ClientId], references: [Id], onUpdate: NoAction, map: "FK_NotificationContacts_Clients")
  Users_NotificationContacts_CreatedByIdToUsers Users?                                  @relation("NotificationContacts_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_NotificationContacts_Users_CreatedById")
  Users_NotificationContacts_UpdatedByIdToUsers Users?                                  @relation("NotificationContacts_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_NotificationContacts_Users_UpdatedById")
  NotificationGroupNotificationContacts         NotificationGroupNotificationContacts[]
  PartyNotifications                            PartyNotifications[]
  PatternNotifications                          PatternNotifications[]
  ReportScheduleNotifications                   ReportScheduleNotifications[]
  ServiceLogNotifications                       ServiceLogNotifications[]
  ShipmentNotifications                         ShipmentNotifications[]

  @@index([Id, Name, ClientId], map: "IX_NotificationContacts_ClientId_IsActive")
}

model NotificationFtpLocations {
  Id                                                Int                           @id(map: "PK_NotificationFtpLocations") @default(autoincrement())
  ClientId                                          Int
  Name                                              String                        @db.VarChar(60)
  Server                                            String                        @db.VarChar(100)
  Port                                              Int?
  Secure                                            Boolean                       @default(false, map: "DF_otificationFtpLocations_Secure")
  Username                                          String                        @db.VarChar(50)
  Password                                          String                        @db.VarChar(50)
  Folder                                            String?                       @db.VarChar(200)
  IsActive                                          Boolean                       @default(true, map: "DF_otificationFtpLocations_IsActive")
  CreatedAt                                         DateTime                      @default(now(), map: "DF__Notificat__Creat__77A166AE")
  UpdatedAt                                         DateTime?
  CreatedById                                       Int?
  UpdatedById                                       Int?
  Clients                                           Clients                       @relation(fields: [ClientId], references: [Id], onUpdate: NoAction, map: "FK_NotificationFtpLocations_Clients")
  Users_NotificationFtpLocations_CreatedByIdToUsers Users?                        @relation("NotificationFtpLocations_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_NotificationFtpLocations_Users_CreatedById")
  Users_NotificationFtpLocations_UpdatedByIdToUsers Users?                        @relation("NotificationFtpLocations_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_NotificationFtpLocations_Users_UpdatedById")
  PartyNotifications                                PartyNotifications[]
  PatternNotifications                              PatternNotifications[]
  ReportScheduleNotifications                       ReportScheduleNotifications[]
  ServiceLogNotifications                           ServiceLogNotifications[]
  ShipmentNotifications                             ShipmentNotifications[]

  @@index([Id, Name, ClientId], map: "IX_NotificationFtpLocations_ClientId_IsActive")
}

model NotificationGroupNotificationContacts {
  Id                                                             Int                  @default(autoincrement())
  NotificationGroupId                                            Int
  NotificationContactId                                          Int
  CreatedAt                                                      DateTime             @default(now(), map: "DF__Notificat__Creat__34E9A0B9")
  UpdatedAt                                                      DateTime?
  CreatedById                                                    Int?
  UpdatedById                                                    Int?
  Users_NotificationGroupNotificationContacts_CreatedByIdToUsers Users?               @relation("NotificationGroupNotificationContacts_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_NotificationGroupNotificationContacts_Users_CreatedById")
  NotificationContacts                                           NotificationContacts @relation(fields: [NotificationContactId], references: [Id], onUpdate: NoAction, map: "FK_NotificationGroupNotificationContacts_NotificationContacts")
  NotificationGroups                                             NotificationGroups   @relation(fields: [NotificationGroupId], references: [Id], onUpdate: NoAction, map: "FK_NotificationGroupNotificationContacts_NotificationGroups")
  Users_NotificationGroupNotificationContacts_UpdatedByIdToUsers Users?               @relation("NotificationGroupNotificationContacts_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_NotificationGroupNotificationContacts_Users_UpdatedById")

  @@id([NotificationGroupId, NotificationContactId], map: "PK_NotificationGroupContacts")
}

model NotificationGroups {
  Id                                          Int                                     @id(map: "PK_NotificationGroups") @default(autoincrement())
  ClientId                                    Int
  Name                                        String                                  @db.VarChar(60)
  Description                                 String?                                 @db.VarChar(Max)
  IsActive                                    Boolean                                 @default(true, map: "DF_NotificationGroups_IsActive")
  CreatedAt                                   DateTime                                @default(now(), map: "DF__Notificat__Creat__35DDC4F2")
  UpdatedAt                                   DateTime?
  CreatedById                                 Int?
  UpdatedById                                 Int?
  Clients                                     Clients                                 @relation(fields: [ClientId], references: [Id], onUpdate: NoAction, map: "FK_NotificationGroups_Clients")
  Users_NotificationGroups_CreatedByIdToUsers Users?                                  @relation("NotificationGroups_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_NotificationGroups_Users_CreatedById")
  Users_NotificationGroups_UpdatedByIdToUsers Users?                                  @relation("NotificationGroups_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_NotificationGroups_Users_UpdatedById")
  NotificationGroupNotificationContacts       NotificationGroupNotificationContacts[]
  PartyNotifications                          PartyNotifications[]
  PatternNotifications                        PatternNotifications[]
  ReportScheduleNotifications                 ReportScheduleNotifications[]
  ServiceLogNotifications                     ServiceLogNotifications[]
  ShipmentNotifications                       ShipmentNotifications[]

  @@index([Id, Name, ClientId], map: "IX_NotificationGroups_ClientId_IsActive")
}

model NotificationTypes {
  Id                          Int                           @id(map: "PK_NotificationTypes") @default(autoincrement())
  Enumeration                 String                        @db.VarChar(30)
  Name                        String                        @db.VarChar(50)
  IsActive                    Boolean                       @default(true, map: "DF_NotificationContactTypes_IsActive")
  SortOrder                   Int?
  PartyNotifications          PartyNotifications[]
  PatternNotifications        PatternNotifications[]
  ReportScheduleNotifications ReportScheduleNotifications[]
  ServiceLogNotifications     ServiceLogNotifications[]
  ShipmentNotifications       ShipmentNotifications[]
}

model OwnershipTypes {
  Id          Int     @id(map: "PK_OwnershipTypes") @default(autoincrement())
  Code        String  @db.Char(1)
  Enumeration String  @db.VarChar(30)
  Name        String  @db.VarChar(50)
  Description String? @db.VarChar(Max)
  IsActive    Boolean @default(true, map: "DF_OwnershipTypes_IsActive")
  SortOrder   Int?
}

model PackingForms {
  Id                        Int                         @id(map: "PK_PackingForms") @default(autoincrement())
  Code                      String                      @db.Char(3)
  Enumeration               String                      @db.VarChar(30)
  Name                      String                      @db.VarChar(50)
  IsActive                  Boolean                     @default(true, map: "DF_PackingForms_IsActive")
  SortOrder                 Int?
  FreightInvoiceCommodities FreightInvoiceCommodities[]
  PatternCommodities        PatternCommodities[]
  ShipmentCommodities       ShipmentCommodities[]
  WaybillCommodities        WaybillCommodities[]

  @@unique([Id, Code], map: "IX_PackingForms_Code")
  @@unique([Id, Enumeration], map: "IX_PackingForms_Enumeration")
}

model PackingGroupCodes {
  Id                          Int                           @id(map: "PK_PackingGroupCodes") @default(autoincrement())
  Code                        String                        @db.VarChar(3)
  Enumeration                 String                        @db.VarChar(30)
  Name                        String                        @db.VarChar(50)
  CommodityHazardousMaterials CommodityHazardousMaterials[]
  ShipmentHazardousMaterials  ShipmentHazardousMaterials[]
  WaybillHazardousMaterials   WaybillHazardousMaterials[]

  @@unique([Id, Code], map: "IX_PackingGroupCodes_Code")
  @@unique([Id, Enumeration], map: "IX_PackingGroupCodes_Enumeration")
}

model Parties {
  Id                               Int                               @id(map: "PK_Parties") @default(autoincrement())
  ClientId                         Int
  DisplayName                      String                            @db.VarChar(60)
  Name                             String                            @db.VarChar(35)
  AddressLine1                     String?                           @db.VarChar(55)
  AddressLine2                     String?                           @db.VarChar(55)
  AddressLine3                     String?                           @db.VarChar(55)
  AddressLine4                     String?                           @db.VarChar(55)
  City                             String?                           @db.VarChar(30)
  State                            String?                           @db.Char(2)
  PostalCode                       String?                           @db.VarChar(15)
  Country                          String?                           @db.Char(2)
  Splc                             String?                           @db.VarChar(9)
  CifNumber                        String?                           @db.VarChar(80)
  OriginCode                       String?                           @db.VarChar(13)
  DestinationCode                  String?                           @db.VarChar(13)
  FacilityCode                     String?                           @db.VarChar(13)
  IsActive                         Boolean                           @default(true, map: "DF_Parties_IsActive")
  SourceId                         Int?
  CreatedAt                        DateTime                          @default(now(), map: "DF__Parties__Created__38BA319D")
  UpdatedAt                        DateTime?
  CreatedById                      Int?
  UpdatedById                      Int?
  Address                          String?                           @db.VarChar(330)
  Clients                          Clients                           @relation(fields: [ClientId], references: [Id], onUpdate: NoAction, map: "FK_Parties_Clients")
  Users_Parties_CreatedByIdToUsers Users?                            @relation("Parties_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Parties_Users_CreatedById")
  Users_Parties_UpdatedByIdToUsers Users?                            @relation("Parties_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Parties_Users_UpdatedById")
  DemurrageParties                 DemurrageParties[]
  DiversionParties                 DiversionParties[]
  PartyAliases                     PartyAliases[]
  PartyContacts                    PartyContacts[]
  PartyNotifications               PartyNotifications[]
  PartyPartyTypes                  PartyPartyTypes[]
  PartyRailRoadDetails             PartyRailRoadDetails[]
  PatternEmptyDispositionParties   PatternEmptyDispositionParties[]
  PatternParties                   PatternParties[]
  ShipmentEmptyDispositionParties  ShipmentEmptyDispositionParties[]
  ShipmentParties                  ShipmentParties[]

  @@index([Id, Name, ClientId, IsActive], map: "IX_Parties_ClientId_IsActive")
  @@index([SourceId], map: "IX_Parties_SourceId")
}

model PartyAliases {
  Id                                    Int       @id(map: "PK_PartyAliases") @default(autoincrement())
  PartyId                               Int
  Name                                  String    @db.VarChar(35)
  CreatedAt                             DateTime  @default(now(), map: "DF__PartyAlia__Creat__39AE55D6")
  UpdatedAt                             DateTime?
  CreatedById                           Int?
  UpdatedById                           Int?
  Users_PartyAliases_CreatedByIdToUsers Users?    @relation("PartyAliases_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PartyAliases_Users_CreatedById")
  Parties                               Parties   @relation(fields: [PartyId], references: [Id], onUpdate: NoAction, map: "FK_PartyAliases_Parties")
  Users_PartyAliases_UpdatedByIdToUsers Users?    @relation("PartyAliases_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PartyAliases_Users_UpdatedById")
}

model PartyContacts {
  Id                                     Int          @id(map: "PK_PartyContacts") @default(autoincrement())
  PartyId                                Int
  ContactId                              Int
  ContactTypeId                          Int
  CreatedAt                              DateTime     @default(now(), map: "DF__PartyCont__Creat__3AA27A0F")
  UpdatedAt                              DateTime?
  CreatedById                            Int?
  UpdatedById                            Int?
  Contacts                               Contacts     @relation(fields: [ContactId], references: [Id], onUpdate: NoAction, map: "FK_PartyContacts_Contacts")
  ContactTypes                           ContactTypes @relation(fields: [ContactTypeId], references: [Id], onUpdate: NoAction, map: "FK_PartyContacts_ContactTypes")
  Users_PartyContacts_CreatedByIdToUsers Users?       @relation("PartyContacts_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PartyContacts_Users_CreatedById")
  Parties                                Parties      @relation(fields: [PartyId], references: [Id], onUpdate: NoAction, map: "FK_PartyContacts_Parties")
  Users_PartyContacts_UpdatedByIdToUsers Users?       @relation("PartyContacts_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PartyContacts_Users_UpdatedById")
}

model PartyNotifications {
  Id                                          Int                       @id(map: "PK_PartyNotifications") @default(autoincrement())
  PartyId                                     Int
  NotificationTypeId                          Int
  NotificationContactId                       Int?
  NotificationGroupId                         Int?
  NotificationFtpLocationId                   Int?
  Name                                        String?                   @db.VarChar(35)
  EmailAddress                                String?                   @db.VarChar(80)
  PhoneNumber                                 String?                   @db.VarChar(30)
  FaxNumber                                   String?                   @db.VarChar(30)
  CreatedAt                                   DateTime                  @default(now(), map: "DF__PartyNoti__Creat__3B969E48")
  UpdatedAt                                   DateTime?
  CreatedById                                 Int?
  UpdatedById                                 Int?
  Users_PartyNotifications_CreatedByIdToUsers Users?                    @relation("PartyNotifications_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PartyNotifications_Users_CreatedById")
  NotificationContacts                        NotificationContacts?     @relation(fields: [NotificationContactId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PartyNotifications_NotificationContacts")
  NotificationFtpLocations                    NotificationFtpLocations? @relation(fields: [NotificationFtpLocationId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PartyNotifications_NotificationFtpLocations")
  NotificationGroups                          NotificationGroups?       @relation(fields: [NotificationGroupId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PartyNotifications_NotificationGroups")
  NotificationTypes                           NotificationTypes         @relation(fields: [NotificationTypeId], references: [Id], onUpdate: NoAction, map: "FK_PartyNotifications_NotificationTypes")
  Parties                                     Parties                   @relation(fields: [PartyId], references: [Id], onUpdate: NoAction, map: "FK_PartyNotifications_Parties")
  Users_PartyNotifications_UpdatedByIdToUsers Users?                    @relation("PartyNotifications_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PartyNotifications_Users_UpdatedById")
}

model PartyPartyTypes {
  Id                                       Int        @default(autoincrement())
  PartyId                                  Int
  PartyTypeId                              Int
  CreatedAt                                DateTime   @default(now(), map: "DF__PartyPart__Creat__3C8AC281")
  UpdatedAt                                DateTime?
  CreatedById                              Int?
  UpdatedById                              Int?
  Users_PartyPartyTypes_CreatedByIdToUsers Users?     @relation("PartyPartyTypes_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PartyPartyTypes_Users_CreatedById")
  Parties                                  Parties    @relation(fields: [PartyId], references: [Id], onUpdate: NoAction, map: "FK_PartyPartyTypes_Parties")
  PartyTypes                               PartyTypes @relation(fields: [PartyTypeId], references: [Id], onUpdate: NoAction, map: "FK_PartyPartyTypes_PartyTypes")
  Users_PartyPartyTypes_UpdatedByIdToUsers Users?     @relation("PartyPartyTypes_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PartyPartyTypes_Users_UpdatedById")

  @@id([PartyId, PartyTypeId], map: "PK_PartyPartyTypes")
}

model PartyRailRoadDetails {
  Id                                            Int                  @id(map: "PK_PartyRailRoadDetails") @default(autoincrement())
  PartyId                                       Int
  RailRoadStatusId                              Int?
  MaxGrossWeight                                Int?
  Contact                                       String?              @db.VarChar(50)
  Service                                       String?              @db.VarChar(50)
  Road                                          String?              @db.VarChar(50)
  Comments                                      String?              @db.VarChar(100)
  CreatedAt                                     DateTime
  UpdatedAt                                     DateTime?
  CreatedById                                   Int?
  UpdatedById                                   Int?
  Users_PartyRailRoadDetails_CreatedByIdToUsers Users?               @relation("PartyRailRoadDetails_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PartyRailRoadDetails_Users_CreatedById")
  Parties                                       Parties              @relation(fields: [PartyId], references: [Id], onUpdate: NoAction, map: "FK_PartyRailRoadDetails_Parties")
  RailRoadStatusTypes                           RailRoadStatusTypes? @relation(fields: [RailRoadStatusId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PartyRailRoadDetails_RailRoadStatusTypes")
  Users_PartyRailRoadDetails_UpdatedByIdToUsers Users?               @relation("PartyRailRoadDetails_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PartyRailRoadDetails_Users_UpdatedById")
}

model PartyTypeGroupPartyTypes {
  Id                                                Int             @default(autoincrement())
  PartyTypeGroupId                                  Int
  PartyTypeId                                       Int
  CreatedAt                                         DateTime        @default(now(), map: "DF__PartyType__Creat__3D7EE6BA")
  UpdatedAt                                         DateTime?
  CreatedById                                       Int?
  UpdatedById                                       Int?
  Users_PartyTypeGroupPartyTypes_CreatedByIdToUsers Users?          @relation("PartyTypeGroupPartyTypes_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PartyTypeGroupPartyTypes_Users_CreatedById")
  PartyTypeGroups                                   PartyTypeGroups @relation(fields: [PartyTypeGroupId], references: [Id], onUpdate: NoAction, map: "FK_PartyTypePartyTypeGroups_PartyTypeGroups")
  PartyTypes                                        PartyTypes      @relation(fields: [PartyTypeId], references: [Id], onUpdate: NoAction, map: "FK_PartyTypePartyTypeGroups_PartyTypes")
  Users_PartyTypeGroupPartyTypes_UpdatedByIdToUsers Users?          @relation("PartyTypeGroupPartyTypes_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PartyTypeGroupPartyTypes_Users_UpdatedById")

  @@id([PartyTypeId, PartyTypeGroupId], map: "PK_PartyTypePartyTypeGroups")
}

model PartyTypeGroups {
  Id                       Int                        @id(map: "PK_PartyGroups") @default(autoincrement())
  Enumeration              String                     @db.VarChar(30)
  Name                     String                     @db.VarChar(50)
  IsActive                 Boolean                    @default(true, map: "DF_PartyGroups_IsActive")
  SortOrder                Int?
  PartyTypeGroupPartyTypes PartyTypeGroupPartyTypes[]
}

model PartyTypes {
  Id                              Int                               @id(map: "PK_PartyTypes") @default(autoincrement())
  Code                            String                            @db.VarChar(3)
  Enumeration                     String                            @db.VarChar(30)
  Name                            String                            @db.VarChar(50)
  IsActive                        Boolean                           @default(true, map: "DF_PartyTypes_IsActive")
  SortOrder                       Int?
  DemurrageParties                DemurrageParties[]
  DiversionParties                DiversionParties[]
  FreightInvoiceParties           FreightInvoiceParties[]
  PartyPartyTypes                 PartyPartyTypes[]
  PartyTypeGroupPartyTypes        PartyTypeGroupPartyTypes[]
  PatternEmptyDispositionParties  PatternEmptyDispositionParties[]
  PatternParties                  PatternParties[]
  ShipmentEmptyDispositionParties ShipmentEmptyDispositionParties[]
  ShipmentParties                 ShipmentParties[]
  WaybillEmptyDispositionParties  WaybillEmptyDispositionParties[]
  WaybillParties                  WaybillParties[]

  @@unique([Id, Code], map: "IX_PartyTypes_Code")
  @@unique([Id, Enumeration], map: "IX_PartyTypes_Enumeration")
}

model PatternAccountCodes {
  Id                                           Int              @default(autoincrement())
  PatternId                                    Int
  AccountCodeTypeId                            Int
  AccountCode                                  String           @db.VarChar(50)
  CreatedAt                                    DateTime         @default(now(), map: "DF__PatternAc__Creat__405B5365")
  UpdatedAt                                    DateTime?
  CreatedById                                  Int?
  UpdatedById                                  Int?
  AccountCodeTypes                             AccountCodeTypes @relation(fields: [AccountCodeTypeId], references: [Id], onUpdate: NoAction, map: "FK_PatternAccountCodes_AccountCodeTypes")
  Users_PatternAccountCodes_CreatedByIdToUsers Users?           @relation("PatternAccountCodes_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternAccountCodes_Users_CreatedById")
  Patterns                                     Patterns         @relation(fields: [PatternId], references: [Id], onUpdate: NoAction, map: "FK_PatternAccountCodes_Patterns")
  Users_PatternAccountCodes_UpdatedByIdToUsers Users?           @relation("PatternAccountCodes_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternAccountCodes_Users_UpdatedById")

  @@id([PatternId, AccountCodeTypeId], map: "PK_PatternAccountCodes")
}

model PatternCommodities {
  Id                                          Int          @id(map: "PK_PatternCommodities") @default(autoincrement())
  PatternId                                   Int
  CommodityId                                 Int
  PackingFormId                               Int
  CreatedAt                                   DateTime     @default(now(), map: "DF__PatternCo__Creat__414F779E")
  UpdatedAt                                   DateTime?
  CreatedById                                 Int?
  UpdatedById                                 Int?
  Commodities                                 Commodities  @relation(fields: [CommodityId], references: [Id], onUpdate: NoAction, map: "FK_PatternCommodities_Commodities")
  Users_PatternCommodities_CreatedByIdToUsers Users?       @relation("PatternCommodities_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternCommodities_Users_CreatedById")
  PackingForms                                PackingForms @relation(fields: [PackingFormId], references: [Id], onUpdate: NoAction, map: "FK_PatternCommodities_PackingForms")
  Patterns                                    Patterns     @relation(fields: [PatternId], references: [Id], onUpdate: NoAction, map: "FK_PatternCommodities_Patterns")
  Users_PatternCommodities_UpdatedByIdToUsers Users?       @relation("PatternCommodities_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternCommodities_Users_UpdatedById")
}

model PatternContacts {
  Id                                       Int          @id(map: "PK_PatternContacts") @default(autoincrement())
  PatternId                                Int
  ContactId                                Int
  ContactTypeId                            Int
  IsDeleted                                Boolean      @default(false, map: "DF_PatternContacts_IsDeleted")
  CreatedAt                                DateTime     @default(now(), map: "DF__PatternCo__Creat__42439BD7")
  UpdatedAt                                DateTime?
  CreatedById                              Int?
  UpdatedById                              Int?
  Contacts                                 Contacts     @relation(fields: [ContactId], references: [Id], onUpdate: NoAction, map: "FK_PatternContacts_Contacts")
  ContactTypes                             ContactTypes @relation(fields: [ContactTypeId], references: [Id], onUpdate: NoAction, map: "FK_PatternContacts_ContactTypes")
  Users_PatternContacts_CreatedByIdToUsers Users?       @relation("PatternContacts_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternContacts_Users_CreatedById")
  Patterns                                 Patterns     @relation(fields: [PatternId], references: [Id], onUpdate: NoAction, map: "FK_PatternContacts_Patterns")
  Users_PatternContacts_UpdatedByIdToUsers Users?       @relation("PatternContacts_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternContacts_Users_UpdatedById")
}

model PatternCustomReferences {
  Id                                               Int                  @id(map: "PK_PatternCustomReferences") @default(autoincrement())
  PatternId                                        Int
  CustomReferenceTypeId                            Int
  ReferenceText                                    String?              @db.VarChar(80)
  IsRequired                                       Boolean              @default(false, map: "DF_PatternCustomReferences_IsRequired")
  CreatedAt                                        DateTime             @default(now(), map: "DF__PatternCu__Creat__4337C010")
  UpdatedAt                                        DateTime?
  CreatedById                                      Int?
  UpdatedById                                      Int?
  Users_PatternCustomReferences_CreatedByIdToUsers Users?               @relation("PatternCustomReferences_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternCustomReferences_Users_CreatedById")
  CustomReferenceTypes                             CustomReferenceTypes @relation(fields: [CustomReferenceTypeId], references: [Id], onUpdate: NoAction, map: "FK_PatternCustomReferences_CustomReferenceTypes")
  Patterns                                         Patterns             @relation(fields: [PatternId], references: [Id], onUpdate: NoAction, map: "FK_PatternCustomReferences_Patterns")
  Users_PatternCustomReferences_UpdatedByIdToUsers Users?               @relation("PatternCustomReferences_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternCustomReferences_Users_UpdatedById")
}

model PatternEmptyDispositionParties {
  Id                                                      Int        @id(map: "PK_PatternEmptyDispositionParties") @default(autoincrement())
  PatternId                                               Int
  PartyId                                                 Int
  PartyTypeId                                             Int
  CreatedAt                                               DateTime   @default(now(), map: "DF__PatternEm__Creat__442BE449")
  UpdatedAt                                               DateTime?
  CreatedById                                             Int?
  UpdatedById                                             Int?
  Users_PatternEmptyDispositionParties_CreatedByIdToUsers Users?     @relation("PatternEmptyDispositionParties_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternEmptyDispositionParties_Users_CreatedById")
  Parties                                                 Parties    @relation(fields: [PartyId], references: [Id], onUpdate: NoAction, map: "FK_PatternEmptyDispositionParties_Parties")
  PartyTypes                                              PartyTypes @relation(fields: [PartyTypeId], references: [Id], onUpdate: NoAction, map: "FK_PatternEmptyDispositionParties_PartyTypes")
  Patterns                                                Patterns   @relation(fields: [PatternId], references: [Id], onUpdate: NoAction, map: "FK_PatternEmptyDispositionParties_Patterns")
  Users_PatternEmptyDispositionParties_UpdatedByIdToUsers Users?     @relation("PatternEmptyDispositionParties_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternEmptyDispositionParties_Users_UpdatedById")
}

model PatternEmptyDispositionRouteSegments {
  Id                                                            Int                  @id(map: "PK_PatternEmptyDispositionRouteSegments") @default(autoincrement())
  PatternId                                                     Int
  SequenceNumber                                                Int
  Scac                                                          String               @db.VarChar(4)
  RoutingSequenceCodeId                                         Int
  JunctionRule260                                               String?              @db.VarChar(5)
  JunctionSplc                                                  String?              @db.VarChar(9)
  CreatedAt                                                     DateTime             @default(now(), map: "DF__PatternEm__Creat__45200882")
  UpdatedAt                                                     DateTime?
  CreatedById                                                   Int?
  UpdatedById                                                   Int?
  Users_PatternEmptyDispositionRouteSegments_CreatedByIdToUsers Users?               @relation("PatternEmptyDispositionRouteSegments_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternEmptyDispositionRouteSegments_Users_CreatedById")
  Patterns                                                      Patterns             @relation(fields: [PatternId], references: [Id], onUpdate: NoAction, map: "FK_PatternEmptyDispositionRouteSegments_Patterns")
  RoutingSequenceCodes                                          RoutingSequenceCodes @relation(fields: [RoutingSequenceCodeId], references: [Id], onUpdate: NoAction, map: "FK_PatternEmptyDispositionRouteSegments_RoutingSequenceCodes")
  Users_PatternEmptyDispositionRouteSegments_UpdatedByIdToUsers Users?               @relation("PatternEmptyDispositionRouteSegments_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternEmptyDispositionRouteSegments_Users_UpdatedById")
}

model PatternExtendedReferences {
  Id                                                 Int                    @id(map: "PK_PatternExtendedReferences") @default(autoincrement())
  PatternId                                          Int
  ExtendedReferenceTypeId                            Int
  IsRequired                                         Boolean                @default(false, map: "DF_PatternExtendedReferences_IsRequired")
  ReferenceText                                      String?                @db.VarChar(80)
  CreatedAt                                          DateTime               @default(now(), map: "DF__PatternEx__Creat__46142CBB")
  UpdatedAt                                          DateTime?
  CreatedById                                        Int?
  UpdatedById                                        Int?
  Users_PatternExtendedReferences_CreatedByIdToUsers Users?                 @relation("PatternExtendedReferences_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternExtendedReferences_Users_CreatedById")
  ExtendedReferenceTypes                             ExtendedReferenceTypes @relation(fields: [ExtendedReferenceTypeId], references: [Id], onUpdate: NoAction, map: "FK_PatternExtendedReferences_ExtendedReferenceTypes")
  Patterns                                           Patterns               @relation(fields: [PatternId], references: [Id], onUpdate: NoAction, map: "FK_PatternExtendedReferences_Patterns")
  Users_PatternExtendedReferences_UpdatedByIdToUsers Users?                 @relation("PatternExtendedReferences_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternExtendedReferences_Users_UpdatedById")

  @@index([ReferenceText, PatternId, ExtendedReferenceTypeId], map: "IX_PatternExtendedReferences_ExtendedReferenceTypeId")
}

model PatternNotifications {
  Id                                            Int                       @id(map: "PK_PatternNotifications") @default(autoincrement())
  PatternId                                     Int
  NotificationTypeId                            Int
  NotificationContactId                         Int?
  NotificationGroupId                           Int?
  NotificationFtpLocationId                     Int?
  Name                                          String?                   @db.VarChar(35)
  EmailAddress                                  String?                   @db.VarChar(80)
  PhoneNumber                                   String?                   @db.VarChar(30)
  FaxNumber                                     String?                   @db.VarChar(30)
  CreatedAt                                     DateTime                  @default(now(), map: "DF__PatternNo__Creat__470850F4")
  UpdatedAt                                     DateTime?
  CreatedById                                   Int?
  UpdatedById                                   Int?
  Users_PatternNotifications_CreatedByIdToUsers Users?                    @relation("PatternNotifications_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternNotifications_Users_CreatedById")
  NotificationContacts                          NotificationContacts?     @relation(fields: [NotificationContactId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternNotifications_NotificationContacts")
  NotificationFtpLocations                      NotificationFtpLocations? @relation(fields: [NotificationFtpLocationId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternNotifications_NotificationFtpLocations")
  NotificationGroups                            NotificationGroups?       @relation(fields: [NotificationGroupId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternNotifications_NotificationGroups")
  NotificationTypes                             NotificationTypes         @relation(fields: [NotificationTypeId], references: [Id], onUpdate: NoAction, map: "FK_PatternNotifications_NotificationTypes")
  Patterns                                      Patterns                  @relation(fields: [PatternId], references: [Id], onUpdate: NoAction, map: "FK_PatternNotifications_Patterns")
  Users_PatternNotifications_UpdatedByIdToUsers Users?                    @relation("PatternNotifications_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternNotifications_Users_UpdatedById")
}

model PatternParties {
  Id                                      Int                           @id(map: "PK_PatternParties") @default(autoincrement())
  PatternId                               Int
  PartyId                                 Int
  PartyTypeId                             Int
  CreatedAt                               DateTime                      @default(now(), map: "DF__PatternPa__Creat__47FC752D")
  UpdatedAt                               DateTime?
  CreatedById                             Int?
  UpdatedById                             Int?
  SourceId                                Int?
  Users_PatternParties_CreatedByIdToUsers Users?                        @relation("PatternParties_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternParties_Users_CreatedById")
  Parties                                 Parties                       @relation(fields: [PartyId], references: [Id], onUpdate: NoAction, map: "FK_PatternParties_Parties")
  PartyTypes                              PartyTypes                    @relation(fields: [PartyTypeId], references: [Id], onUpdate: NoAction, map: "FK_PatternParties_PartyTypes")
  Patterns                                Patterns                      @relation(fields: [PatternId], references: [Id], onUpdate: NoAction, map: "FK_PatternParties_Patterns")
  Users_PatternParties_UpdatedByIdToUsers Users?                        @relation("PatternParties_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternParties_Users_UpdatedById")
  PatternPartyBillingSegments             PatternPartyBillingSegments[]

  @@unique([PatternId, PartyId, PartyTypeId], map: "IX_PatternParties_Unique")
  @@index([Id, PartyId, PatternId, PartyTypeId], map: "IX_PatternParties_PartyTypeId")
}

model PatternPartyBillingSegments {
  Id                                                   Int            @id(map: "PK_PatternPartyBillingSegments") @default(autoincrement())
  PatternPartyId                                       Int
  RateId                                               Int?
  OriginFsac                                           String?        @db.VarChar(5)
  DestinationFsac                                      String?        @db.VarChar(5)
  OriginSplc                                           String?        @db.VarChar(9)
  OriginCity                                           String         @db.VarChar(30)
  OriginState                                          String?        @db.Char(2)
  OriginCountry                                        String?        @db.Char(2)
  DestinationSplc                                      String?        @db.VarChar(9)
  DestinationCity                                      String         @db.VarChar(30)
  DestinationState                                     String?        @db.Char(2)
  DestinationCountry                                   String?        @db.Char(2)
  Scac1                                                String         @db.VarChar(4)
  Scac2                                                String?        @db.VarChar(4)
  Scac3                                                String?        @db.VarChar(4)
  CreatedAt                                            DateTime       @default(now(), map: "DF__PatternPa__Creat__48F09966")
  UpdatedAt                                            DateTime?
  CreatedById                                          Int?
  UpdatedById                                          Int?
  Users_PatternPartyBillingSegments_CreatedByIdToUsers Users?         @relation("PatternPartyBillingSegments_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternPartyBillingSegments_Users_CreatedById")
  PatternParties                                       PatternParties @relation(fields: [PatternPartyId], references: [Id], onUpdate: NoAction, map: "FK_PatternPartyBillingSegments_PatternParties")
  Rates                                                Rates?         @relation(fields: [RateId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternPartyBillingSegments_Rates")
  Users_PatternPartyBillingSegments_UpdatedByIdToUsers Users?         @relation("PatternPartyBillingSegments_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternPartyBillingSegments_Users_UpdatedById")
}

model PatternPriceAuthorities {
  Id                                               Int                 @id(map: "PK_PatternPriceAuthorities") @default(autoincrement())
  PatternId                                        Int
  PriceAuthorityTypeId                             Int
  CarrierId                                        Int?
  ContractNumber                                   String              @db.VarChar(30)
  AuthorityNumber                                  String?             @db.VarChar(10)
  AuthoritySuffix                                  String?             @db.VarChar(2)
  CreatedAt                                        DateTime            @default(now(), map: "DF__PatternPr__Creat__49E4BD9F")
  UpdatedAt                                        DateTime?
  CreatedById                                      Int?
  UpdatedById                                      Int?
  Carriers                                         Carriers?           @relation(fields: [CarrierId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternPriceAuthorities_Carriers")
  Users_PatternPriceAuthorities_CreatedByIdToUsers Users?              @relation("PatternPriceAuthorities_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternPriceAuthorities_Users_CreatedById")
  Patterns                                         Patterns            @relation(fields: [PatternId], references: [Id], onUpdate: NoAction, map: "FK_PatternPriceAuthorities_Patterns")
  PriceAuthorityTypes                              PriceAuthorityTypes @relation(fields: [PriceAuthorityTypeId], references: [Id], onUpdate: NoAction, map: "FK_PatternPriceAuthorities_PriceAuthorityTypes")
  Users_PatternPriceAuthorities_UpdatedByIdToUsers Users?              @relation("PatternPriceAuthorities_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternPriceAuthorities_Users_UpdatedById")
}

model PatternRateDetails {
  Id                      Int            @id(map: "PK_PatternRateDetails") @default(autoincrement())
  PatternId               Int
  ClientId                Int?
  PatternName             String?        @db.VarChar(Max)
  TotalCharge             Float          @db.Money
  OriginCity              String         @db.VarChar(30)
  OriginState             String         @db.VarChar(2)
  DestinationCity         String         @db.VarChar(30)
  DestinationState        String         @db.VarChar(2)
  PatternRoute            String?        @db.VarChar(Max)
  EstimatedTransitDays    Int?
  Consignee               String?        @db.VarChar(Max)
  PaymentMethodId         Int
  PaymentMethod           String?        @db.VarChar(50)
  CommodityId             Int?
  Commodityname           String?        @db.VarChar(Max)
  Stcc                    String?        @db.VarChar(7)
  PricingTier             Int?
  CarBlockCondition       String?        @db.VarChar(50)
  CarLengthCondition      String?        @db.VarChar(50)
  CarWeightCondition      String?        @db.VarChar(50)
  CubicFeetCondition      String?        @db.VarChar(50)
  GallonCapacityCondition String?        @db.VarChar(50)
  MileageCondition        String?        @db.VarChar(50)
  RateConditions          String?        @db.VarChar(Max)
  Scac1                   String?        @db.VarChar(4)
  FreightCharge1          Float?         @db.Money
  FuelSurcharge1          Float?         @db.Money
  FuelSurchargeCode1      String?        @db.VarChar(50)
  Currency1               String?        @db.VarChar(3)
  RateUnit1               String?        @db.VarChar(50)
  RateAuthority1          String?        @db.VarChar(50)
  RailMiles1              String?        @db.VarChar(10)
  EffectiveDate1          DateTime?      @db.DateTime
  ExpirationDate1         DateTime?      @db.DateTime
  Scac2                   String?        @db.VarChar(4)
  FreightCharge2          Float?         @db.Money
  FuelSurcharge2          Float?         @db.Money
  FuelSurchargeCode2      String?        @db.VarChar(50)
  Currency2               String?        @db.VarChar(3)
  RateUnit2               String?        @db.VarChar(50)
  RateAuthority2          String?        @db.VarChar(50)
  RailMiles2              String?        @db.VarChar(10)
  EffectiveDate2          DateTime?      @db.DateTime
  ExpirationDate2         DateTime?      @db.DateTime
  Scac3                   String?        @db.VarChar(4)
  FreightCharge3          Float?         @db.Money
  FuelSurcharge3          Float?         @db.Money
  FuelSurchargeCode3      String?        @db.VarChar(50)
  Currency3               String?        @db.VarChar(3)
  RateUnit3               String?        @db.VarChar(50)
  RateAuthority3          String?        @db.VarChar(50)
  RailMiles3              String?        @db.VarChar(10)
  EffectiveDate3          DateTime?      @db.DateTime
  ExpirationDate3         DateTime?      @db.DateTime
  Scac4                   String?        @db.VarChar(4)
  FreightCharge4          Float?         @db.Money
  FuelSurcharge4          Float?         @db.Money
  FuelSurchargeCode4      String?        @db.VarChar(50)
  Currency4               String?        @db.VarChar(3)
  RateUnit4               String?        @db.VarChar(50)
  RateAuthority4          String?        @db.VarChar(50)
  RailMiles4              String?        @db.VarChar(10)
  EffectiveDate4          DateTime?      @db.DateTime
  ExpirationDate4         DateTime?      @db.DateTime
  Scac5                   String?        @db.VarChar(4)
  FreightCharge5          Float?         @db.Money
  FuelSurcharge5          Float?         @db.Money
  FuelSurchargeCode5      String?        @db.VarChar(50)
  Currency5               String?        @db.VarChar(3)
  RateUnit5               String?        @db.VarChar(50)
  RateAuthority5          String?        @db.VarChar(50)
  RailMiles5              String?        @db.VarChar(10)
  EffectiveDate5          DateTime?      @db.DateTime
  ExpirationDate5         DateTime?      @db.DateTime
  CarBlockSizeMinimum     Int?
  CarBlockSizeMaximum     Int?
  CarLengthMinimum        Int?
  CarLengthMaximum        Int?
  CarWeightMinimum        Int?
  CarWeightMaximum        Int?
  CubicFeetMinimum        Int?
  CubicFeetMaximum        Int?
  GallonCapacityMinimum   Int?
  GallonCapacityMaximum   Int?
  MileageMinimum          Int?
  MileageMaximum          Int?
  EquipmentTypeId         Int?
  DotRailCarClassId       Int?
  IsPrivateEquipment      Boolean?
  PatternComments         String?        @db.VarChar(Max)
  IsTotalChargeMaximum    Boolean
  RateCondition1          String?        @db.VarChar(Max)
  RateCondition2          String?        @db.VarChar(Max)
  RateCondition3          String?        @db.VarChar(Max)
  RateCondition4          String?        @db.VarChar(Max)
  RateCondition5          String?        @db.VarChar(Max)
  MinEffectiveDate        DateTime?      @db.DateTime
  MaxExpirationDate       DateTime?      @db.DateTime
  Commodities             Commodities?   @relation(fields: [CommodityId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternRateDetails_Commodities")
  Patterns                Patterns       @relation(fields: [PatternId], references: [Id], onUpdate: NoAction, map: "FK_PatternRateDetails_Patterns")
  PaymentMethods          PaymentMethods @relation(fields: [PaymentMethodId], references: [Id], onUpdate: NoAction, map: "FK_PatternRateDetails_PaymentMethods")

  @@index([ClientId], map: "IX_PatternRateDetails_ClientId")
}

model PatternRates {
  Id                                    Int       @id(map: "PK_PatternRates") @default(autoincrement())
  PatternId                             Int
  RateId                                Int
  Mileage                               Int?
  SwitchingAccountsPayable              Float?    @db.Money
  SwitchingAccountsReceivable           Float?    @db.Money
  CreatedAt                             DateTime  @default(now(), map: "DF__PatternRa__Creat__4AD8E1D8")
  UpdatedAt                             DateTime?
  CreatedById                           Int?
  UpdatedById                           Int?
  Users_PatternRates_CreatedByIdToUsers Users?    @relation("PatternRates_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternRates_Users_CreatedById")
  Patterns                              Patterns  @relation(fields: [PatternId], references: [Id], onUpdate: NoAction, map: "FK_PatternRates_Patterns")
  Users_PatternRates_UpdatedByIdToUsers Users?    @relation("PatternRates_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternRates_Users_UpdatedById")

  @@unique([Mileage, SwitchingAccountsPayable, SwitchingAccountsReceivable, PatternId, RateId], map: "IX_PatternRates_PatternId_RateId")
}

model PatternRouteExclusions {
  Id        Int      @id(map: "PK_PatternRouteExclusions") @default(autoincrement())
  PatternId Int
  Splc      String?  @db.VarChar(7)
  City      String?  @db.VarChar(19)
  State     String?  @db.VarChar(2)
  Patterns  Patterns @relation(fields: [PatternId], references: [Id], onUpdate: NoAction, map: "FK_PatternRouteExclusions_Patterns")
}

model PatternRouteInclusions {
  Id        Int      @id(map: "PK_PatternRouteInclusions") @default(autoincrement())
  PatternId Int
  Scac      String   @db.VarChar(4)
  Patterns  Patterns @relation(fields: [PatternId], references: [Id], onUpdate: NoAction, map: "FK_PatternRouteInclusions_Patterns")
}

model PatternRouteSegments {
  Id                                            Int                  @id(map: "PK_PatternRouteSegments") @default(autoincrement())
  PatternId                                     Int
  SequenceNumber                                Int
  Scac                                          String               @db.VarChar(4)
  RoutingSequenceCodeId                         Int
  JunctionRule260                               String?              @db.VarChar(5)
  JunctionSplc                                  String?              @db.VarChar(9)
  CreatedAt                                     DateTime             @default(now(), map: "DF__PatternRo__Creat__4BCD0611")
  UpdatedAt                                     DateTime?
  CreatedById                                   Int?
  UpdatedById                                   Int?
  Users_PatternRouteSegments_CreatedByIdToUsers Users?               @relation("PatternRouteSegments_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternRouteSegments_Users_CreatedById")
  Patterns                                      Patterns             @relation(fields: [PatternId], references: [Id], onUpdate: NoAction, map: "FK_PatternRouteSegments_Patterns")
  RoutingSequenceCodes                          RoutingSequenceCodes @relation(fields: [RoutingSequenceCodeId], references: [Id], onUpdate: NoAction, map: "FK_PatternRouteSegments_RoutingSequenceCodes")
  Users_PatternRouteSegments_UpdatedByIdToUsers Users?               @relation("PatternRouteSegments_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternRouteSegments_Users_UpdatedById")

  @@index([Id, Scac, SequenceNumber, PatternId], map: "IX_PatternRouteSegments_PatternId")
}

model Patterns {
  Id                                   Int                                    @id(map: "PK_Patterns") @default(autoincrement())
  ClientId                             Int
  Name                                 String                                 @db.VarChar(300)
  LocationId                           Int?
  ShipmentTypeId                       Int?
  PaymentMethodId                      Int
  BillingTypeId                        Int
  CarrierId                            Int
  WeightTypeId                         Int?                                   @default(12, map: "DF_Patterns_WeightTypeId")
  TimeZoneId                           Int                                    @default(3, map: "DF_Patterns_TimeZoneId")
  WeightUnitId                         Int                                    @default(3, map: "DF_Patterns_WeightUnitId")
  VolumeUnitId                         Int?
  WeightQualifierId                    Int                                    @default(3, map: "DF_Patterns_WeightQualifierId")
  Route                                String?                                @db.VarChar(200)
  EmptyDispositionRoute                String?                                @db.VarChar(200)
  OriginCity                           String                                 @db.VarChar(19)
  OriginState                          String                                 @db.Char(2)
  OriginCountry                        String                                 @db.Char(2)
  DestinationCity                      String                                 @db.VarChar(19)
  DestinationState                     String                                 @db.Char(2)
  DestinationCountry                   String                                 @db.Char(2)
  Mileage                              Int?
  EstimatedTransitDays                 Int?
  AdditionalInstructions               String?                                @db.VarChar(Max)
  IsSectionSeven                       Boolean                                @default(true, map: "DF_Patterns_IsSectionSeven")
  IsEmptyMove                          Boolean                                @default(false, map: "DF__Patterns__IsEmpt__07ADB145")
  IsEdiPattern                         Boolean                                @default(false, map: "DF_Patterns_Edi")
  IsWeighInRoute                       Boolean                                @default(false, map: "DF_Patterns_IsWeighInRoute")
  HasEmptyReturn                       Boolean                                @default(true, map: "DF_Patterns_IsEmptyReturn")
  HasFreightAccrual                    Boolean                                @default(false, map: "DF_Patterns_HasFreightAccrual")
  IsActive                             Boolean                                @default(true, map: "DF_Patterns_IsActive")
  IsDeleted                            Boolean                                @default(false, map: "DF_Patterns_IsDeleted")
  CreatedAt                            DateTime                               @default(now(), map: "DF__Patterns__Create__4CC12A4A")
  UpdatedAt                            DateTime?
  CreatedById                          Int?
  UpdatedById                          Int?
  SourceId                             Int?
  BillingTypes                         BillingTypes                           @relation(fields: [BillingTypeId], references: [Id], onUpdate: NoAction, map: "FK_Patterns_BillingTypes")
  Carriers                             Carriers                               @relation(fields: [CarrierId], references: [Id], onUpdate: NoAction, map: "FK_Patterns_Carriers")
  Clients                              Clients                                @relation(fields: [ClientId], references: [Id], onUpdate: NoAction, map: "FK_Patterns_Clients")
  Users_Patterns_CreatedByIdToUsers    Users?                                 @relation("Patterns_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Patterns_Users_CreatedById")
  Locations                            Locations?                             @relation(fields: [LocationId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Patterns_Locations")
  PaymentMethods                       PaymentMethods                         @relation(fields: [PaymentMethodId], references: [Id], onUpdate: NoAction, map: "FK_Patterns_PaymentMethods")
  ShipmentTypes                        ShipmentTypes?                         @relation(fields: [ShipmentTypeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Patterns_ShipmentTypes")
  TimeZones                            TimeZones                              @relation(fields: [TimeZoneId], references: [Id], onUpdate: NoAction, map: "FK_Patterns_TimeZones")
  Users_Patterns_UpdatedByIdToUsers    Users?                                 @relation("Patterns_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Patterns_Users_UpdatedById")
  VolumeUnits                          VolumeUnits?                           @relation(fields: [VolumeUnitId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Patterns_VolumeUnits")
  WeightQualifiers                     WeightQualifiers                       @relation(fields: [WeightQualifierId], references: [Id], onUpdate: NoAction, map: "FK_Patterns_WeightQualifiers")
  WeightTypes                          WeightTypes?                           @relation(fields: [WeightTypeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Patterns_WeightTypes")
  WeightUnits                          WeightUnits                            @relation(fields: [WeightUnitId], references: [Id], onUpdate: NoAction, map: "FK_Patterns_WeightUnits")
  PatternAccountCodes                  PatternAccountCodes[]
  PatternCommodities                   PatternCommodities[]
  PatternContacts                      PatternContacts[]
  PatternCustomReferences              PatternCustomReferences[]
  PatternEmptyDispositionParties       PatternEmptyDispositionParties[]
  PatternEmptyDispositionRouteSegments PatternEmptyDispositionRouteSegments[]
  PatternExtendedReferences            PatternExtendedReferences[]
  PatternNotifications                 PatternNotifications[]
  PatternParties                       PatternParties[]
  PatternPriceAuthorities              PatternPriceAuthorities[]
  PatternRateDetails                   PatternRateDetails[]
  PatternRates                         PatternRates[]
  PatternRouteExclusions               PatternRouteExclusions[]
  PatternRouteInclusions               PatternRouteInclusions[]
  PatternRouteSegments                 PatternRouteSegments[]
  PatternSpecialHandlingCodes          PatternSpecialHandlingCodes[]
  Shipments                            Shipments[]

  @@index([Id, IsActive, Name, ClientId, IsDeleted], map: "IX_Patterns_ClientId_IsDeleted")
  @@index([SourceId], map: "IX_Patterns_SourceId")
}

model PatternSpecialHandlingCodes {
  Id                                                   Int                  @default(autoincrement())
  PatternId                                            Int
  SpecialHandlingCodeId                                Int
  CreatedAt                                            DateTime             @default(now(), map: "DF__PatternSp__Creat__4DB54E83")
  UpdatedAt                                            DateTime?
  CreatedById                                          Int?
  UpdatedById                                          Int?
  Users_PatternSpecialHandlingCodes_CreatedByIdToUsers Users?               @relation("PatternSpecialHandlingCodes_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternSpecialHandlingCodes_Users_CreatedById")
  Patterns                                             Patterns             @relation(fields: [PatternId], references: [Id], onUpdate: NoAction, map: "FK_PatternSpecialHandlingCodes_Patterns")
  SpecialHandlingCodes                                 SpecialHandlingCodes @relation(fields: [SpecialHandlingCodeId], references: [Id], onUpdate: NoAction, map: "FK_PatternSpecialHandlingCodes_SpecialHandlingCodes")
  Users_PatternSpecialHandlingCodes_UpdatedByIdToUsers Users?               @relation("PatternSpecialHandlingCodes_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PatternSpecialHandlingCodes_Users_UpdatedById")

  @@id([PatternId, SpecialHandlingCodeId], map: "PK_PatternSpecialHandlingCodes")
}

model PaymentMethods {
  Id                 Int                  @id(map: "PK_PaymentMethods") @default(autoincrement())
  Code               String               @db.Char(2)
  Enumeration        String               @db.VarChar(30)
  Name               String               @db.VarChar(50)
  IsActive           Boolean              @default(true, map: "DF_PaymentTerms_IsActive")
  SortOrder          Int?
  FreightInvoices    FreightInvoices[]
  PatternRateDetails PatternRateDetails[]
  Patterns           Patterns[]
  Shipments          Shipments[]
  Waybills           Waybills[]

  @@unique([Id, Code], map: "IX_PaymentMethods_Code")
  @@unique([Id, Enumeration], map: "IX_PaymentMethods_Enumeration")
}

model PriceAuthorityTypes {
  Id                             Int                              @id(map: "PK_PriceAuthorityTypes") @default(autoincrement())
  Code                           String                           @db.Char(2)
  Enumeration                    String                           @db.VarChar(30)
  Name                           String                           @db.VarChar(50)
  IsActive                       Boolean                          @default(true, map: "DF_PriceAuthorityTypes_IsActive")
  SortOrder                      Int?
  FreightInvoicePriceAuthorities FreightInvoicePriceAuthorities[]
  PatternPriceAuthorities        PatternPriceAuthorities[]
  RateContracts                  RateContracts[]
  ShipmentPriceAuthorities       ShipmentPriceAuthorities[]
  WaybillPriceAuthorities        WaybillPriceAuthorities[]

  @@unique([Id, Code], map: "IX_PriceAuthorityTypes_Code")
  @@unique([Id, Enumeration], map: "IX_PriceAuthorityTypes_Enumeration")
}

model PriceIndexDates {
  Id           Int          @id(map: "PK_PriceIndexDates") @default(autoincrement())
  PriceIndexId Int
  Value        Decimal      @db.Decimal(8, 5)
  Effective    DateTime     @db.Date
  Expiration   DateTime     @db.Date
  Issued       DateTime     @db.Date
  PriceIndexes PriceIndexes @relation(fields: [PriceIndexId], references: [Id], onUpdate: NoAction, map: "FK_PriceIndexDates_PriceIndexes")
}

model PriceIndexes {
  Id              Int               @id(map: "PK_PriceIndexes") @default(autoincrement())
  Name            String            @db.VarChar(100)
  Code            String            @db.VarChar(50)
  IsActive        Boolean           @default(true, map: "DF_PriceIndexes_IsActive")
  FuelSurcharges  FuelSurcharges[]
  PriceIndexDates PriceIndexDates[]

  @@unique([Id, Code], map: "IX_PriceIndexes_Code")
}

model RailRoadStatusTypes {
  Id                   Int                    @id(map: "PK_RailRoadStatusTypes") @default(autoincrement())
  Code                 String                 @db.Char(3)
  Enumeration          String                 @db.VarChar(30)
  Name                 String                 @db.VarChar(50)
  IsActive             Boolean
  SortOrder            Int?
  PartyRailRoadDetails PartyRailRoadDetails[]
}

model RateCommodities {
  Id                                       Int       @id(map: "PK_RateCommodities") @default(autoincrement())
  RateId                                   Int
  Stcc                                     String    @db.VarChar(7)
  CreatedAt                                DateTime  @default(now(), map: "DF__RateCommo__Creat__5091BB2E")
  UpdatedAt                                DateTime?
  CreatedById                              Int?
  UpdatedById                              Int?
  Users_RateCommodities_CreatedByIdToUsers Users?    @relation("RateCommodities_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateCommodities_Users_CreatedById")
  Rates                                    Rates     @relation(fields: [RateId], references: [Id], onUpdate: NoAction, map: "FK_RateCommodities_Rates")
  Users_RateCommodities_UpdatedByIdToUsers Users?    @relation("RateCommodities_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateCommodities_Users_UpdatedById")

  @@unique([RateId, Stcc], map: "CK_RateCommodities_RateID_Stcc")
}

model RateContractComments {
  Id                                            Int           @id(map: "PK_RateContractComments") @default(autoincrement())
  RateContractId                                Int
  Comment                                       String        @db.VarChar(Max)
  UserId                                        Int
  Created                                       DateTime      @default(now(), map: "DF_RateContractComments_Created") @db.DateTime
  CreatedAt                                     DateTime      @default(now(), map: "DF__RateContr__Creat__5185DF67")
  UpdatedAt                                     DateTime?
  CreatedById                                   Int?
  UpdatedById                                   Int?
  Users_RateContractComments_CreatedByIdToUsers Users?        @relation("RateContractComments_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateContractComments_Users_CreatedById")
  RateContracts                                 RateContracts @relation(fields: [RateContractId], references: [Id], onUpdate: NoAction, map: "FK_RateContractComments_RateContracts")
  Users_RateContractComments_UpdatedByIdToUsers Users?        @relation("RateContractComments_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateContractComments_Users_UpdatedById")
  Users_RateContractComments_UserIdToUsers      Users         @relation("RateContractComments_UserIdToUsers", fields: [UserId], references: [Id], onUpdate: NoAction, map: "FK_RateContractComments_Users")
}

model RateContracts {
  Id                                     Int                    @id(map: "PK_RateContracts") @default(autoincrement())
  ClientId                               Int
  CarrierId                              Int
  VendorId                               Int?
  PriceAuthorityTypeId                   Int
  ContractNumber                         String?                @db.VarChar(30)
  AuthorityNumber                        String?                @db.VarChar(10)
  AuthoritySuffix                        String?                @db.VarChar(10)
  Comments                               String?                @db.VarChar(Max)
  EffectiveDate                          DateTime               @default(now(), map: "DF_RateContracts_EffectiveDate") @db.Date
  ExpirationDate                         DateTime?              @db.Date
  IsMileageScaleContract                 Boolean                @default(false, map: "DF_RateContracts_IsMileageScaleContract")
  IsActive                               Boolean                @default(true, map: "DF_RateAuthority_IsActive")
  IsDeleted                              Boolean                @default(false, map: "DF_RateContracts_IsDeleted")
  CreatedAt                              DateTime               @default(now(), map: "DF__RateContr__Creat__527A03A0")
  UpdatedAt                              DateTime?
  CreatedById                            Int?
  UpdatedById                            Int?
  AuthorityAlpha                         String                 @db.VarChar(10)
  Authority_Number                       String                 @default("", map: "DF__RateContr__Autho__5B1A3699") @db.VarChar(10)
  Name                                   String                 @db.VarChar(32)
  Carriers                               Carriers               @relation(fields: [CarrierId], references: [Id], onUpdate: NoAction, map: "FK_RateContracts_Carriers")
  Clients                                Clients                @relation(fields: [ClientId], references: [Id], onUpdate: NoAction, map: "FK_RateContracts_Clients")
  Users_RateContracts_CreatedByIdToUsers Users?                 @relation("RateContracts_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateContracts_Users_CreatedById")
  PriceAuthorityTypes                    PriceAuthorityTypes    @relation(fields: [PriceAuthorityTypeId], references: [Id], onUpdate: NoAction, map: "FK_RateContracts_PriceAuthorityTypes")
  Users_RateContracts_UpdatedByIdToUsers Users?                 @relation("RateContracts_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateContracts_Users_UpdatedById")
  Vendors                                Vendors?               @relation(fields: [VendorId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateContracts_Vendors")
  RateContractComments                   RateContractComments[]
  Rates                                  Rates[]

  @@index([Id, IsActive, IsDeleted, ClientId], map: "IX_RateContracts_ClientId")
}

model RateDetailComments {
  Id                                          Int         @id(map: "PK_RateDetailComments") @default(autoincrement())
  RateDetailId                                Int
  Comment                                     String      @db.VarChar(Max)
  UserId                                      Int
  Created                                     DateTime    @default(now(), map: "DF_RateDetailComments_Created") @db.DateTime
  CreatedAt                                   DateTime    @default(now(), map: "DF__RateDetai__Creat__536E27D9")
  UpdatedAt                                   DateTime?
  CreatedById                                 Int?
  UpdatedById                                 Int?
  Users_RateDetailComments_CreatedByIdToUsers Users?      @relation("RateDetailComments_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateDetailComments_Users_CreatedById")
  RateDetails                                 RateDetails @relation(fields: [RateDetailId], references: [Id], onUpdate: NoAction, map: "FK_RateDetailComments_RateDetails")
  Users_RateDetailComments_UpdatedByIdToUsers Users?      @relation("RateDetailComments_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateDetailComments_Users_UpdatedById")
  Users_RateDetailComments_UserIdToUsers      Users       @relation("RateDetailComments_UserIdToUsers", fields: [UserId], references: [Id], onUpdate: NoAction, map: "FK_RateDetailComments_Users")
}

model RateDetailEquipmentTypes {
  Id              Int            @id(map: "PK__RateDeta__3214EC074A0EA01D") @default(autoincrement())
  RateDetailId    Int
  EquipmentTypeId Int
  EquipmentTypes  EquipmentTypes @relation(fields: [EquipmentTypeId], references: [Id], onUpdate: NoAction, map: "FK_RateDetailEquipmentTypes_EquipmentTypes")

  @@unique([RateDetailId, EquipmentTypeId], map: "AK_EquipmentTypeRateDetail")
}

model RateDetails {
  Id                                   Int                         @id(map: "PK_RateDetail") @default(autoincrement())
  RateId                               Int
  RateUnitId                           Int
  RatePerUnitAccountsPayable           Float?                      @db.Money
  RatePerUnitAccountsReceivable        Float?                      @db.Money
  SpecialChargeTypeId                  Int?
  IsPrivateEquipment                   Boolean?
  EquipmentTypeId                      Int?
  CarBlockSizeMinimum                  Int?
  CarBlockSizeMaximum                  Int?
  CarLengthMinimum                     Int?
  CarLengthMaximum                     Int?
  CarWeightMinimum                     Int?
  CarWeightMaximum                     Int?
  CubicFeetMinimum                     Int?
  CubicFeetMaximum                     Int?
  GallonCapacityMinimum                Int?
  GallonCapacityMaximum                Int?
  MileageMinimum                       Int?
  MileageMaximum                       Int?
  EffectiveDate                        DateTime                    @db.Date
  ExpirationDate                       DateTime                    @db.Date
  Comments                             String?                     @db.VarChar(Max)
  IsActive                             Boolean                     @default(true, map: "DF_RateDetails_IsActive")
  IsDeleted                            Boolean                     @default(false, map: "DF_RateDetails_IsDeleted")
  CreatedAt                            DateTime                    @default(now(), map: "DF__RateDetai__Creat__54624C12")
  UpdatedAt                            DateTime?
  CreatedById                          Int?
  UpdatedById                          Int?
  DotRailCarClassId                    Int?
  ExpirationStatus                     String                      @db.VarChar(7)
  RateConditions                       String?                     @db.VarChar(Max)
  Users_RateDetails_CreatedByIdToUsers Users?                      @relation("RateDetails_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateDetails_Users_CreatedById")
  EquipmentTypes                       EquipmentTypes?             @relation(fields: [EquipmentTypeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateDetails_EquipmentTypes")
  Rates                                Rates                       @relation(fields: [RateId], references: [Id], onUpdate: NoAction, map: "FK_RateDetails_Rates")
  RateUnits                            RateUnits                   @relation(fields: [RateUnitId], references: [Id], onUpdate: NoAction, map: "FK_RateDetails_RateUnits")
  SpecialChargeTypes                   SpecialChargeTypes?         @relation(fields: [SpecialChargeTypeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateDetails_SpecialChargeTypes")
  Users_RateDetails_UpdatedByIdToUsers Users?                      @relation("RateDetails_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateDetails_Users_UpdatedById")
  RateDetailComments                   RateDetailComments[]
  ShipmentEquipmentAccruals            ShipmentEquipmentAccruals[]

  @@index([CarBlockSizeMaximum, CarBlockSizeMinimum, CarLengthMaximum, CarLengthMinimum, CarWeightMaximum, CarWeightMinimum, CubicFeetMaximum, CubicFeetMinimum, DotRailCarClassId, EquipmentTypeId, GallonCapacityMaximum, GallonCapacityMinimum, IsActive, IsDeleted, IsPrivateEquipment, MileageMaximum, MileageMinimum, RatePerUnitAccountsPayable, RatePerUnitAccountsReceivable, SpecialChargeTypeId, RateId, EffectiveDate, ExpirationDate], map: "IX_RateDetails_RateId_EffectiveDate_ExpirationDate")
}

model RateRequestAdditionalComments {
  Id            Int          @id(map: "PK_RateRequestAddtionalComments") @default(autoincrement())
  RateRequestId Int
  Comment       String       @db.VarChar(Max)
  CreatedAt     DateTime     @default(now(), map: "DF_RateRequestAddtionalComments_CreatedAt")
  CreatedById   Int?
  Users         Users?       @relation(fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateRequestAddtionalComments_Users_CreatedById")
  RateRequests  RateRequests @relation(fields: [RateRequestId], references: [Id], onUpdate: NoAction, map: "FK_RateRequestAddtionalComments_RateRequests")
}

model RateRequestComments {
  Id            Int          @id(map: "PK_RateRequestComments") @default(autoincrement())
  RateRequestId Int
  Comment       String       @db.VarChar(Max)
  IsHidden      Boolean
  CreatedAt     DateTime     @default(now(), map: "DF_RateRequestComments_CreatedAt")
  CreatedById   Int?
  Users         Users?       @relation(fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateRequestComments_Users_CreatedById")
  RateRequests  RateRequests @relation(fields: [RateRequestId], references: [Id], onUpdate: NoAction, map: "FK_RateRequestComments_RateRequests")
}

model RateRequestResponses {
  Id                   Int       @id(map: "PK_RateRequestResponses") @default(autoincrement())
  RateRequestId        Int
  ResponseDate         DateTime?
  RequestStatusId      Int
  ValidUntil           DateTime?
  ResponseSentBy       String?   @db.VarChar(50)
  ResponseSentByEmail  String?   @db.VarChar(50)
  Routing              String?   @db.VarChar(50)
  TransitTime          String?   @db.VarChar(50)
  EstFreightAmtLow     Float?    @db.Money
  EstFreightAmtHigh    Float?    @db.Money
  FuelSurchargeAmt     Float?    @db.Money
  CarbonTax            Float?    @db.Money
  GoodsServiceTax      Float?    @db.Money
  TotalSwitchCost      Float?    @db.Money
  ManagementFee        Float?    @db.Money
  ActualFreightAmt     Float?    @db.Money
  IncludeSegmentDetail Boolean?
  ExpirationDate       DateTime?
  CreatedAt            DateTime
  UpdatedAt            DateTime?
  CreatedById          Int?
  UpdatedById          Int?
}

model RateRequests {
  Id                            Int                             @id(map: "PK_RateRequests") @default(autoincrement())
  ClientId                      Int?
  DateRequested                 DateTime                        @default(now(), map: "DF_RateRequests_DateRequested")
  RequestedBy                   String?                         @db.VarChar(50)
  RequestTypeId                 Int
  RequestStatusId               Int
  EquipmentTypeId               Int?
  CurrencyId                    Int?
  MinimumWeight                 Decimal?                        @db.Decimal(13, 3)
  EstimatedVolume               String?                         @db.VarChar(Max)
  EstimatedStartDate            DateTime?
  Stcc                          String?                         @db.VarChar(7)
  Description                   String?                         @db.VarChar(Max)
  Restrictions                  String?                         @db.VarChar(Max)
  OriginId                      Int?
  Origin                        String?                         @db.VarChar(60)
  OriginAddressLine1            String?                         @db.VarChar(55)
  OriginAddressLine2            String?                         @db.VarChar(55)
  OriginCity                    String?                         @db.VarChar(30)
  OriginState                   String?                         @db.VarChar(2)
  OriginRailroad                String?                         @db.VarChar(50)
  DestinationId                 Int?
  Destination                   String?                         @db.VarChar(60)
  DestinationAddressLine1       String?                         @db.VarChar(55)
  DestinationAddressLine2       String?                         @db.VarChar(55)
  DestinationCity               String?                         @db.VarChar(30)
  DestinationState              String?                         @db.VarChar(2)
  DestinationRailroad           String?                         @db.VarChar(50)
  IsActive                      Boolean
  CreatedAt                     DateTime
  UpdatedAt                     DateTime?
  CreatedById                   Int?
  UpdatedById                   Int?
  PickupLocationId              Int?
  PickupLocation                String?                         @db.VarChar(60)
  PickupAddressLine1            String?                         @db.VarChar(55)
  PickupAddressLine2            String?                         @db.VarChar(55)
  PickupCity                    String?                         @db.VarChar(30)
  PickupState                   String?                         @db.VarChar(2)
  PickupRailroad                String?                         @db.VarChar(50)
  ShipperAddressLine1           String?                         @db.VarChar(55)
  ShipperAddressLine2           String?                         @db.VarChar(55)
  ShipperCity                   String?                         @db.VarChar(30)
  ShipperState                  String?                         @db.VarChar(2)
  ShipperRailroad               String?                         @db.VarChar(50)
  ShipperId                     Int?
  Shipper                       String?                         @db.VarChar(60)
  ConsigneeId                   Int?
  Consignee                     String?                         @db.VarChar(60)
  ConsigneeAddressLine1         String?                         @db.VarChar(55)
  ConsigneeAddressLine2         String?                         @db.VarChar(55)
  ConsigneeCity                 String?                         @db.VarChar(30)
  ConsigneeState                String?                         @db.VarChar(2)
  ConsigneeRailroad             String?                         @db.VarChar(50)
  CareOfPartyId                 Int?
  CareOfPartyAddressLine1       String?                         @db.VarChar(55)
  CareOfPartyAddressLine2       String?                         @db.VarChar(55)
  CareOfPartyCity               String?                         @db.VarChar(30)
  CareOfPartyState              String?                         @db.VarChar(2)
  CareOfPartyRailroad           String?                         @db.VarChar(50)
  CareOfParty                   String?                         @db.VarChar(60)
  ContactName                   String?                         @db.VarChar(50)
  ContactEmail                  String?                         @db.VarChar(200)
  CommodityId                   Int?
  RateRequestAdditionalComments RateRequestAdditionalComments[]
  RateRequestComments           RateRequestComments[]
}

model RateRequestSegments {
  Id                      Int       @id(map: "PK_RateRequestSegments") @default(autoincrement())
  RateRequestId           Int?
  CarrierId               Int?
  RateContractId          Int?
  Miles                   Int?
  TransitTime             Int?
  RateAR                  Float?    @db.Money
  RateAP                  Float?    @db.Money
  FuelSurchargeCodeId     Int?
  FuelSurchargeAmtAR      Float?    @db.Money
  FuelSurchargeAmtAP      Float?    @db.Money
  OriginCity              String?   @db.VarChar(50)
  OriginState             String?   @db.VarChar(2)
  DestinationCity         String?   @db.VarChar(50)
  DestinationState        String?   @db.VarChar(2)
  DateSentToRR            DateTime?
  DateReceivedFromRR      DateTime?
  RRContactName           String?   @db.VarChar(50)
  RRContactEmail          String?   @db.VarChar(200)
  AuthorityAlpha          String?   @db.VarChar(10)
  AuthorityNumber         String?   @db.VarChar(10)
  AuthoritySuffix         String?   @db.VarChar(10)
  AuthorityCode           String?   @db.VarChar(50)
  AuthorityEffectiveDate  DateTime?
  AuthorityExpirationDate DateTime?
  IsActive                Boolean?
  CreatedAt               DateTime
  UpdatedAt               DateTime?
  CreatedById             Int?
  UpdatedById             Int?
}

model RateRequestStatusTypes {
  Id          Int     @id(map: "PK_RateRequestStatusTypes") @default(autoincrement())
  Code        String  @db.Char(3)
  Enumeration String  @db.VarChar(30)
  Name        String  @db.VarChar(50)
  IsActive    Boolean
  SortOrder   Int?
}

model RateRequestTypes {
  Id          Int     @id(map: "PK_RateRequestTypes") @default(autoincrement())
  Code        String  @db.Char(3)
  Enumeration String  @db.VarChar(30)
  Name        String  @db.VarChar(50)
  IsActive    Boolean
  SortOrder   Int?
}

model RateRouteSegments {
  Id                                         Int                  @id(map: "PK_RateRouteSegments") @default(autoincrement())
  RateId                                     Int
  SequenceNumber                             Int
  Scac                                       String               @db.VarChar(4)
  RoutingSequenceCodeId                      Int
  JunctionRule260                            String?              @db.VarChar(5)
  JunctionSplc                               String?              @db.VarChar(9)
  CreatedAt                                  DateTime             @default(now(), map: "DF__RateRoute__Creat__5556704B")
  UpdatedAt                                  DateTime
  CreatedById                                Int?
  UpdatedById                                Int?
  Users_RateRouteSegments_CreatedByIdToUsers Users?               @relation("RateRouteSegments_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateRouteSegments_Users_CreatedById")
  Rates                                      Rates                @relation(fields: [RateId], references: [Id], onUpdate: NoAction, map: "FK_RateRouteSegments_Rates")
  RoutingSequenceCodes                       RoutingSequenceCodes @relation(fields: [RoutingSequenceCodeId], references: [Id], onUpdate: NoAction, map: "FK_RateRouteSegments_RoutingSequenceCodes")
  Users_RateRouteSegments_UpdatedByIdToUsers Users?               @relation("RateRouteSegments_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateRouteSegments_Users_UpdatedById")

  @@unique([RateId, SequenceNumber], map: "CK_RateRouteSegments_RateID_Index")
}

model Rates {
  Id                             Int                           @id(map: "PK_Rate") @default(autoincrement())
  RateContractId                 Int
  AccrualTypeId                  Int
  Name                           String                        @db.VarChar(100)
  CurrencyId                     Int
  FuelSurchargeId                Int?
  Mileage                        Decimal?                      @db.Decimal(20, 2)
  Route                          String?                       @db.VarChar(300)
  OriginCity                     String?                       @db.VarChar(30)
  OriginStateProvince            String?                       @db.VarChar(2)
  OriginFsac                     String?                       @db.VarChar(5)
  DestinationCity                String?                       @db.VarChar(30)
  DestinationStateProvince       String?                       @db.VarChar(2)
  DestinationFsac                String?                       @db.VarChar(5)
  Comments                       String?                       @db.VarChar(Max)
  IsCompetitive                  Boolean?
  IsActive                       Boolean                       @default(true, map: "DF_Rates_IsActive")
  IsDeleted                      Boolean                       @default(false, map: "DF_Rates_IsDeleted")
  CreatedAt                      DateTime                      @default(now(), map: "DF__Rates__CreatedAt__564A9484")
  UpdatedAt                      DateTime?
  CreatedById                    Int?
  UpdatedById                    Int?
  FreightTermId                  Int                           @default(1, map: "DF__Rates__FreightTe__0CB1922D")
  PaymentMethodId                Int                           @default(2, map: "DF__Rates__PaymentMe__0F04BA4A")
  AccrualTypes                   AccrualTypes                  @relation(fields: [AccrualTypeId], references: [Id], onUpdate: NoAction, map: "FK_Rates_AccrualTypes")
  Users_Rates_CreatedByIdToUsers Users?                        @relation("Rates_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Rates_Users_CreatedById")
  Currencies                     Currencies                    @relation(fields: [CurrencyId], references: [Id], onUpdate: NoAction, map: "FK_Rates_Currencies")
  FuelSurcharges                 FuelSurcharges?               @relation(fields: [FuelSurchargeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Rates_FuelSurcharges")
  RateContracts                  RateContracts                 @relation(fields: [RateContractId], references: [Id], onUpdate: NoAction, map: "FK_Rates_RateContracts")
  Users_Rates_UpdatedByIdToUsers Users?                        @relation("Rates_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Rates_Users_UpdatedById")
  PatternPartyBillingSegments    PatternPartyBillingSegments[]
  RateCommodities                RateCommodities[]
  RateDetails                    RateDetails[]
  RateRouteSegments              RateRouteSegments[]
  ShipmentEquipmentAccruals      ShipmentEquipmentAccruals[]
  ShipmentRates                  ShipmentRates[]

  @@index([Id, IsActive, IsDeleted, Name, RateContractId], map: "IX_Rates_RateContractId")
}

model RateTemplateDetails {
  Id                                           Int                 @id(map: "PK_RateTemplateDetails") @default(autoincrement())
  RateTemplateId                               Int
  RateUnitId                                   Int
  RatePerUnitAccountsPayable                   Float?              @db.Money
  RatePerUnitAccountsReceivable                Float?              @db.Money
  SpecialChargeTypeId                          Int?
  EquipmentTypeId                              Int?
  CarBlockSizeMinimum                          Int?
  CarBlockSizeMaximum                          Int?
  CarLengthMinimum                             Int?
  CarLengthMaximum                             Int?
  CarWeightMinimum                             Int?
  CarWeightMaximum                             Int?
  CubicFeetMinimum                             Int?
  CubicFeetMaximum                             Int?
  GallonCapacityMinimum                        Int?
  GallonCapacityMaximum                        Int?
  MileageMinimum                               Int?
  MileageMaximum                               Int?
  Comments                                     String?             @db.VarChar(Max)
  IsActive                                     Boolean             @default(true, map: "DF_RateTemplateDetails_IsActive")
  SortOrder                                    Int?
  CreatedAt                                    DateTime            @default(now(), map: "DF__RateTempl__Creat__573EB8BD")
  UpdatedAt                                    DateTime?
  CreatedById                                  Int?
  UpdatedById                                  Int?
  Users_RateTemplateDetails_CreatedByIdToUsers Users?              @relation("RateTemplateDetails_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateTemplateDetails_Users_CreatedById")
  EquipmentTypes                               EquipmentTypes?     @relation(fields: [EquipmentTypeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateTemplateDetails_EquipmentTypes")
  RateTemplates                                RateTemplates       @relation(fields: [RateTemplateId], references: [Id], onUpdate: NoAction, map: "FK_RateTemplateDetails_RateTemplates")
  RateUnits                                    RateUnits           @relation(fields: [RateUnitId], references: [Id], onUpdate: NoAction, map: "FK_RateTemplateDetails_RateUnits")
  SpecialChargeTypes                           SpecialChargeTypes? @relation(fields: [SpecialChargeTypeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateTemplateDetails_SpecialChargeTypes")
  Users_RateTemplateDetails_UpdatedByIdToUsers Users?              @relation("RateTemplateDetails_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateTemplateDetails_Users_UpdatedById")
}

model RateTemplates {
  Id                                     Int                   @id(map: "PK_RateTemplates") @default(autoincrement())
  CarrierId                              Int
  Name                                   String                @db.VarChar(100)
  IsActive                               Boolean
  SortOrder                              Int
  CreatedAt                              DateTime              @default(now(), map: "DF__RateTempl__Creat__5832DCF6")
  UpdatedAt                              DateTime?
  CreatedById                            Int?
  UpdatedById                            Int?
  Carriers                               Carriers              @relation(fields: [CarrierId], references: [Id], onUpdate: NoAction, map: "FK_RateTemplates_Carriers")
  Users_RateTemplates_CreatedByIdToUsers Users?                @relation("RateTemplates_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateTemplates_Users_CreatedById")
  Users_RateTemplates_UpdatedByIdToUsers Users?                @relation("RateTemplates_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateTemplates_Users_UpdatedById")
  RateTemplateDetails                    RateTemplateDetails[]
}

model RateUnits {
  Id                        Int                         @id(map: "PK_RateUnits") @default(autoincrement())
  Code                      String                      @db.Char(2)
  Enumeration               String                      @db.VarChar(30)
  Name                      String                      @db.VarChar(50)
  IsActive                  Boolean                     @default(true, map: "DF_RateUnits_IsActive")
  SortOrder                 Int?
  FuelSurchargeDetails      FuelSurchargeDetails[]
  FuelSurcharges            FuelSurcharges[]
  RateDetails               RateDetails[]
  RateTemplateDetails       RateTemplateDetails[]
  ShipmentEquipmentAccruals ShipmentEquipmentAccruals[]

  @@unique([Id, Code], map: "IX_RateUnits_Code")
  @@unique([Id, Enumeration], map: "IX_RateUnits_Enumeration")
}

model Reports {
  Id                               Int               @id(map: "PK_Reports") @default(autoincrement())
  ClientId                         Int
  Name                             String            @db.VarChar(100)
  Description                      String?           @db.VarChar(Max)
  Operation                        String            @db.VarChar(100)
  Fields                           String            @db.VarChar(Max)
  DisplayNames                     String?           @db.VarChar(Max)
  FilterExpression                 String?           @db.VarChar(Max)
  SortExpressions                  String            @db.VarChar(Max)
  IsDistinct                       Boolean
  IsDefault                        Boolean           @default(false, map: "DF_Reports_IsDefault")
  IsShared                         Boolean           @default(false, map: "DF_Reports_IsPublic")
  IsActive                         Boolean           @default(true, map: "DF_Reports_IsActive")
  CreatedAt                        DateTime          @default(now(), map: "DF__Reports__Created__5A1B2568")
  UpdatedAt                        DateTime?
  CreatedById                      Int?
  UpdatedById                      Int?
  ReportSectionTypeId              Int?
  OwnedById                        Int
  Clients                          Clients           @relation(fields: [ClientId], references: [Id], onUpdate: NoAction, map: "FK_Reports_Clients")
  Users_Reports_CreatedByIdToUsers Users?            @relation("Reports_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Reports_Users_CreatedById")
  Users_Reports_UpdatedByIdToUsers Users?            @relation("Reports_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Reports_Users_UpdatedById")
  ReportSchedules                  ReportSchedules[]

  @@index([Id, Name, ClientId, IsActive], map: "IX_Reports_ClientId_IsActive")
}

model ReportScheduleHistory {
  Id                   Int             @id(map: "PK_ReportScheduleHistory") @default(autoincrement())
  ReportScheduleId     Int
  StartTime            DateTime
  EndTime              DateTime?
  ErrorMessage         String?         @db.VarChar(50)
  WasReportGenerated   Boolean?
  SuccessfulRecipients String?         @db.VarChar(Max)
  FailedRecipients     String?         @db.VarChar(Max)
  ReportSchedules      ReportSchedules @relation(fields: [ReportScheduleId], references: [Id], onUpdate: NoAction, map: "FK_ReportScheduleHistory_ReportSchedules")
}

model ReportScheduleNotifications {
  Id                                                   Int                       @id(map: "PK_ReportScheduleNotifications") @default(autoincrement())
  ReportScheduleId                                     Int
  NotificationTypeId                                   Int
  NotificationContactId                                Int?
  NotificationGroupId                                  Int?
  NotificationFtpLocationId                            Int?
  Name                                                 String?                   @db.VarChar(35)
  EmailAddress                                         String?                   @db.VarChar(80)
  PhoneNumber                                          String?                   @db.VarChar(30)
  FaxNumber                                            String?                   @db.VarChar(30)
  CreatedAt                                            DateTime                  @default(now(), map: "DF__ReportSch__Creat__2DFD775F")
  UpdatedAt                                            DateTime?
  CreatedById                                          Int?
  UpdatedById                                          Int?
  Users_ReportScheduleNotifications_CreatedByIdToUsers Users?                    @relation("ReportScheduleNotifications_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ReportScheduleNotifications_Users_CreatedById")
  NotificationContacts                                 NotificationContacts?     @relation(fields: [NotificationContactId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ReportScheduleNotifications_NotificationContacts")
  NotificationFtpLocations                             NotificationFtpLocations? @relation(fields: [NotificationFtpLocationId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ReportScheduleNotifications_NotificationFtpLocations")
  NotificationGroups                                   NotificationGroups?       @relation(fields: [NotificationGroupId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ReportScheduleNotifications_NotificationGroups")
  NotificationTypes                                    NotificationTypes         @relation(fields: [NotificationTypeId], references: [Id], onUpdate: NoAction, map: "FK_ReportScheduleNotifications_NotificationTypes")
  Users_ReportScheduleNotifications_UpdatedByIdToUsers Users?                    @relation("ReportScheduleNotifications_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ReportScheduleNotifications_Users_UpdatedById")
}

model ReportSchedules {
  Id                    Int                     @id(map: "PK_ReportSchedules") @default(autoincrement())
  ReportId              Int?
  Name                  String                  @db.VarChar(50)
  Description           String?                 @db.VarChar(Max)
  FrequencyTypeId       Int
  HourlyIntervalPeriod  Int?
  StartTime             DateTime
  EndTime               DateTime?
  MonthlyDay            Int?
  TimeZoneId            Int                     @default(3, map: "DF_EasternTimeZone")
  Priority              Int                     @default(50, map: "DF_ReportSchedules_Priority")
  CreatedAt             DateTime
  UpdatedAt             DateTime?
  CreatedById           Int?
  UpdatedById           Int?
  OwnedById             Int?
  IsCreateShipment      Boolean                 @default(false, map: "DF_ReportSchedules_IsShipmentFromWaybill")
  IsActive              Boolean
  IsDeleted             Boolean
  SendSunday            Boolean?
  SendMonday            Boolean?
  SendTuesday           Boolean?
  SendWednesday         Boolean?
  SendThursday          Boolean?
  SendFriday            Boolean?
  SendSaturday          Boolean?
  IsAlert               Boolean?
  AlertSubject          String?                 @db.VarChar(100)
  AlertBody             String?                 @db.VarChar(1000)
  AlertFrequencyTypeId  Int?
  AddDashboardAlert     Boolean?
  AddCustomerServiceLog Boolean?
  LastRunTime           DateTime?
  NextRunTime           DateTime?
  LastRunTimeStatus     String?                 @db.VarChar(50)
  WasLastRunSuccess     Boolean?
  WeeklyDay             Int?
  ReportTypeId          Int                     @default(1, map: "DF_Excel")
  FrequencyTypes        FrequencyTypes          @relation(fields: [FrequencyTypeId], references: [Id], onUpdate: NoAction, map: "FK_Schedules_FrequencyTypes")
  Reports               Reports?                @relation(fields: [ReportId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ReportSchedules_Reports")
  ReportTypes           ReportTypes             @relation(fields: [ReportTypeId], references: [Id], onUpdate: NoAction, map: "FK_ReportSchedules_ReportTypes")
  TimeZones             TimeZones               @relation(fields: [TimeZoneId], references: [Id], onUpdate: NoAction, map: "FK_ReportSchedules_TimeZones")
  ReportScheduleHistory ReportScheduleHistory[]
}

model ReportSectionTypes {
  Id          Int     @id(map: "PK_ReportSectionType") @default(autoincrement())
  Code        String  @db.VarChar(100)
  Name        String  @db.VarChar(50)
  Enumeration String  @db.VarChar(30)
  IsActive    Boolean @default(true, map: "DF_ReportOperationTypes_IsActive")
  SortOrder   Int?
}

model ReportTypes {
  Id              Int               @id(map: "PK_ReportTypes") @default(autoincrement())
  Name            String            @db.VarChar(50)
  Enumeration     String            @db.VarChar(30)
  IsActive        Boolean           @default(true, map: "DF_ReportFunctions_IsActive")
  SortOrder       Int?
  ReportSchedules ReportSchedules[]

  @@unique([Id, Enumeration], map: "IX_ReportTypes_Enumeration")
}

model RepresentativeTypes {
  Id                    Int                     @id(map: "PK_RepresentativeTypes") @default(autoincrement())
  Name                  String                  @db.VarChar(100)
  Comments              String?                 @db.VarChar(250)
  IsActive              Boolean
  CreatedAt             DateTime
  UpdatedAt             DateTime?
  CreatedById           Int?
  UpdatedById           Int?
  ClientRepresentatives ClientRepresentatives[]
}

model ResponseMiscCharges {
  Id         Int     @id(map: "PK_ResponseMiscCharges") @default(autoincrement())
  ResponseId Int
  Name       String? @db.VarChar(256)
  Amount     Float?  @db.Money
}

model RoleClaims {
  Id      Int    @id(map: "PK_RoleClaim") @default(autoincrement())
  RoleId  Int
  ClaimId Int
  Claims  Claims @relation(fields: [ClaimId], references: [Id], onUpdate: NoAction, map: "FK_RoleClaims_Claims")
  Roles   Roles  @relation(fields: [RoleId], references: [Id], onUpdate: NoAction, map: "FK_RoleClaims_Roles")

  @@index([ClaimId, RoleId], map: "IX_RoleClaims_RoleId")
}

model Roles {
  Id              Int               @id(map: "PK_Roles") @default(autoincrement())
  Name            String            @db.VarChar(50)
  Description     String?           @db.VarChar(Max)
  CreatedAt       DateTime?
  UpdatedAt       DateTime?
  CreatedById     Int?
  UpdatedById     Int?
  IsActive        Boolean           @default(true, map: "default_Roles_True")
  ClientRoles     ClientRoles[]
  RoleClaims      RoleClaims[]
  UserClientRoles UserClientRoles[]
  UserRoles       UserRoles[]
}

model RoutingSequenceCodes {
  Id                                    Int                                     @id(map: "PK_RoutingSequenceCodes") @default(autoincrement())
  Code                                  String                                  @db.VarChar(3)
  Enumeration                           String                                  @db.VarChar(30)
  Name                                  String                                  @db.VarChar(50)
  IsLineHaul                            Boolean                                 @default(false, map: "DF_RoutingSequenceCodes_IsLineHaul")
  IsActive                              Boolean                                 @default(true, map: "DF_RoutingSequenceCodes_IsActive")
  SortOrder                             Int?
  DiversionRouteSegments                DiversionRouteSegments[]
  FreightInvoiceRouteSegments           FreightInvoiceRouteSegments[]
  PatternEmptyDispositionRouteSegments  PatternEmptyDispositionRouteSegments[]
  PatternRouteSegments                  PatternRouteSegments[]
  RateRouteSegments                     RateRouteSegments[]
  ShipmentEmptyDispositionRouteSegments ShipmentEmptyDispositionRouteSegments[]
  ShipmentRouteSegments                 ShipmentRouteSegments[]
  WaybillEmptyDispositionRouteSegments  WaybillEmptyDispositionRouteSegments[]
  WaybillRouteSegments                  WaybillRouteSegments[]
}

model Schedules {
  Id                 Int       @id(map: "PK_Schedules") @default(autoincrement())
  Name               String    @db.VarChar(50)
  FrequencyTypeId    Int
  FrequencyInterval  Int
  SubdayTypeId       Int
  SubdayInterval     Int
  RelativeIntervalId Int
  RecurrenceFactor   Int
  StartDate          DateTime
  EndDate            DateTime?
}

model ServiceLogCannedReponses {
  Id        Int     @id(map: "PK_ServiceLogCannedReponses") @default(autoincrement())
  Comment   String? @db.VarChar(Max)
  IsActive  Boolean
  SortOrder Int?
}

model ServiceLogCategories {
  Id              Int               @id(map: "PK_ServiceLogCategories") @default(autoincrement())
  Enumeration     String            @db.VarChar(30)
  Name            String            @db.VarChar(50)
  IsActive        Boolean           @default(true, map: "DF_ServiceLogCategories_IsActive")
  SortOrder       Int?
  ServiceLogTypes ServiceLogTypes[]
}

model ServiceLogComments {
  Id                                          Int         @id(map: "PK_ServiceLogComments") @default(autoincrement())
  ServiceLogId                                Int
  Comment                                     String      @db.VarChar(Max)
  CreatedAt                                   DateTime    @default(now(), map: "DF_EquipmentServiceLogComments_CreatedAt")
  UpdatedAt                                   DateTime?
  CreatedById                                 Int?
  UpdatedById                                 Int?
  Users_ServiceLogComments_CreatedByIdToUsers Users?      @relation("ServiceLogComments_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ServiceLogComments_Users_CreatedBy")
  ServiceLogs                                 ServiceLogs @relation(fields: [ServiceLogId], references: [Id], onUpdate: NoAction, map: "FK_ServiceLogComments_ServiceLogs")
  Users_ServiceLogComments_UpdatedByIdToUsers Users?      @relation("ServiceLogComments_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ServiceLogComments_Users_UpdatedBy")

  @@index([ServiceLogId, CreatedAt], map: "IX_ServiceLogComments_ServiceLogId")
}

model ServiceLogNotifications {
  Id                        Int                       @id(map: "PK_ServiceLogNotifications") @default(autoincrement())
  ServiceLogId              Int
  NotificationTypeId        Int
  NotificationContactId     Int?
  NotificationGroupId       Int?
  NotificationFtpLocationId Int?
  Name                      String?                   @db.VarChar(35)
  EmailAddress              String?                   @db.VarChar(80)
  PhoneNumber               String?                   @db.VarChar(30)
  FaxNumber                 String?                   @db.VarChar(30)
  CreatedAt                 DateTime                  @default(now(), map: "DF_ServiceLogNotifications_CreatedAt")
  UpdatedAt                 DateTime?
  CreatedById               Int?
  UpdatedById               Int?
  NotificationContacts      NotificationContacts?     @relation(fields: [NotificationContactId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ServiceLogNotifications_NotificationContacts")
  NotificationFtpLocations  NotificationFtpLocations? @relation(fields: [NotificationFtpLocationId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ServiceLogNotifications_NotificationFtpLocations")
  NotificationGroups        NotificationGroups?       @relation(fields: [NotificationGroupId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ServiceLogNotifications_NotificationGroups")
  NotificationTypes         NotificationTypes         @relation(fields: [NotificationTypeId], references: [Id], onUpdate: NoAction, map: "FK_ServiceLogNotifications_NotificationTypes")
  ServiceLogs               ServiceLogs               @relation(fields: [ServiceLogId], references: [Id], onUpdate: NoAction, map: "FK_ServiceLogNotifications_ServiceLogs")
}

model ServiceLogs {
  Id                                   Int                       @id(map: "PK_ServiceLogs") @default(autoincrement())
  ClientId                             Int
  EquipmentId                          Int
  ServiceLogTypeId                     Int
  ServiceLogStatusTypeId               Int                       @default(1, map: "DF_ServiceLogs_ServiceLogStatusTypeId")
  ShipmentId                           Int?
  CarLocationMessageId                 Int?
  CarrierId                            Int?
  ContactName                          String                    @db.VarChar(35)
  ContactPhone                         String?                   @db.VarChar(15)
  ContactEmail                         String                    @db.VarChar(80)
  Description                          String?                   @db.VarChar(Max)
  LocationCity                         String?                   @db.VarChar(30)
  LocationState                        String?                   @db.VarChar(2)
  IsEmpty                              Boolean
  BadOrderReasonId                     Int?
  BadOrderRepairTime                   Int?
  IsRailroadFailure                    Boolean
  Opened                               DateTime                  @default(now(), map: "DF_ServiceLogs_Opened") @db.DateTime
  Closed                               DateTime?                 @db.DateTime
  IsActive                             Boolean
  CreatedAt                            DateTime
  UpdatedAt                            DateTime?
  CreatedById                          Int?
  UpdatedById                          Int?
  DiversionId                          Int?
  BadOrderReasons                      BadOrderReasons?          @relation(fields: [BadOrderReasonId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ServiceLogs_BadOrderReasons")
  CarLocationMessages                  CarLocationMessages?      @relation(fields: [CarLocationMessageId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ServiceLogs_CarLocationMessages")
  Carriers                             Carriers?                 @relation(fields: [CarrierId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ServiceLogs_Carriers")
  Clients                              Clients                   @relation(fields: [ClientId], references: [Id], onUpdate: NoAction, map: "FK_ServiceLogs_Clients")
  Users_ServiceLogs_CreatedByIdToUsers Users?                    @relation("ServiceLogs_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ServiceLogs_Users_CreatedBy")
  Diversions                           Diversions?               @relation(fields: [DiversionId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ServiceLogs_Diversions")
  Equipments                           Equipments                @relation(fields: [EquipmentId], references: [Id], onUpdate: NoAction, map: "FK_ServiceLogs_Equipments")
  ServiceLogStatusTypes                ServiceLogStatusTypes     @relation(fields: [ServiceLogStatusTypeId], references: [Id], onUpdate: NoAction, map: "FK_ServiceLogs_ServiceLogStatusTypes")
  ServiceLogTypes                      ServiceLogTypes           @relation(fields: [ServiceLogTypeId], references: [Id], onUpdate: NoAction, map: "FK_ServiceLogs_ServiceLogTypes")
  Shipments                            Shipments?                @relation(fields: [ShipmentId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ServiceLogs_Shipments")
  Users_ServiceLogs_UpdatedByIdToUsers Users?                    @relation("ServiceLogs_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ServiceLogs_Users_UpdatedBy")
  ServiceLogComments                   ServiceLogComments[]
  ServiceLogNotifications              ServiceLogNotifications[]

  @@index([Id, IsActive, ClientId], map: "IX_ServiceLogs_ClientId")
  @@index([IsActive, EquipmentId], map: "IX_ServiceLogs_EquipmentId")
  @@index([CarLocationMessageId, EquipmentId, ServiceLogTypeId], map: "IX_ServiceLogs_ServiceLogTypeId")
}

model ServiceLogStatusTypes {
  Id          Int           @id(map: "PK_ServiceLogStatusTypes") @default(autoincrement())
  Enumeration String        @db.VarChar(30)
  Name        String        @db.VarChar(50)
  IsActive    Boolean       @default(true, map: "DF_ServiceLogStatusTypes_IsActive")
  SortOrder   Int?
  ServiceLogs ServiceLogs[]

  @@index([Name, Enumeration], map: "IX_ServiceLogStatusTypes_Enumeration")
}

model ServiceLogTypes {
  Id                         Int                          @id(map: "PK_ServiceLogTypes") @default(autoincrement())
  ServiceLogCategoryId       Int
  Name                       String                       @db.VarChar(50)
  Enumeration                String?                      @db.VarChar(30)
  Description                String?                      @db.VarChar(100)
  IsAutoOpened               Boolean                      @default(false, map: "DF_ServiceLogTypes_IsAutoOpened")
  IsActive                   Boolean                      @default(true, map: "DF_ServiceLogTypes_IsActive")
  SortOrder                  Int?
  CreatedAt                  DateTime
  UpdatedAt                  DateTime?
  CreatedById                Int?
  UpdatedById                Int?
  ServiceLogCategories       ServiceLogCategories         @relation(fields: [ServiceLogCategoryId], references: [Id], onUpdate: NoAction, map: "FK_ServiceLogTypes_ServiceLogCategories")
  ClientCloseServiceLogTypes ClientCloseServiceLogTypes[]
  ClientOpenServiceLogTypes  ClientOpenServiceLogTypes[]
  ServiceLogs                ServiceLogs[]

  @@index([Name, Enumeration], map: "IX_ServiceLogTypes_Enumeration")
}

model ShipmentAccountCodes {
  Id                                            Int              @default(autoincrement())
  ShipmentId                                    Int
  AccountCodeTypeId                             Int
  AccountCode                                   String           @db.VarChar(50)
  CreatedAt                                     DateTime         @default(now(), map: "DF__ShipmentA__Creat__5C036DDA")
  UpdatedAt                                     DateTime?
  CreatedById                                   Int?
  UpdatedById                                   Int?
  AccountCodeTypes                              AccountCodeTypes @relation(fields: [AccountCodeTypeId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentAccountCodes_AccountCodeTypes")
  Users_ShipmentAccountCodes_CreatedByIdToUsers Users?           @relation("ShipmentAccountCodes_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentAccountCodes_Users_CreatedById")
  Shipments                                     Shipments        @relation(fields: [ShipmentId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentAccountCodes_Shipments")
  Users_ShipmentAccountCodes_UpdatedByIdToUsers Users?           @relation("ShipmentAccountCodes_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentAccountCodes_Users_UpdatedById")

  @@id([ShipmentId, AccountCodeTypeId], map: "PK_ShipmentAccountCodes")
}

model ShipmentAcknowledgements {
  Id                    Int      @id(map: "PK_ShipmentAcknowledgements") @default(autoincrement())
  ShipmentId            Int
  ShipmentTransactionId Int
  TransactionSetId      Int
  Scac                  String   @db.VarChar(4)
  EquipmentCode         String?  @db.VarChar(10)
  WaybillNumber         Int?
  AcknowledgementCode   String   @db.Char(1)
  AcknowledgementDate   DateTime @db.DateTime
  ErrorText             String? // @db.VarChar(200)

  @@index([AcknowledgementCode, AcknowledgementDate, EquipmentCode, ErrorText, Id, Scac, ShipmentId, ShipmentTransactionId, TransactionSetId], map: "IX_ShipmentAcknowledgements_ShipmentId_ShipmentTransactionId_TransactionSetId")
}

model ShipmentCancellationReasons {
  Id          Int     @id(map: "PK_ShipmentCancellationReasons")
  Enumeration String  @db.VarChar(30)
  Name        String  @db.VarChar(50)
  IsActive    Boolean @default(true, map: "DF_ShipmentCancellationReasons_IsActive")
  SortOrder   Int?
}

model ShipmentCancellationTypes {
  Id               Int     @id(map: "PK_ShipmentCancellationTypes")
  Enumeration      String  @db.VarChar(30)
  Name             String  @db.VarChar(50)
  IsEdiTransaction Boolean @default(false, map: "DF_Table_1_UsedInRates")
  IsActive         Boolean @default(true, map: "DF_ShipmentCancellationTypes_IsActive")
  SortOrder        Int?

  @@unique([Id, Enumeration], map: "IX_ShipmentCancellationTypes_Enumeration")
}

model ShipmentCommodities {
  Id                                           Int                          @id(map: "PK_ShipmentCommodities") @default(autoincrement())
  ShipmentId                                   Int
  CommodityId                                  Int?
  Commodity                                    String                       @db.VarChar(50)
  CommodityCode                                String?                      @db.VarChar(20)
  Stcc                                         String                       @db.VarChar(7)
  LadingDescription                            String                       @db.VarChar(Max)
  Weight                                       Decimal?                     @db.Decimal(13, 3)
  Volume                                       Decimal?                     @db.Decimal(11, 3)
  LadingQuantity                               Int
  PackingFormId                                Int
  LadingValue                                  Decimal?                     @db.Decimal(11, 2)
  CurrencyId                                   Int?
  CreatedAt                                    DateTime                     @default(now(), map: "DF__ShipmentC__Creat__5CF79213")
  UpdatedAt                                    DateTime?
  CreatedById                                  Int?
  UpdatedById                                  Int?
  SourceId                                     Int?
  SatCommodityCode                             String?                      @db.VarChar(30)
  CustomsCode                                  String?                      @db.VarChar(30)
  Commodities                                  Commodities?                 @relation(fields: [CommodityId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentCommodities_Commodities")
  Users_ShipmentCommodities_CreatedByIdToUsers Users?                       @relation("ShipmentCommodities_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentCommodities_Users_CreatedById")
  PackingForms                                 PackingForms                 @relation(fields: [PackingFormId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentCommodities_PackingForms")
  Shipments                                    Shipments                    @relation(fields: [ShipmentId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentCommodities_Shipments")
  Users_ShipmentCommodities_UpdatedByIdToUsers Users?                       @relation("ShipmentCommodities_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentCommodities_Users_UpdatedById")
  ShipmentHazardousMaterials                   ShipmentHazardousMaterials[]

  @@index([Commodity, CommodityCode, CommodityId, Id, Stcc, ShipmentId], map: "IX_ShipmentCommodities")
}

model ShipmentContacts {
  Id                                        Int          @id(map: "PK_ShipmentContacts") @default(autoincrement())
  ShipmentId                                Int
  ContactId                                 Int?
  ContactTypeId                             Int
  Name                                      String?      @db.VarChar(35)
  PhoneNumber                               String?      @db.VarChar(30)
  FaxNumber                                 String?      @db.VarChar(30)
  EmailAddress                              String?      @db.VarChar(80)
  CreatedAt                                 DateTime     @default(now(), map: "DF__ShipmentC__Creat__5DEBB64C")
  UpdatedAt                                 DateTime?
  CreatedById                               Int?
  UpdatedById                               Int?
  Contacts                                  Contacts?    @relation(fields: [ContactId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentContacts_Contacts")
  ContactTypes                              ContactTypes @relation(fields: [ContactTypeId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentContacts_ContactTypes")
  Users_ShipmentContacts_CreatedByIdToUsers Users?       @relation("ShipmentContacts_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentContacts_Users_CreatedById")
  Shipments                                 Shipments    @relation(fields: [ShipmentId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentContacts_Shipments")
  Users_ShipmentContacts_UpdatedByIdToUsers Users?       @relation("ShipmentContacts_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentContacts_Users_UpdatedById")
}

model ShipmentCustomReferences {
  Id                                                Int                  @id(map: "PK_ShipmentCustomReferences") @default(autoincrement())
  ShipmentId                                        Int
  CustomReferenceTypeId                             Int
  ReferenceText                                     String?              @db.VarChar(80)
  IsRequired                                        Boolean              @default(false, map: "DF_ShipmentCustomReferences_IsRequired")
  CreatedAt                                         DateTime             @default(now(), map: "DF__ShipmentC__Creat__5EDFDA85")
  UpdatedAt                                         DateTime?
  CreatedById                                       Int?
  UpdatedById                                       Int?
  Users_ShipmentCustomReferences_CreatedByIdToUsers Users?               @relation("ShipmentCustomReferences_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentCustomReferences_Users_CreatedById")
  CustomReferenceTypes                              CustomReferenceTypes @relation(fields: [CustomReferenceTypeId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentCustomReferences_CustomReferenceTypes")
  Shipments                                         Shipments            @relation(fields: [ShipmentId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentCustomReferences_Shipments")
  Users_ShipmentCustomReferences_UpdatedByIdToUsers Users?               @relation("ShipmentCustomReferences_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentCustomReferences_Users_UpdatedById")
}

model ShipmentEmptyDispositionParties {
  Id                                                       Int        @id(map: "PK_ShipmentEmptyParties") @default(autoincrement())
  ShipmentId                                               Int
  PartyTypeId                                              Int
  PartyId                                                  Int?
  DisplayName                                              String     @db.VarChar(100)
  Name                                                     String     @db.VarChar(35)
  AddressLine1                                             String?    @db.VarChar(55)
  AddressLine2                                             String?    @db.VarChar(55)
  AddressLine3                                             String?    @db.VarChar(55)
  AddressLine4                                             String?    @db.VarChar(55)
  City                                                     String?    @db.VarChar(30)
  State                                                    String?    @db.Char(2)
  PostalCode                                               String?    @db.VarChar(15)
  Country                                                  String?    @db.Char(2)
  Splc                                                     String?    @db.VarChar(9)
  ReferenceId                                              String?    @db.VarChar(80)
  OriginCode                                               String?    @db.VarChar(13)
  DestinationCode                                          String?    @db.VarChar(13)
  FacilityCode                                             String?    @db.VarChar(13)
  CreatedAt                                                DateTime   @default(now(), map: "DF__ShipmentE__Creat__60C822F7")
  UpdatedAt                                                DateTime?
  CreatedById                                              Int?
  UpdatedById                                              Int?
  Users_ShipmentEmptyDispositionParties_CreatedByIdToUsers Users?     @relation("ShipmentEmptyDispositionParties_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentEmptyDispositionParties_Users_CreatedById")
  Parties                                                  Parties?   @relation(fields: [PartyId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentEmptyDispositionParties_Parties")
  PartyTypes                                               PartyTypes @relation(fields: [PartyTypeId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentEmptyDispositionParties_PartyTypes")
  Shipments                                                Shipments  @relation(fields: [ShipmentId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentEmptyDispositionParties_Shipments")
  Users_ShipmentEmptyDispositionParties_UpdatedByIdToUsers Users?     @relation("ShipmentEmptyDispositionParties_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentEmptyDispositionParties_Users_UpdatedById")
}

model ShipmentEmptyDispositionRouteSegments {
  Id                                                             Int                  @id(map: "PK_Shipment") @default(autoincrement())
  ShipmentId                                                     Int
  SequenceNumber                                                 Int
  Scac                                                           String               @db.VarChar(4)
  RoutingSequenceCodeId                                          Int
  JunctionRule260                                                String?              @db.VarChar(5)
  JunctionSplc                                                   String?              @db.VarChar(9)
  CreatedAt                                                      DateTime             @default(now(), map: "DF__ShipmentE__Creat__61BC4730")
  UpdatedAt                                                      DateTime?
  CreatedById                                                    Int?
  UpdatedById                                                    Int?
  Users_ShipmentEmptyDispositionRouteSegments_CreatedByIdToUsers Users?               @relation("ShipmentEmptyDispositionRouteSegments_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentEmptyDispositionRouteSegments_Users_CreatedById")
  RoutingSequenceCodes                                           RoutingSequenceCodes @relation(fields: [RoutingSequenceCodeId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentEmptyDispositionRouteSegments_RoutingSequenceCodes")
  Shipments                                                      Shipments            @relation(fields: [ShipmentId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentEmptyDispositionRouteSegments_Shipments")
  Users_ShipmentEmptyDispositionRouteSegments_UpdatedByIdToUsers Users?               @relation("ShipmentEmptyDispositionRouteSegments_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentEmptyDispositionRouteSegments_Users_UpdatedById")
}

model ShipmentEquipmentAccruals {
  Id                                                 Int                 @id(map: "PK_ShipmentEquipmentAccruals") @default(autoincrement())
  ShipmentEquipmentId                                Int
  RateId                                             Int
  RateDetailId                                       Int?
  RatePerUnitAccountsPayable                         Float               @db.Money
  RatePerUnitAccountsReceivable                      Float?              @db.Money
  RateUnitId                                         Int
  AmountAccountsPayable                              Float               @db.Money
  AmountAccountsReceivable                           Float?              @db.Money
  CurrencyId                                         Int
  SpecialChargeTypeId                                Int?
  IsRateDetailApplied                                Boolean             @default(true, map: "DF_ShipmentEquipmentAccruals_RateDetailApplied")
  CreatedAt                                          DateTime
  UpdatedAt                                          DateTime?
  CreatedById                                        Int?
  UpdatedById                                        Int?
  Users_ShipmentEquipmentAccruals_CreatedByIdToUsers Users?              @relation("ShipmentEquipmentAccruals_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentEquipmentAccruals_Users_CreatedById")
  Currencies                                         Currencies          @relation(fields: [CurrencyId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentEquipmentAccruals_Currencies")
  RateDetails                                        RateDetails?        @relation(fields: [RateDetailId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentEquipmentAccruals_RateDetaills")
  Rates                                              Rates               @relation(fields: [RateId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentEquipmentAccruals_Rates")
  RateUnits                                          RateUnits           @relation(fields: [RateUnitId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentEquipmentAccruals_Units")
  ShipmentEquipments                                 ShipmentEquipments  @relation(fields: [ShipmentEquipmentId], references: [Id], onDelete: Cascade, map: "FK_ShipmentEquipmentAccruals_ShipmentEquipments")
  SpecialChargeTypes                                 SpecialChargeTypes? @relation(fields: [SpecialChargeTypeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentEquipmentAccruals_SpecialChargeTypes")
  Users_ShipmentEquipmentAccruals_UpdatedByIdToUsers Users?              @relation("ShipmentEquipmentAccruals_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentEquipmentAccruals_Users_UpdatedById")

  @@index([AmountAccountsPayable, AmountAccountsReceivable, CurrencyId, IsRateDetailApplied, RatePerUnitAccountsPayable, RatePerUnitAccountsReceivable, RateUnitId, SpecialChargeTypeId, ShipmentEquipmentId, RateId, RateDetailId], map: "IX_ShipmentAccruals_ShipmentEquipmentId_RateId_RateDetailId")
}

model ShipmentEquipmentCarLocationMessages {
  Id                                                            Int                 @id(map: "PK_ShipmentEquipmentCarLocationMessages") @default(autoincrement())
  ShipmentEquipmentId                                           Int
  CarLocationMessageId                                          Int
  CreatedAt                                                     DateTime            @default(now(), map: "DF__ShipmentE__Creat__3FBD003E")
  UpdatedAt                                                     DateTime?
  CreatedById                                                   Int?
  UpdatedById                                                   Int?
  CarLocationMessages                                           CarLocationMessages @relation(fields: [CarLocationMessageId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentEquipmentCarLocationMessages_CarLocationMessages")
  Users_ShipmentEquipmentCarLocationMessages_CreatedByIdToUsers Users?              @relation("ShipmentEquipmentCarLocationMessages_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentEquipmentCarLocationMessages_Users_CreatedById")
  ShipmentEquipments                                            ShipmentEquipments  @relation(fields: [ShipmentEquipmentId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentEquipmentCarLocationMessages_ShipmentEquipments")
  Users_ShipmentEquipmentCarLocationMessages_UpdatedByIdToUsers Users?              @relation("ShipmentEquipmentCarLocationMessages_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentEquipmentCarLocationMessages_Users_UpdatedById")

  @@unique([Id, ShipmentEquipmentId, CarLocationMessageId], map: "IX_ShipmentEquipmentCarLocationMessages_ShipmentEquipmentId_CarLocationMessageId")
}

model ShipmentEquipmentRouteSegments {
  Id                                                      Int                @id(map: "PK_ShipmentEquipmentSegments") @default(autoincrement())
  ShipmentEquipmentId                                     Int
  SequenceNumber                                          Int
  Scac                                                    String             @db.VarChar(4)
  OriginCity                                              String             @db.VarChar(9)
  OriginState                                             String             @db.VarChar(2)
  DestinationState                                        String             @db.VarChar(2)
  DestinationCity                                         String             @db.VarChar(9)
  BeginDate                                               DateTime           @default(now(), map: "DF_ShipmentEquipmentRouteSegment_BeginDate")
  EndDate                                                 DateTime?
  CreatedAt                                               DateTime           @default(now(), map: "DF__ShipmentE__Creat__63A48FA2")
  UpdatedAt                                               DateTime
  CreatedById                                             Int?
  UpdatedById                                             Int?
  Users_ShipmentEquipmentRouteSegments_CreatedByIdToUsers Users?             @relation("ShipmentEquipmentRouteSegments_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentEquipmentRouteSegments_Users_CreatedById")
  ShipmentEquipments                                      ShipmentEquipments @relation(fields: [ShipmentEquipmentId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentEquipmentRouteSegments_ShipmentEquipments")
  Users_ShipmentEquipmentRouteSegments_UpdatedByIdToUsers Users?             @relation("ShipmentEquipmentRouteSegments_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentEquipmentRouteSegments_Users_UpdatedById")
}

model ShipmentEquipments {
  Id                                          Int                                    @id(map: "PK_ShipmentEquipments") @default(autoincrement())
  ShipmentId                                  Int
  SequenceNumber                              Int                                    @default(0, map: "DF_ShipmentEquipments_SequenceCode")
  EquipmentCode                               String?                                @db.VarChar(10)
  EquipmentId                                 Int?
  EquipmentInitial                            String                                 @db.VarChar(4)
  EquipmentNumber                             String                                 @db.VarChar(6)
  SealNumbers                                 String?                                @db.VarChar(500)
  Weight                                      Decimal?                               @db.Decimal(13, 3)
  Volume                                      Decimal?                               @db.Decimal(11, 3)
  EquipmentTypeId                             Int                                    @default(11, map: "DF_ShipmentEquipments_EquipmentTypeId")
  GrainCode                                   String?                                @db.VarChar(30)
  GrainOrderReference                         String?                                @db.VarChar(30)
  GrainLoadWeek                               Int?
  GrainIncentive                              String?                                @db.VarChar(30)
  GrainTrainRun                               Int?
  GrainBlockSize                              Int?
  GrainCot                                    String?                                @db.VarChar(30)
  WaybillNumber                               String?                                @db.VarChar(6)
  LoadedRelease                               DateTime?
  LoadedPull                                  DateTime?
  LoadedPlacementConstructive                 DateTime?
  LoadedPlacementActual                       DateTime?
  LoadNumber                                  String?                                @db.VarChar(30)
  EmptyRelease                                DateTime?
  EmptyPull                                   DateTime?
  EmptyPlacementConstructive                  DateTime?
  EmptyPlacementActual                        DateTime?
  ShipperRule11Destination                    DateTime?
  IsLeadCar                                   Boolean
  CreatedAt                                   DateTime                               @default(now(), map: "DF__ShipmentE__Creat__76583CBA")
  UpdatedAt                                   DateTime?
  CreatedById                                 Int?
  UpdatedById                                 Int?
  LoadedDestination                           DateTime?
  EmptyDestination                            DateTime?
  Users_ShipmentEquipments_CreatedByIdToUsers Users?                                 @relation("ShipmentEquipments_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentEquipments_Users_CreatedById")
  Equipments                                  Equipments?                            @relation(fields: [EquipmentId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentEquipments_Equipments")
  Shipments                                   Shipments                              @relation(fields: [ShipmentId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentEquipments_Shipments")
  Users_ShipmentEquipments_UpdatedByIdToUsers Users?                                 @relation("ShipmentEquipments_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentEquipments_Users_UpdatedById")
  ShipmentEquipmentAccruals                   ShipmentEquipmentAccruals[]
  ShipmentEquipmentCarLocationMessages        ShipmentEquipmentCarLocationMessages[]
  ShipmentEquipmentRouteSegments              ShipmentEquipmentRouteSegments[]
  ShipmentEquipmentSeals                      ShipmentEquipmentSeals[]

  @@index([Id, ShipmentId, EquipmentCode], map: "IX_ShipmentEquipments_EquipmentCode")
  @@index([Id, ShipmentId, EquipmentId], map: "IX_ShipmentEquipments_EquipmentId")
  @@index([EquipmentId, Id, IsLeadCar, Weight, ShipmentId], map: "IX_ShipmentEquipments_ShipmentId")
}

model ShipmentEquipmentSeals {
  Id                                              Int                @id(map: "PK_ShipmentEquipmentSeals") @default(autoincrement())
  ShipmentEquipmentId                             Int
  SealNumber                                      String             @db.VarChar(15)
  CreatedAt                                       DateTime           @default(now(), map: "DF__ShipmentE__Creat__658CD814")
  UpdatedAt                                       DateTime?
  CreatedById                                     Int?
  UpdatedById                                     Int?
  Users_ShipmentEquipmentSeals_CreatedByIdToUsers Users?             @relation("ShipmentEquipmentSeals_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentEquipmentSeals_Users_CreatedById")
  ShipmentEquipments                              ShipmentEquipments @relation(fields: [ShipmentEquipmentId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentEquipmentSeals_ShipmentEquipments")
  Users_ShipmentEquipmentSeals_UpdatedByIdToUsers Users?             @relation("ShipmentEquipmentSeals_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentEquipmentSeals_Users_UpdatedById")

  @@index([SealNumber, ShipmentEquipmentId], map: "IX_ShipmentEquipmentSeals_ShipmentEquipmentId")
}

model ShipmentEventTypes {
  Id          Int     @id(map: "PK_ShipmentEventTypes") @default(autoincrement())
  Name        String  @db.VarChar(50)
  Enumeration String  @db.VarChar(30)
  IsActive    Boolean @default(true, map: "DF_ShipmentEventTypes_IsActive")
  SortOrder   Int?
}

model ShipmentExtendedReferences {
  Id                      Int       @id(map: "PK_ShipmentReferences") @default(autoincrement())
  ShipmentId              Int
  ExtendedReferenceTypeId Int
  ReferenceText           String?   @db.VarChar(80)
  ReferenceDate           DateTime?
  CreatedAt               DateTime  @default(now(), map: "DF__ShipmentE__Creat__6680FC4D")
  UpdatedAt               DateTime?
  CreatedById             Int?
  UpdatedById             Int?
  IsRequired              Boolean   @default(false, map: "DF_ShipmentExtendedReferences_IsRequired")

  @@index([ReferenceText, ShipmentId, ExtendedReferenceTypeId], map: "IX_ShipmentExtendedReferences_ExtendedReferenceTypeId")
}

model ShipmentHazardousMaterialCanadianRequirements {
  Id                          Int                        @id(map: "PK_ShipmentHazardousMaterialCanadianRequirements") @default(autoincrement())
  ShipmentHazardousMaterialId Int
  EmergencyResponsePlanNumber String?                    @db.VarChar(12)
  PhoneNumber1                String?                    @db.VarChar(80)
  PhoneNumber2                String?                    @db.VarChar(80)
  IsSpecialCommodity          Boolean?
  ShipmentHazardousMaterials  ShipmentHazardousMaterials @relation(fields: [ShipmentHazardousMaterialId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentHazardousMaterialCanadianRequirements_ShipmentHazardousMaterials")

  @@index([EmergencyResponsePlanNumber, IsSpecialCommodity, PhoneNumber1, PhoneNumber2, ShipmentHazardousMaterialId], map: "IX_ShipmentHazardousMaterialCanadianRequirements_ShipmentHazardousMaterialId")
}

model ShipmentHazardousMaterialClassifications {
  Id                          Int                        @id(map: "PK_ShipmentHazardousMaterialClassifications") @default(autoincrement())
  ShipmentHazardousMaterialId Int
  HazardousClassQualifierId   Int
  HazardousClassificationId   Int
  IsReportableQuantity        Boolean                    @default(true, map: "DF_ShipmentHazardousMaterialClassifications_IsReportableQuantity")
  HazardousClassQualifiers    HazardousClassQualifiers   @relation(fields: [HazardousClassQualifierId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentHazardousMaterialClassifications_HazardousClassQualifiers")
  ShipmentHazardousMaterials  ShipmentHazardousMaterials @relation(fields: [ShipmentHazardousMaterialId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentHazardousMaterialClassifications_ShipmentHazardousMaterials")

  @@index([HazardousClassQualifierId, IsReportableQuantity, ShipmentHazardousMaterialId], map: "IX_ShipmentHazardousMaterialClassifications_ShipmentHazardousMaterialId")
}

model ShipmentHazardousMaterialContacts {
  Id                          Int                        @id(map: "PK_ShipmentHazardousMaterialContacts") @default(autoincrement())
  ShipmentHazardousMaterialId Int
  ContactId                   Int?
  ContactTypeId               Int
  Name                        String?                    @db.VarChar(35)
  PhoneNumber                 String?                    @db.VarChar(30)
  FaxNumber                   String?                    @db.VarChar(30)
  EmailAddress                String?                    @db.VarChar(80)
  ShipmentHazardousMaterials  ShipmentHazardousMaterials @relation(fields: [ShipmentHazardousMaterialId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentHazardousMaterialContacts_ShipmentHazardousMaterials")

  @@index([ContactTypeId, EmailAddress, FaxNumber, Name, ShipmentHazardousMaterialId], map: "IX_ShipmentHazardousMaterialContacts_ShipmentHazardousMaterialId")
}

model ShipmentHazardousMaterialEpaRequirements {
  Id                          Int                         @id(map: "PK_ShipmentHazardousMaterialEpaRequirements") @default(autoincrement())
  ShipmentHazardousMaterialId Int?
  WasteStreamNumberCode       String?                     @db.VarChar(6)
  WasteCharacteristicsCode    String?                     @db.VarChar(16)
  ShipmentHazardousMaterials  ShipmentHazardousMaterials? @relation(fields: [ShipmentHazardousMaterialId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentHazardousMaterialEpaRequirements_ShipmentHazardousMaterials")

  @@index([WasteCharacteristicsCode, WasteStreamNumberCode, ShipmentHazardousMaterialId], map: "IX_ShipmentHazardousMaterialEpaRequirements_ShipmentHazardousMaterialId")
}

model ShipmentHazardousMaterialFreeForms {
  Id                             Int                           @id(map: "PK_ShipmentHazardousMaterialFreeForms") @default(autoincrement())
  ShipmentHazardousMaterialId    Int
  ShippingInformationQualifierId Int
  ShippingInformation1           String                        @db.VarChar(250)
  ShippingInformation2           String?                       @db.VarChar(25)
  HazardZoneCodeId               Int?
  FreeFormDate                   DateTime?                     @db.Date
  HazardZoneCodes                HazardZoneCodes?              @relation(fields: [HazardZoneCodeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentHazardousMaterialFreeForms_HazardZoneCodes")
  ShipmentHazardousMaterials     ShipmentHazardousMaterials    @relation(fields: [ShipmentHazardousMaterialId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentHazardousMaterialFreeForms_ShipmentHazardousMaterials")
  ShippingInformationQualifiers  ShippingInformationQualifiers @relation(fields: [ShippingInformationQualifierId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentHazardousMaterialFreeForms_ShippingInformationQualifiers")

  @@index([HazardZoneCodeId, ShippingInformation1, ShippingInformation2, ShippingInformationQualifierId, ShipmentHazardousMaterialId], map: "IX_ShipmentHazardousMaterialFreeForms_ShipmentHazardousMaterialId")
}

model ShipmentHazardousMaterialReferences {
  Id                          Int                        @id(map: "PK_ShipmentHazardousMaterialReferences") @default(autoincrement())
  ShipmentHazardousMaterialId Int
  ExtendedReferenceTypeId     Int
  ReferenceText               String                     @db.VarChar(30)
  ReferenceDate               DateTime?                  @db.Date
  ExtendedReferenceTypes      ExtendedReferenceTypes     @relation(fields: [ExtendedReferenceTypeId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentHazardousMaterialReferences_ExtendedReferenceTypes")
  ShipmentHazardousMaterials  ShipmentHazardousMaterials @relation(fields: [ShipmentHazardousMaterialId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentHazardousMaterialReferences_ShipmentHazardousMaterials")

  @@index([ExtendedReferenceTypeId, ReferenceDate, ReferenceText, ShipmentHazardousMaterialId], map: "IX_ShipmentHazardousMaterialReferences_ShipmentHazardousMaterialId")
}

model ShipmentHazardousMaterials {
  Id                                            Int                                             @id(map: "PK_ShipmentHazardousMaterials") @default(autoincrement())
  ShipmentCommodityId                           Int
  Name                                          String                                          @db.VarChar(125)
  UnNaCode                                      String?                                         @db.VarChar(6)
  PageNumber                                    String?                                         @db.VarChar(6)
  Stcc                                          String?                                         @db.VarChar(7)
  RegulatoryNumber                              String?                                         @db.VarChar(5)
  PackingGroupCodeId                            Int?
  SourceId                                      Int?
  UnitCodeId                                    Int                                             @default(1, map: "DF_ShipmentHazardousMaterials_UnitCodeId")
  PackingGroupCodes                             PackingGroupCodes?                              @relation(fields: [PackingGroupCodeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentHazardousMaterials_PackingGroupCodes")
  ShipmentCommodities                           ShipmentCommodities                             @relation(fields: [ShipmentCommodityId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentHazardousMaterials_ShipmentCommodities")
  UnitCodes                                     UnitCodes                                       @relation(fields: [UnitCodeId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentHazardousMaterials_UnitCodes")
  ShipmentHazardousMaterialCanadianRequirements ShipmentHazardousMaterialCanadianRequirements[]
  ShipmentHazardousMaterialClassifications      ShipmentHazardousMaterialClassifications[]
  ShipmentHazardousMaterialContacts             ShipmentHazardousMaterialContacts[]
  ShipmentHazardousMaterialEpaRequirements      ShipmentHazardousMaterialEpaRequirements[]
  ShipmentHazardousMaterialFreeForms            ShipmentHazardousMaterialFreeForms[]
  ShipmentHazardousMaterialReferences           ShipmentHazardousMaterialReferences[]
  ShipmentHazardousMaterialShippingNames        ShipmentHazardousMaterialShippingNames[]

  @@index([ShipmentCommodityId], map: "IX_ShipmentHazardousMaterials_ShipmentCommodityId")
}

model ShipmentHazardousMaterialShippingNames {
  Id                          Int                        @id(map: "PK_ShipmentHazardousMaterialShippingNames") @default(autoincrement())
  ShipmentHazardousMaterialId Int
  ShippingName                String                     @db.VarChar(125)
  ShippingNameQualifierId     Int
  IsNotOtherwiseSpecified     Boolean
  ShipmentHazardousMaterials  ShipmentHazardousMaterials @relation(fields: [ShipmentHazardousMaterialId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentHazardousMaterialShippingNames_ShipmentHazardousMaterials")
  ShippingNameQualifiers      ShippingNameQualifiers     @relation(fields: [ShippingNameQualifierId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentHazardousMaterialShippingNames_CommodityHazardousMaterialShippingNameQualifiers")

  @@index([IsNotOtherwiseSpecified, ShippingName, ShippingNameQualifierId, ShipmentHazardousMaterialId], map: "IX_ShipmentHazardousMaterialShippingNames_ShipmentHazardousMaterialId")
}

model ShipmentHazardousReferences {
  Id                      Int       @id(map: "PK_ShipmentHazardousReferences") @default(autoincrement())
  ShipmentId              Int
  ExtendedReferenceTypeId Int
  ReferenceText           String    @db.VarChar(50)
  ReferenceDate           DateTime? @db.Date
  Shipments               Shipments @relation(fields: [ShipmentId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentHazardousReferences_Shipments")

  @@index([ExtendedReferenceTypeId, ReferenceDate, ReferenceText, ShipmentId], map: "IX_ShipmentHazardousReferences_ShipmentId")
}

model ShipmentHistories {
  Id                           Int       @id(map: "PK_ShipmentHistories") @default(autoincrement())
  ShipmentId                   Int
  ShipmentEventTypeId          Int
  ShipmentCancellationReasonId Int?
  Comment                      String? // @db.VarChar(Max)
  CreatedAt                    DateTime  @default(now(), map: "DF_ShipmentHistories_CreatedAt")
  UpdatedAt                    DateTime?
  CreatedById                  Int?
  UpdatedById                  Int?
  SendCancellationEmail        Boolean?
  SendEmail                    Boolean?

  @@index([Comment, CreatedAt, CreatedById, Id, SendCancellationEmail, ShipmentCancellationReasonId, ShipmentEventTypeId, UpdatedAt, UpdatedById, ShipmentId], map: "IX_ShipmentHistories_ShipmentId")
}

model ShipmentNotifications {
  Id                                             Int                       @id(map: "PK_ShipmentNotifications") @default(autoincrement())
  ShipmentId                                     Int
  NotificationTypeId                             Int
  NotificationContactId                          Int?
  NotificationGroupId                            Int?
  NotificationFtpLocationId                      Int?
  Name                                           String?                   @db.VarChar(35)
  EmailAddress                                   String?                   @db.VarChar(80)
  PhoneNumber                                    String?                   @db.VarChar(30)
  FaxNumber                                      String?                   @db.VarChar(30)
  CreatedAt                                      DateTime                  @default(now(), map: "DF__ShipmentN__Creat__67752086")
  UpdatedAt                                      DateTime?
  CreatedById                                    Int
  UpdatedById                                    Int?
  Users_ShipmentNotifications_CreatedByIdToUsers Users                     @relation("ShipmentNotifications_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onUpdate: NoAction, map: "FK_ShipmentNotifications_Users_CreatedById")
  NotificationContacts                           NotificationContacts?     @relation(fields: [NotificationContactId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentNotifications_NotificationContacts")
  NotificationFtpLocations                       NotificationFtpLocations? @relation(fields: [NotificationFtpLocationId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentNotifications_NotificationFtpLocations")
  NotificationGroups                             NotificationGroups?       @relation(fields: [NotificationGroupId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentNotifications_NotificationGroups")
  NotificationTypes                              NotificationTypes         @relation(fields: [NotificationTypeId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentNotifications_NotificationTypes")
  Shipments                                      Shipments                 @relation(fields: [ShipmentId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentNotifications_Shipments")
  Users_ShipmentNotifications_UpdatedByIdToUsers Users?                    @relation("ShipmentNotifications_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentNotifications_Users_UpdatedById")

  @@index([ShipmentId], map: "IX_ShipmentNotifications_ShipmentId")
}

model ShipmentParties {
  Id                                       Int                            @id(map: "PK_ShipmentParties") @default(autoincrement())
  ShipmentId                               Int
  PartyTypeId                              Int
  PartyId                                  Int?
  DisplayName                              String                         @db.VarChar(60)
  Name                                     String                         @db.VarChar(35)
  AddressLine1                             String?                        @db.VarChar(55)
  AddressLine2                             String?                        @db.VarChar(55)
  AddressLine3                             String?                        @db.VarChar(55)
  AddressLine4                             String?                        @db.VarChar(55)
  City                                     String?                        @db.VarChar(30)
  State                                    String?                        @db.Char(2)
  PostalCode                               String?                        @db.VarChar(15)
  Country                                  String?                        @db.Char(2)
  Splc                                     String?                        @db.VarChar(9)
  ReferenceId                              String?                        @db.VarChar(80)
  OriginCode                               String?                        @db.VarChar(13)
  DestinationCode                          String?                        @db.VarChar(13)
  FacilityCode                             String?                        @db.VarChar(13)
  CreatedAt                                DateTime                       @default(now(), map: "DF__ShipmentP__Creat__686944BF")
  UpdatedAt                                DateTime?
  CreatedById                              Int?
  UpdatedById                              Int?
  Address                                  String?                        @db.VarChar(330)
  Users_ShipmentParties_CreatedByIdToUsers Users?                         @relation("ShipmentParties_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentParties_Users_CreatedById")
  Parties                                  Parties?                       @relation(fields: [PartyId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentParties_Parties")
  PartyTypes                               PartyTypes                     @relation(fields: [PartyTypeId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentParties_PartyTypes")
  Shipments                                Shipments                      @relation(fields: [ShipmentId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentParties_Shipments")
  Users_ShipmentParties_UpdatedByIdToUsers Users?                         @relation("ShipmentParties_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentParties_Users_UpdatedById")
  ShipmentPartyBillingSegments             ShipmentPartyBillingSegments[]
  ShipmentPartyContacts                    ShipmentPartyContacts[]

  @@index([Name, ShipmentId, PartyTypeId, PartyId], map: "IX_ShipmentParties_ShipmentId_PartyTypeId_PartyId")
}

model ShipmentPartyBillingSegments {
  Id                                                    Int             @id(map: "PK_ShipmentPartyBillingSegments") @default(autoincrement())
  ShipmentPartyId                                       Int
  RateId                                                Int?
  OriginFsac                                            String?         @db.VarChar(5)
  DestinationFsac                                       String?         @db.VarChar(5)
  OriginSplc                                            String?         @db.VarChar(9)
  OriginCity                                            String          @db.VarChar(30)
  OriginState                                           String?         @db.Char(2)
  OriginCountry                                         String?         @db.Char(2)
  DestinationSplc                                       String?         @db.VarChar(9)
  DestinationCity                                       String          @db.VarChar(30)
  DestinationState                                      String?         @db.Char(2)
  DestinationCountry                                    String?         @db.Char(2)
  Scac1                                                 String          @db.VarChar(4)
  Scac2                                                 String?         @db.VarChar(4)
  Scac3                                                 String?         @db.VarChar(4)
  CreatedAt                                             DateTime        @default(now(), map: "DF__ShipmentP__Creat__695D68F8")
  UpdatedAt                                             DateTime?
  CreatedById                                           Int?
  UpdatedById                                           Int?
  Users_ShipmentPartyBillingSegments_CreatedByIdToUsers Users?          @relation("ShipmentPartyBillingSegments_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentPartyBillingSegments_Users_CreatedById")
  ShipmentParties                                       ShipmentParties @relation(fields: [ShipmentPartyId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentPartyBillingSegments_ShipmentParties")
  Users_ShipmentPartyBillingSegments_UpdatedByIdToUsers Users?          @relation("ShipmentPartyBillingSegments_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentPartyBillingSegments_Users_UpdatedById")
}

model ShipmentPartyContacts {
  Id                                             Int             @id(map: "PK_ShipmentPartyContacts") @default(autoincrement())
  ShipmentPartyId                                Int
  ContactId                                      Int?
  ContactTypeId                                  Int
  Name                                           String?         @db.VarChar(35)
  PhoneNumber                                    String?         @db.VarChar(30)
  FaxNumber                                      String?         @db.VarChar(30)
  EmailAddress                                   String?         @db.VarChar(80)
  CreatedAt                                      DateTime        @default(now(), map: "DF__ShipmentP__Creat__6A518D31")
  UpdatedAt                                      DateTime?
  CreatedById                                    Int
  UpdatedById                                    Int?
  Contacts                                       Contacts?       @relation(fields: [ContactId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentPartyContacts_Contacts")
  ContactTypes                                   ContactTypes    @relation(fields: [ContactTypeId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentPartyContacts_ContactTypes")
  Users_ShipmentPartyContacts_CreatedByIdToUsers Users           @relation("ShipmentPartyContacts_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onUpdate: NoAction, map: "FK_ShipmentPartyContacts_Users_CreatedById")
  ShipmentParties                                ShipmentParties @relation(fields: [ShipmentPartyId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentPartyContacts_ShipmentParties")
  Users_ShipmentPartyContacts_UpdatedByIdToUsers Users?          @relation("ShipmentPartyContacts_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentPartyContacts_Users_UpdatedById")
}

model ShipmentPriceAuthorities {
  Id                                                Int                 @id(map: "PK_ShipmentPriceAuthorities") @default(autoincrement())
  ShipmentId                                        Int
  PriceAuthorityTypeId                              Int
  CarrierId                                         Int?
  ContractNumber                                    String              @db.VarChar(30)
  AuthorityNumber                                   String?             @db.VarChar(10)
  AuthoritySuffix                                   String?             @db.VarChar(2)
  CreatedAt                                         DateTime            @default(now(), map: "DF__ShipmentP__Creat__6B45B16A")
  UpdatedAt                                         DateTime?
  CreatedById                                       Int?
  UpdatedById                                       Int?
  TariffItemNumber                                  String?             @db.VarChar(16)
  Carriers                                          Carriers?           @relation(fields: [CarrierId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentPriceAuthorities_Carriers")
  Users_ShipmentPriceAuthorities_CreatedByIdToUsers Users?              @relation("ShipmentPriceAuthorities_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentPriceAuthorities_Users_CreatedById")
  PriceAuthorityTypes                               PriceAuthorityTypes @relation(fields: [PriceAuthorityTypeId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentPriceAuthorities_PriceAuthorityTypes")
  Shipments                                         Shipments           @relation(fields: [ShipmentId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentPriceAuthorities_Shipments")
  Users_ShipmentPriceAuthorities_UpdatedByIdToUsers Users?              @relation("ShipmentPriceAuthorities_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentPriceAuthorities_Users_UpdatedById")

  @@index([ShipmentId], map: "IX_ShipmentPriceAuthorities_ShipmentId")
}

model ShipmentQualifiers {
  Id          Int         @id(map: "PK_ShipmentQualifiers") @default(autoincrement())
  Code        String      @db.Char(1)
  Enumeration String      @db.VarChar(30)
  Name        String      @db.VarChar(50)
  IsActive    Boolean     @default(true, map: "DF_ShipmentQualifiers_IsActive")
  SortOrder   Int?
  Shipments   Shipments[]
  Waybills    Waybills[]

  @@unique([Id, Code], map: "IX_ShipmentQualifiers_Code")
  @@unique([Id, Enumeration], map: "IX_ShipmentQualifiers_Enumeration")
}

model ShipmentRates {
  Id                                     Int       @id(map: "PK_ShipmentRates") @default(autoincrement())
  ShipmentId                             Int
  RateId                                 Int
  Mileage                                Int?
  SwitchingAccountsPayable               Float?    @db.Money
  SwitchingAccountsReceivable            Float?    @db.Money
  CreatedAt                              DateTime  @default(now(), map: "DF__ShipmentR__Creat__6D2DF9DC")
  UpdatedAt                              DateTime?
  CreatedById                            Int?
  UpdatedById                            Int?
  Users_ShipmentRates_CreatedByIdToUsers Users?    @relation("ShipmentRates_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentRates_Users_CreatedById")
  Rates                                  Rates     @relation(fields: [RateId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentRates_Rates")
  Shipments                              Shipments @relation(fields: [ShipmentId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentRates_Shipments")
  Users_ShipmentRates_UpdatedByIdToUsers Users?    @relation("ShipmentRates_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentRates_Users_UpdatedById")

  @@unique([Mileage, SwitchingAccountsPayable, SwitchingAccountsReceivable, ShipmentId, RateId], map: "IX_ShipmentRates_ShipmentId_RateId")
}

model ShipmentRouteSegments {
  Id                                             Int                  @id(map: "PK_ShipmentRouteSegments") @default(autoincrement())
  ShipmentId                                     Int
  SequenceNumber                                 Int
  Scac                                           String               @db.VarChar(4)
  RoutingSequenceCodeId                          Int
  JunctionRule260                                String?              @db.VarChar(5)
  JunctionSplc                                   String?              @db.VarChar(9)
  CreatedAt                                      DateTime             @default(now(), map: "DF__ShipmentR__Creat__6E221E15")
  UpdatedAt                                      DateTime?
  CreatedById                                    Int?
  UpdatedById                                    Int?
  Users_ShipmentRouteSegments_CreatedByIdToUsers Users?               @relation("ShipmentRouteSegments_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentRouteSegments_Users_CreatedById")
  RoutingSequenceCodes                           RoutingSequenceCodes @relation(fields: [RoutingSequenceCodeId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentRouteSegments_RoutingSequenceCodes")
  Shipments                                      Shipments            @relation(fields: [ShipmentId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentRouteSegments_Shipments")
  Users_ShipmentRouteSegments_UpdatedByIdToUsers Users?               @relation("ShipmentRouteSegments_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentRouteSegments_Users_UpdatedById")

  @@index([ShipmentId], map: "IX_ShipmentRouteSegments_ShipmentId")
}

model Shipments {
  Id                                    Int                                     @id(map: "PK_Shipments") @default(autoincrement())
  ClientId                              Int
  WaybillId                             Int?
  PatternId                             Int?
  ShipmentStatusTypeId                  Int                                     @default(2, map: "DF_Shipments_ShipmentStatusId")
  PaymentMethodId                       Int
  CarrierId                             Int
  LeadEquipment                         String                                  @db.VarChar(10)
  ShipperParty                          String?                                 @db.VarChar(60)
  PickupParty                           String?                                 @db.VarChar(60)
  ConsigneeParty                        String?                                 @db.VarChar(60)
  InCareOfParty                         String?                                 @db.VarChar(60)
  AccountOfParty                        String?                                 @db.VarChar(60)
  AccountOfOriginParty                  String?                                 @db.VarChar(60)
  AccountOfDestinationParty             String?                                 @db.VarChar(60)
  PayerFreightParty                     String?                                 @db.VarChar(60)
  Rule11Party1                          String?                                 @db.VarChar(60)
  Rule11Party2                          String?                                 @db.VarChar(60)
  Rule11Party3                          String?                                 @db.VarChar(60)
  CustomsBrokerParty                    String?                                 @db.VarChar(60)
  CanadianCustomsBrokerParty            String?                                 @db.VarChar(60)
  MexicanCustomsBrokerParty             String?                                 @db.VarChar(60)
  USCustomsBrokerParty                  String?                                 @db.VarChar(60)
  ImporterParty                         String?                                 @db.VarChar(60)
  ForwarderParty                        String?                                 @db.VarChar(60)
  WeightUnitId                          Int                                     @default(3, map: "DF_Shipments_WeightUnitId")
  VolumeUnitId                          Int?
  ShipmentQualifierId                   Int                                     @default(5, map: "DF_Shipments_ShipmentQualifierId")
  IsSectionSeven                        Boolean
  IsRevenueMove                         Boolean                                 @default(true, map: "DF_Shipments_IsRevenueMove")
  IsWeighInRoute                        Boolean                                 @default(false, map: "DF_Shipments_IsWeighInRoute")
  IsEmptyMove                           Boolean
  HasEmptyReturn                        Boolean                                 @default(true, map: "DF_Shipments_IsEmptyReturn")
  IsUnitTrain                           Boolean
  IsHazardous                           Boolean
  WeightQualifierId                     Int                                     @default(3, map: "DF_Shipments_WeightQualifierId")
  WeightTypeId                          Int?                                    @default(12, map: "DF_Shipments_WeightType")
  BillingTypeId                         Int
  TimeZoneId                            Int
  Shipped                               DateTime
  Expected                              DateTime?
  Cancelled                             DateTime?
  AccrualCalculated                     DateTime?
  AccrualExported                       DateTime?
  Bol                                   String                                  @db.VarChar(30)
  PurchaseOrder                         String?                                 @db.VarChar(30)
  CustomerOrder                         String?                                 @db.VarChar(30)
  Lot                                   String?                                 @db.VarChar(30)
  Route                                 String                                  @db.VarChar(200)
  EmptyDispositionRoute                 String?                                 @db.VarChar(200)
  OriginCity                            String                                  @db.VarChar(30)
  OriginState                           String                                  @db.Char(2)
  OriginCountry                         String                                  @db.Char(2)
  DestinationCity                       String                                  @db.VarChar(30)
  DestinationState                      String                                  @db.Char(2)
  DestinationCountry                    String                                  @db.Char(2)
  Mileage                               Int?
  EstimatedTransitDays                  Int?
  AdditionalInstructions                String?                                 @db.VarChar(Max)
  IsEdiShipment                         Boolean                                 @default(false, map: "DF_Shipments_IsEdiShipment")
  IsActive                              Boolean                                 @default(true, map: "DF_Shipments_IsActive")
  IsDeleted                             Boolean                                 @default(false, map: "DF_Shipments_IsDeleted")
  CreatedAt                             DateTime                                @default(now(), map: "DF_Shipments_CreatedAt")
  UpdatedAt                             DateTime?
  CreatedById                           Int?
  UpdatedById                           Int?
  SourceId                              Int?
  HazmatCertificationContact            String?                                 @db.VarChar(50)
  LocationId                            Int?
  ShipmentTypeId                        Int?
  ExpectedShip                          DateTime?
  ExpectedReceive                       DateTime?
  Completed                             DateTime?
  BillingTypes                          BillingTypes                            @relation(fields: [BillingTypeId], references: [Id], onUpdate: NoAction, map: "FK_Shipments_BillingTypes")
  Carriers                              Carriers                                @relation(fields: [CarrierId], references: [Id], onUpdate: NoAction, map: "FK_Shipments_Carriers")
  Clients                               Clients                                 @relation(fields: [ClientId], references: [Id], onUpdate: NoAction, map: "FK_Shipments_Clients")
  Users_Shipments_CreatedByIdToUsers    Users?                                  @relation("Shipments_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Shipments_Users_CreatedById")
  Locations                             Locations?                              @relation(fields: [LocationId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Shipments_Locations")
  Patterns                              Patterns?                               @relation(fields: [PatternId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Shipments_Patterns")
  PaymentMethods                        PaymentMethods                          @relation(fields: [PaymentMethodId], references: [Id], onUpdate: NoAction, map: "FK_Shipments_PaymentMethods")
  ShipmentQualifiers                    ShipmentQualifiers                      @relation(fields: [ShipmentQualifierId], references: [Id], onUpdate: NoAction, map: "FK_Shipments_ShipmentQualifiers")
  ShipmentStatusTypes                   ShipmentStatusTypes                     @relation(fields: [ShipmentStatusTypeId], references: [Id], onUpdate: NoAction, map: "FK_Shipments_ShipmentStatusTypes")
  ShipmentTypes                         ShipmentTypes?                          @relation(fields: [ShipmentTypeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Shipments_ShipmentTypes")
  TimeZones                             TimeZones                               @relation(fields: [TimeZoneId], references: [Id], onUpdate: NoAction, map: "FK_Shipments_TimeZones")
  Users_Shipments_UpdatedByIdToUsers    Users?                                  @relation("Shipments_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Shipments_Users_UpdatedById")
  VolumeUnits                           VolumeUnits?                            @relation(fields: [VolumeUnitId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Shipments_VolumeUnits")
  Waybills                              Waybills?                               @relation(fields: [WaybillId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Shipments_Waybills")
  WeightQualifiers                      WeightQualifiers                        @relation(fields: [WeightQualifierId], references: [Id], onUpdate: NoAction, map: "FK_Shipments_WeightQualifiers")
  WeightTypes                           WeightTypes?                            @relation(fields: [WeightTypeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Shipments_WeightTypes")
  WeightUnits                           WeightUnits                             @relation(fields: [WeightUnitId], references: [Id], onUpdate: NoAction, map: "FK_Shipments_WeightUnits")
  ServiceLogs                           ServiceLogs[]
  ShipmentAccountCodes                  ShipmentAccountCodes[]
  ShipmentCommodities                   ShipmentCommodities[]
  ShipmentContacts                      ShipmentContacts[]
  ShipmentCustomReferences              ShipmentCustomReferences[]
  ShipmentEmptyDispositionParties       ShipmentEmptyDispositionParties[]
  ShipmentEmptyDispositionRouteSegments ShipmentEmptyDispositionRouteSegments[]
  ShipmentEquipments                    ShipmentEquipments[]
  ShipmentHazardousReferences           ShipmentHazardousReferences[]
  ShipmentNotifications                 ShipmentNotifications[]
  ShipmentParties                       ShipmentParties[]
  ShipmentPriceAuthorities              ShipmentPriceAuthorities[]
  ShipmentRates                         ShipmentRates[]
  ShipmentRouteSegments                 ShipmentRouteSegments[]
  ShipmentSpecialHandlingCodes          ShipmentSpecialHandlingCodes[]
  ShipmentTransactions                  ShipmentTransactions[]

  @@index([LeadEquipment, Bol], map: "IX_Shipments_Bol")
  @@index([CarrierId], map: "IX_Shipments_CarrierId")
  @@index([Bol, Id, ShipmentStatusTypeId, Shipped, ShipperParty, ClientId, IsDeleted, IsActive], map: "IX_Shipments_ClientId_IsDeleted_IsActive")
  @@index([LeadEquipment, Shipped], map: "IX_Shipments_Shipped")
  @@index([SourceId], map: "IX_Shipments_SourceId")
}

model ShipmentSpecialHandlingCodes {
  Id                                                    Int                  @default(autoincrement())
  ShipmentId                                            Int
  SpecialHandlingCodeId                                 Int
  CreatedAt                                             DateTime             @default(now(), map: "DF__ShipmentS__Creat__700A6687")
  UpdatedAt                                             DateTime?
  CreatedById                                           Int?
  UpdatedById                                           Int?
  Users_ShipmentSpecialHandlingCodes_CreatedByIdToUsers Users?               @relation("ShipmentSpecialHandlingCodes_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentSpecialHandlingCodes_Users_CreatedById")
  Shipments                                             Shipments            @relation(fields: [ShipmentId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentSpecialHandlingCodes_Shipments")
  SpecialHandlingCodes                                  SpecialHandlingCodes @relation(fields: [SpecialHandlingCodeId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentSpecialHandlingCodes_SpecialHandlingCodes")
  Users_ShipmentSpecialHandlingCodes_UpdatedByIdToUsers Users?               @relation("ShipmentSpecialHandlingCodes_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentSpecialHandlingCodes_Users_UpdatedById")

  @@id([ShipmentId, SpecialHandlingCodeId], map: "PK_ShipmentSpecialHandlingCodes")
  @@index([CreatedAt, CreatedById, Id, SpecialHandlingCodeId, UpdatedAt, UpdatedById, ShipmentId], map: "IX_ShipmentSpecialHandlingCodes_ShipmentId")
}

model ShipmentStatusTypes {
  Id          Int         @id(map: "PK_ShipmentStatusTypes")
  Enumeration String      @db.VarChar(30)
  Name        String      @db.VarChar(50)
  IsActive    Boolean     @default(true, map: "DF_ShipmentStatusTypes_IsActive")
  SortOrder   Int?
  Shipments   Shipments[]
}

model ShipmentTransactionComments {
  Id                                                   Int       @id(map: "PK_ShipmentTransactionComments") @default(autoincrement())
  ShipmentTransactionId                                Int
  Comment                                              String    @db.VarChar(Max)
  CreatedAt                                            DateTime  @default(now(), map: "DF_EquipmentShipmentTransactionComments_CreatedAt")
  UpdatedAt                                            DateTime?
  CreatedById                                          Int?
  UpdatedById                                          Int?
  Users_ShipmentTransactionComments_CreatedByIdToUsers Users?    @relation("ShipmentTransactionComments_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentTransactionComments_Users_CreatedBy")
  Users_ShipmentTransactionComments_UpdatedByIdToUsers Users?    @relation("ShipmentTransactionComments_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentTransactionComments_Users_UpdatedBy")
}

model ShipmentTransactions {
  Id                                            Int                 @id(map: "PK_ShipmentTransactions") @default(autoincrement())
  ShipmentId                                    Int
  TransactionSetId                              Int
  UsageIndicatorId                              Int                 @default(1, map: "DF_ShipmentTransactions_UsageIndicatorId")
  TransactionPurposeId                          Int                 @default(1, map: "DF_ShipmentTransactions_TransactionPurposeId")
  LeadEquipment                                 String?             @db.VarChar(10)
  ReferenceNumber                               String?             @db.VarChar(30)
  ReferenceDate                                 DateTime?           @db.DateTime
  Scac                                          String?             @db.VarChar(4)
  SenderId                                      String              @db.VarChar(15)
  ReceiverId                                    String              @db.VarChar(15)
  FileName                                      String?             @db.VarChar(200)
  TransactionText                               String?             @db.VarChar(Max)
  ErrorText                                     String?             @db.VarChar(Max)
  IsErrorHandled                                Boolean             @default(false, map: "DF_ShipmentTransactions_IsErrorHandled")
  Exported                                      DateTime?
  Sent                                          DateTime?
  Acknowledged                                  DateTime?
  CreatedAt                                     DateTime            @default(now(), map: "DF_ShipmentTransactions_Created")
  UpdatedAt                                     DateTime?
  CreatedById                                   Int
  UpdatedById                                   Int?
  Users_ShipmentTransactions_CreatedByIdToUsers Users               @relation("ShipmentTransactions_CreatedByIdToUsers", fields: [CreatedById], references: [Id], onUpdate: NoAction, map: "FK_ShipmentTransactions_Users_CreatedById")
  Shipments                                     Shipments           @relation(fields: [ShipmentId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentTransactions_Shipments")
  TransactionPurposes                           TransactionPurposes @relation(fields: [TransactionPurposeId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentTransactions_TransactionPurposes")
  TransactionSets                               TransactionSets     @relation(fields: [TransactionSetId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentTransactions_TransactionSets")
  Users_ShipmentTransactions_UpdatedByIdToUsers Users?              @relation("ShipmentTransactions_UpdatedByIdToUsers", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentTransactions_Users_UpdatedById")
  UsageIndicators                               UsageIndicators     @relation(fields: [UsageIndicatorId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentTransactions_UsageIndicators")

  @@index([FileName, Id, LeadEquipment, ReceiverId, ReferenceDate, ReferenceNumber, Scac, SenderId, Sent, TransactionPurposeId, TransactionSetId, ShipmentId, CreatedAt], map: "IX_ShipmentTransactions_ShipmentId_CreatedAt")
  @@index([Exported, Id, Sent, TransactionPurposeId, UsageIndicatorId, ShipmentId, TransactionSetId], map: "IX_ShipmentTransactions_ShipmentId_TransactionSetId")
  @@index([Exported, ShipmentId, TransactionSetId, CreatedAt], map: "IX_ShipmentTransactions_TransactionSetId_CreatedAt")
}

model ShipmentTypes {
  Id          Int         @id(map: "PK_ShipmentTypes") @default(autoincrement())
  Enumeration String      @db.VarChar(30)
  Name        String      @db.VarChar(50)
  IsActive    Boolean     @default(true, map: "DF_ShipmentTypes_IsActive")
  SortOrder   Int?
  Patterns    Patterns[]
  Shipments   Shipments[]
}

model ShippingInformationQualifiers {
  Id                                  Int                                   @id(map: "PK_ShippingInformationQualifiers") @default(autoincrement())
  Code                                String                                @db.Char(3)
  Enumeration                         String                                @db.VarChar(30)
  Name                                String                                @db.VarChar(150)
  RequiredText                        String?                               @db.VarChar(250)
  ParenthesesRequired                 Boolean                               @default(false, map: "DF_ShippingInformationQualifiers_ParenthesesRequired")
  IsActive                            Boolean                               @default(true, map: "DF_ShippingInformationQualifiers_IsActive")
  SortOrder                           Int?
  CommodityHazardousMaterialFreeForms CommodityHazardousMaterialFreeForms[]
  ShipmentHazardousMaterialFreeForms  ShipmentHazardousMaterialFreeForms[]
  WaybillHazardousMaterialFreeForms   WaybillHazardousMaterialFreeForms[]
}

model ShippingNameQualifiers {
  Id                                      Int                                       @id(map: "PK_ShippingNameQualifiers") @default(autoincrement())
  Code                                    String                                    @db.Char(1)
  Enumeration                             String                                    @db.VarChar(30)
  Name                                    String                                    @db.VarChar(50)
  SortOrder                               Int?
  CommodityHazardousMaterialShippingNames CommodityHazardousMaterialShippingNames[]
  ShipmentHazardousMaterialShippingNames  ShipmentHazardousMaterialShippingNames[]
  WaybillHazardousMaterialShippingNames   WaybillHazardousMaterialShippingNames[]
}

model SightingEvents {
  Id           Int     @id(map: "PK_SightingEvents") @default(autoincrement())
  Code         String  @unique(map: "IX_SightingEvents_Code") @db.Char(1)
  Enumeration  String  @db.VarChar(30)
  Name         String  @db.VarChar(50)
  Description  String? @db.VarChar(Max)
  IsActive     Boolean @default(true, map: "DF_SightingEventCodes_IsActive")
  SortOrder    Int?
  IsAtJunction Boolean @default(false, map: "DF_SightingEvents_IsAtJunction")
}

model SightingStatusTypes {
  Id          Int     @id(map: "PK_SightingStatus") @default(autoincrement())
  Enumeration String  @db.VarChar(30)
  Name        String  @db.VarChar(50)
  IsActive    Boolean @default(true, map: "DF_SightingStatus_IsActive")
  SortOrder   Int?
}

model SpecialChargeTypes {
  Id                        Int                         @id(map: "PK_SpecialChargeTypes") @default(autoincrement())
  Code                      String                      @unique(map: "CK_SpecialChargeTypes_Code") @db.Char(3)
  Enumeration               String                      @db.VarChar(30)
  Name                      String                      @db.VarChar(50)
  ShortName                 String                      @db.VarChar(30)
  IsActive                  Boolean                     @default(true, map: "DF_SpecialChargeTypes_IsActive")
  UsedInRates               Boolean                     @default(false, map: "DF_SpecialChargeTypes_UsedInRates")
  UsedInBills               Boolean                     @default(true, map: "DF_SpecialChargeTypes_UsedInBills")
  SortOrder                 Int?
  RateDetails               RateDetails[]
  RateTemplateDetails       RateTemplateDetails[]
  ShipmentEquipmentAccruals ShipmentEquipmentAccruals[]
}

model SpecialHandlingCodes {
  Id                           Int                            @id(map: "PK_SpecialHandlingCodes") @default(autoincrement())
  Code                         String                         @db.VarChar(3)
  Enumeration                  String                         @db.VarChar(30)
  Name                         String                         @db.VarChar(150)
  IsActive                     Boolean                        @default(true, map: "DF_SpecialHandlingCodes_IsActive")
  SortOrder                    Int?
  PatternSpecialHandlingCodes  PatternSpecialHandlingCodes[]
  ShipmentSpecialHandlingCodes ShipmentSpecialHandlingCodes[]
  WaybillSpecialHandlingCodes  WaybillSpecialHandlingCodes[]

  @@unique([Id, Code], map: "IX_SpecialHandlingCodes_Code")
}

model StandardTransportationCommodityCodes {
  Id                       Int           @id(map: "PK_STCCs") @default(autoincrement())
  Code                     String        @unique(map: "IX_CommodityCodes_Code") @db.VarChar(7)
  GroupCode                String?       @db.VarChar(7)
  CommodityMajorGroupId    Int?
  CommoditySubMajorGroupId Int?
  CommodityMinorGroupId    Int?
  Name                     String        @db.VarChar(255)
  Description              String        @db.VarChar(255)
  IsActive                 Boolean       @default(true, map: "DF_STCCs_IsActive")
  Commodities              Commodities[]
}

model StateProvinces {
  Id          Int       @id(map: "PK_StateProvinces") @default(autoincrement())
  CountryId   Int
  Code        String    @unique(map: "IX_StateProvinces_Code") @db.VarChar(2)
  Enumeration String    @db.VarChar(30)
  Name        String    @db.VarChar(50)
  Countries   Countries @relation(fields: [CountryId], references: [Id], onUpdate: NoAction, map: "FK_StateProvinces_Countries")
}

model StationCarriers {
  Id              Int      @id(map: "PK_StationCarriers") @default(autoincrement())
  StationId       Int
  CarrierId       Int
  OperatingPlate  String?  @db.Char(1)
  OperatingWeight Int?
  Carriers        Carriers @relation(fields: [CarrierId], references: [Id], onUpdate: NoAction, map: "FK_StationCarriers_Carriers")
  Stations        Stations @relation(fields: [StationId], references: [Id], onUpdate: NoAction, map: "FK_StationCarriers_Stations")

  @@index([OperatingPlate, OperatingWeight, StationId, CarrierId], map: "IX_StationCarriers_CarrierId")
  @@index([CarrierId, OperatingPlate, OperatingWeight, StationId], map: "IX_StationCarriers_StationId")
}

model Stations {
  Id                Int               @id(map: "PK_Stations") @default(autoincrement())
  Splc              String            @db.VarChar(9)
  Name              String            @db.VarChar(19)
  City              String            @db.VarChar(30)
  State             String            @db.Char(2)
  Country           String            @db.Char(2)
  TimeZoneId        Int
  IsDaylightSavings Boolean
  StationCarriers   StationCarriers[]

  @@index([Name], map: "IX_Stations_Name")
  @@index([State], map: "IX_Stations_State")
}

model SwitchingStatusTypes {
  Id          Int     @id(map: "PK_StationTypes")
  Enumeration String  @db.VarChar(30)
  Name        String  @db.VarChar(50)
  IsActive    Boolean @default(true, map: "DF_StationTypes_IsActive")
  SortOrder   Int?

  @@unique([Id, Enumeration], map: "IX_SwitchingStatusTypes_Enumeration")
}

model sysdiagrams {
  name         String @db.NVarChar(128)
  principal_id Int
  diagram_id   Int    @id(map: "PK__sysdiagr__C2B05B61690ACD30") @default(autoincrement())
  version      Int?
  definition   Bytes?

  @@unique([principal_id, name], map: "UK_principal_name")
}

model TimeZones {
  Id              Int               @id(map: "PK_TimeZones") @default(autoincrement())
  Code            String            @db.Char(2)
  Enumeration     String            @db.VarChar(30)
  Name            String            @db.VarChar(50)
  Offset          Int?
  IsActive        Boolean           @default(true, map: "DF_TimeZones_IsActive")
  SortOrder       Int?
  FreightInvoices FreightInvoices[]
  Patterns        Patterns[]
  ReportSchedules ReportSchedules[]
  Shipments       Shipments[]
  Waybills        Waybills[]

  @@unique([Id, Code], map: "IX_TimeZones_Code")
  @@unique([Id, Enumeration], map: "IX_TimeZones_Enumeration")
}

model TransactionPurposes {
  Id                   Int                    @id(map: "PK_TransactionPurposes")
  Enumeration          String?                @db.VarChar(30)
  Name                 String                 @db.VarChar(50)
  IsActive             Boolean                @default(true, map: "DF_TransactionSetPurposes_IsActive")
  SortOrder            Int?
  FreightInvoices      FreightInvoices[]
  ShipmentTransactions ShipmentTransactions[]
}

model TransactionSets {
  Id                     Int                      @id(map: "PK_TransactionSets")
  Code                   String                   @db.Char(3)
  Enumeration            String                   @db.VarChar(30)
  Name                   String                   @db.VarChar(50)
  Description            String?                  @db.VarChar(50)
  IsActive               Boolean
  SortOrder              Int?
  CarrierTransactionSets CarrierTransactionSets[]
  ShipmentTransactions   ShipmentTransactions[]
  WaybillTransactions    WaybillTransactions[]
}

model UnitCodes {
  Id                          Int                           @id(map: "PK_UnitCodes") @default(autoincrement())
  Code                        String                        @db.VarChar(30)
  Name                        String                        @db.VarChar(50)
  IsActive                    Boolean
  SortOrder                   Int?
  CommodityHazardousMaterials CommodityHazardousMaterials[]
  ShipmentHazardousMaterials  ShipmentHazardousMaterials[]
}

model UnitedNationsStandardProductServiceCodes {
  Id          Int           @id(map: "PK_UnitedNationsStandardProductServiceCodes") @default(autoincrement())
  Code        String        @unique @db.VarChar(30)
  Name        String        @db.VarChar(200)
  Commodities Commodities[]

  @@unique([Name, Code], map: "IX_UnitedNationsStandardProductServiceCodes_Code")
}

model UsageIndicators {
  Id                     Int                      @id(map: "PK_UsageIndicators")
  Code                   String                   @db.Char(1)
  Enumeration            String                   @db.VarChar(30)
  Name                   String                   @db.VarChar(50)
  IsActive               Boolean
  SortOrder              Int?
  Carriers               Carriers[]
  CarrierTransactionSets CarrierTransactionSets[]
  ShipmentTransactions   ShipmentTransactions[]

  @@unique([Id, Code], map: "CK_UsageIndicators_Code")
  @@unique([Id, Enumeration], map: "IX_UsageIndicators_Enumeration")
}

model UserClientRoles {
  Id           Int         @id(map: "PK_UserClientRoles") @default(autoincrement())
  UserClientId Int
  RoleId       Int
  Roles        Roles       @relation(fields: [RoleId], references: [Id], onUpdate: NoAction, map: "FK_UserClientRoles_Roles")
  UserClients  UserClients @relation(fields: [UserClientId], references: [Id], onUpdate: NoAction, map: "FK_UserClientRoles_UserClients")

  @@index([Id, RoleId, UserClientId], map: "IX_UserClientRoles_UserClientId")
}

model UserClients {
  Id              Int               @id(map: "PK_UserClients") @default(autoincrement())
  UserId          Int
  ClientId        Int
  Clients         Clients           @relation(fields: [ClientId], references: [Id], onUpdate: NoAction, map: "FK_UserClients_Clients")
  Users           Users             @relation(fields: [UserId], references: [Id], onUpdate: NoAction, map: "FK_UserClients_Users")
  UserClientRoles UserClientRoles[]

  @@unique([UserId, ClientId], map: "IX_UserClients_UserId_ClientId")
}

model UserRoles {
  Id       Int   @id(map: "PK_UserRoles") @default(autoincrement())
  UserId   Int
  RoleId   Int
  ClientID Int
  Roles    Roles @relation(fields: [RoleId], references: [Id], onUpdate: NoAction, map: "FK_UserRoles_Roles")
  Users    Users @relation(fields: [UserId], references: [Id], onUpdate: NoAction, map: "FK_UserRoles_Users")

  @@unique([UserId, RoleId, ClientID], map: "IX_UserRoles_UserId_RoleId_clientId")
}

model Users {
  Id                                                                                             Int                                     @id(map: "PK_Users") @default(autoincrement())
  AuthId                                                                                         String?                                 @db.VarChar(36)
  Name                                                                                           String                                  @db.VarChar(101)
  FirstName                                                                                      String                                  @db.VarChar(50)
  LastName                                                                                       String                                  @db.VarChar(50)
  Email                                                                                          String?                                 @db.VarChar(100)
  LastClientId                                                                                   Int?
  CreatedAt                                                                                      DateTime                                @default(now(), map: "DF__Users__CreatedAt__77AB884F")
  UpdatedAt                                                                                      DateTime?
  CreatedById                                                                                    Int?
  UpdatedById                                                                                    Int?
  IsActive                                                                                       Boolean                                 @default(true, map: "DF__Users__isActive")
  Users_UsersToUsers_CreatedById                                                                 Users?                                  @relation("UsersToUsers_CreatedById", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Users_Users_CreatedById")
  Users_UsersToUsers_UpdatedById                                                                 Users?                                  @relation("UsersToUsers_UpdatedById", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Users_Users_UpdatedById")
  AccountCodeTypes_AccountCodeTypes_CreatedByIdToUsers                                           AccountCodeTypes[]                      @relation("AccountCodeTypes_CreatedByIdToUsers")
  AccountCodeTypes_AccountCodeTypes_UpdatedByIdToUsers                                           AccountCodeTypes[]                      @relation("AccountCodeTypes_UpdatedByIdToUsers")
  CarLocationMessageSources_CarLocationMessageSources_CreatedByIdToUsers                         CarLocationMessageSources[]             @relation("CarLocationMessageSources_CreatedByIdToUsers")
  CarLocationMessageSources_CarLocationMessageSources_UpdatedByIdToUsers                         CarLocationMessageSources[]             @relation("CarLocationMessageSources_UpdatedByIdToUsers")
  Carriers_Carriers_CreatedByIdToUsers                                                           Carriers[]                              @relation("Carriers_CreatedByIdToUsers")
  Carriers_Carriers_UpdatedByIdToUsers                                                           Carriers[]                              @relation("Carriers_UpdatedByIdToUsers")
  ClientAliases_ClientAliases_CreatedByIdToUsers                                                 ClientAliases[]                         @relation("ClientAliases_CreatedByIdToUsers")
  ClientAliases_ClientAliases_UpdatedByIdToUsers                                                 ClientAliases[]                         @relation("ClientAliases_UpdatedByIdToUsers")
  ClientRepresentatives                                                                          ClientRepresentatives[]
  Clients_Clients_CreatedByIdToUsers                                                             Clients[]                               @relation("Clients_CreatedByIdToUsers")
  Clients_Clients_UpdatedByIdToUsers                                                             Clients[]                               @relation("Clients_UpdatedByIdToUsers")
  Commodities_Commodities_CreatedByIdToUsers                                                     Commodities[]                           @relation("Commodities_CreatedByIdToUsers")
  Commodities_Commodities_UpdatedByIdToUsers                                                     Commodities[]                           @relation("Commodities_UpdatedByIdToUsers")
  CommodityGroups_CommodityGroups_CreatedByIdToUsers                                             CommodityGroups[]                       @relation("CommodityGroups_CreatedByIdToUsers")
  CommodityGroups_CommodityGroups_UpdatedByIdToUsers                                             CommodityGroups[]                       @relation("CommodityGroups_UpdatedByIdToUsers")
  CommonYardDelays_CommonYardDelays_CreatedByIdToUsers                                           CommonYardDelays[]                      @relation("CommonYardDelays_CreatedByIdToUsers")
  CommonYardDelays_CommonYardDelays_UpdatedByIdToUsers                                           CommonYardDelays[]                      @relation("CommonYardDelays_UpdatedByIdToUsers")
  ContactContactTypes_ContactContactTypes_CreatedByIdToUsers                                     ContactContactTypes[]                   @relation("ContactContactTypes_CreatedByIdToUsers")
  ContactContactTypes_ContactContactTypes_UpdatedByIdToUsers                                     ContactContactTypes[]                   @relation("ContactContactTypes_UpdatedByIdToUsers")
  Contacts_Contacts_CreatedByIdToUsers                                                           Contacts[]                              @relation("Contacts_CreatedByIdToUsers")
  Contacts_Contacts_UpdatedByIdToUsers                                                           Contacts[]                              @relation("Contacts_UpdatedByIdToUsers")
  CustomerStationOpenCarriers_CustomerStationOpenCarriers_CreatedByIdToUsers                     CustomerStationOpenCarriers[]           @relation("CustomerStationOpenCarriers_CreatedByIdToUsers")
  CustomerStationOpenCarriers_CustomerStationOpenCarriers_UpdatedByIdToUsers                     CustomerStationOpenCarriers[]           @relation("CustomerStationOpenCarriers_UpdatedByIdToUsers")
  CustomerStations_CustomerStations_CreatedByIdToUsers                                           CustomerStations[]                      @relation("CustomerStations_CreatedByIdToUsers")
  CustomerStations_CustomerStations_UpdatedByIdToUsers                                           CustomerStations[]                      @relation("CustomerStations_UpdatedByIdToUsers")
  CustomReferenceTypeOptions_CustomReferenceTypeOptions_CreatedByIdToUsers                       CustomReferenceTypeOptions[]            @relation("CustomReferenceTypeOptions_CreatedByIdToUsers")
  CustomReferenceTypeOptions_CustomReferenceTypeOptions_UpdatedByIdToUsers                       CustomReferenceTypeOptions[]            @relation("CustomReferenceTypeOptions_UpdatedByIdToUsers")
  CustomReferenceTypes_CustomReferenceTypes_CreatedByIdToUsers                                   CustomReferenceTypes[]                  @relation("CustomReferenceTypes_CreatedByIdToUsers")
  CustomReferenceTypes_CustomReferenceTypes_UpdatedByIdToUsers                                   CustomReferenceTypes[]                  @relation("CustomReferenceTypes_UpdatedByIdToUsers")
  DiversionComments                                                                              DiversionComments[]
  DiversionExtendedReferences_DiversionExtendedReferences_CreatedByIdToUsers                     DiversionExtendedReferences[]           @relation("DiversionExtendedReferences_CreatedByIdToUsers")
  DiversionExtendedReferences_DiversionExtendedReferences_UpdatedByIdToUsers                     DiversionExtendedReferences[]           @relation("DiversionExtendedReferences_UpdatedByIdToUsers")
  DiversionParties_DiversionParties_CreatedByIdToUsers                                           DiversionParties[]                      @relation("DiversionParties_CreatedByIdToUsers")
  DiversionParties_DiversionParties_UpdatedByIdToUsers                                           DiversionParties[]                      @relation("DiversionParties_UpdatedByIdToUsers")
  DiversionRouteSegments_DiversionRouteSegments_CreatedByIdToUsers                               DiversionRouteSegments[]                @relation("DiversionRouteSegments_CreatedByIdToUsers")
  DiversionRouteSegments_DiversionRouteSegments_UpdatedByIdToUsers                               DiversionRouteSegments[]                @relation("DiversionRouteSegments_UpdatedByIdToUsers")
  Diversions_Diversions_CreatedByIdToUsers                                                       Diversions[]                            @relation("Diversions_CreatedByIdToUsers")
  Diversions_Diversions_UpdatedByIdToUsers                                                       Diversions[]                            @relation("Diversions_UpdatedByIdToUsers")
  Files_Files_CreatedByIdToUsers                                                                 Files[]                                 @relation("Files_CreatedByIdToUsers")
  Files_Files_UpdatedByIdToUsers                                                                 Files[]                                 @relation("Files_UpdatedByIdToUsers")
  Fleets_Fleets_CreatedByIdToUsers                                                               Fleets[]                                @relation("Fleets_CreatedByIdToUsers")
  Fleets_Fleets_UpdatedByIdToUsers                                                               Fleets[]                                @relation("Fleets_UpdatedByIdToUsers")
  FreightInvoices_FreightInvoices_CreatedByIdToUsers                                             FreightInvoices[]                       @relation("FreightInvoices_CreatedByIdToUsers")
  FreightInvoices_FreightInvoices_UpdatedByIdToUsers                                             FreightInvoices[]                       @relation("FreightInvoices_UpdatedByIdToUsers")
  FuelSurcharges_FuelSurcharges_CreatedByIdToUsers                                               FuelSurcharges[]                        @relation("FuelSurcharges_CreatedByIdToUsers")
  FuelSurcharges_FuelSurcharges_UpdatedByIdToUsers                                               FuelSurcharges[]                        @relation("FuelSurcharges_UpdatedByIdToUsers")
  Invoices_Invoices_CreatedByIdToUsers                                                           Invoices[]                              @relation("Invoices_CreatedByIdToUsers")
  Invoices_Invoices_UpdatedByIdToUsers                                                           Invoices[]                              @relation("Invoices_UpdatedByIdToUsers")
  Locations_Locations_CreatedByIdToUsers                                                         Locations[]                             @relation("Locations_CreatedByIdToUsers")
  Locations_Locations_UpdatedByIdToUsers                                                         Locations[]                             @relation("Locations_UpdatedByIdToUsers")
  NotificationContacts_NotificationContacts_CreatedByIdToUsers                                   NotificationContacts[]                  @relation("NotificationContacts_CreatedByIdToUsers")
  NotificationContacts_NotificationContacts_UpdatedByIdToUsers                                   NotificationContacts[]                  @relation("NotificationContacts_UpdatedByIdToUsers")
  NotificationFtpLocations_NotificationFtpLocations_CreatedByIdToUsers                           NotificationFtpLocations[]              @relation("NotificationFtpLocations_CreatedByIdToUsers")
  NotificationFtpLocations_NotificationFtpLocations_UpdatedByIdToUsers                           NotificationFtpLocations[]              @relation("NotificationFtpLocations_UpdatedByIdToUsers")
  NotificationGroupNotificationContacts_NotificationGroupNotificationContacts_CreatedByIdToUsers NotificationGroupNotificationContacts[] @relation("NotificationGroupNotificationContacts_CreatedByIdToUsers")
  NotificationGroupNotificationContacts_NotificationGroupNotificationContacts_UpdatedByIdToUsers NotificationGroupNotificationContacts[] @relation("NotificationGroupNotificationContacts_UpdatedByIdToUsers")
  NotificationGroups_NotificationGroups_CreatedByIdToUsers                                       NotificationGroups[]                    @relation("NotificationGroups_CreatedByIdToUsers")
  NotificationGroups_NotificationGroups_UpdatedByIdToUsers                                       NotificationGroups[]                    @relation("NotificationGroups_UpdatedByIdToUsers")
  Parties_Parties_CreatedByIdToUsers                                                             Parties[]                               @relation("Parties_CreatedByIdToUsers")
  Parties_Parties_UpdatedByIdToUsers                                                             Parties[]                               @relation("Parties_UpdatedByIdToUsers")
  PartyAliases_PartyAliases_CreatedByIdToUsers                                                   PartyAliases[]                          @relation("PartyAliases_CreatedByIdToUsers")
  PartyAliases_PartyAliases_UpdatedByIdToUsers                                                   PartyAliases[]                          @relation("PartyAliases_UpdatedByIdToUsers")
  PartyContacts_PartyContacts_CreatedByIdToUsers                                                 PartyContacts[]                         @relation("PartyContacts_CreatedByIdToUsers")
  PartyContacts_PartyContacts_UpdatedByIdToUsers                                                 PartyContacts[]                         @relation("PartyContacts_UpdatedByIdToUsers")
  PartyNotifications_PartyNotifications_CreatedByIdToUsers                                       PartyNotifications[]                    @relation("PartyNotifications_CreatedByIdToUsers")
  PartyNotifications_PartyNotifications_UpdatedByIdToUsers                                       PartyNotifications[]                    @relation("PartyNotifications_UpdatedByIdToUsers")
  PartyPartyTypes_PartyPartyTypes_CreatedByIdToUsers                                             PartyPartyTypes[]                       @relation("PartyPartyTypes_CreatedByIdToUsers")
  PartyPartyTypes_PartyPartyTypes_UpdatedByIdToUsers                                             PartyPartyTypes[]                       @relation("PartyPartyTypes_UpdatedByIdToUsers")
  PartyRailRoadDetails_PartyRailRoadDetails_CreatedByIdToUsers                                   PartyRailRoadDetails[]                  @relation("PartyRailRoadDetails_CreatedByIdToUsers")
  PartyRailRoadDetails_PartyRailRoadDetails_UpdatedByIdToUsers                                   PartyRailRoadDetails[]                  @relation("PartyRailRoadDetails_UpdatedByIdToUsers")
  PartyTypeGroupPartyTypes_PartyTypeGroupPartyTypes_CreatedByIdToUsers                           PartyTypeGroupPartyTypes[]              @relation("PartyTypeGroupPartyTypes_CreatedByIdToUsers")
  PartyTypeGroupPartyTypes_PartyTypeGroupPartyTypes_UpdatedByIdToUsers                           PartyTypeGroupPartyTypes[]              @relation("PartyTypeGroupPartyTypes_UpdatedByIdToUsers")
  PatternAccountCodes_PatternAccountCodes_CreatedByIdToUsers                                     PatternAccountCodes[]                   @relation("PatternAccountCodes_CreatedByIdToUsers")
  PatternAccountCodes_PatternAccountCodes_UpdatedByIdToUsers                                     PatternAccountCodes[]                   @relation("PatternAccountCodes_UpdatedByIdToUsers")
  PatternCommodities_PatternCommodities_CreatedByIdToUsers                                       PatternCommodities[]                    @relation("PatternCommodities_CreatedByIdToUsers")
  PatternCommodities_PatternCommodities_UpdatedByIdToUsers                                       PatternCommodities[]                    @relation("PatternCommodities_UpdatedByIdToUsers")
  PatternContacts_PatternContacts_CreatedByIdToUsers                                             PatternContacts[]                       @relation("PatternContacts_CreatedByIdToUsers")
  PatternContacts_PatternContacts_UpdatedByIdToUsers                                             PatternContacts[]                       @relation("PatternContacts_UpdatedByIdToUsers")
  PatternCustomReferences_PatternCustomReferences_CreatedByIdToUsers                             PatternCustomReferences[]               @relation("PatternCustomReferences_CreatedByIdToUsers")
  PatternCustomReferences_PatternCustomReferences_UpdatedByIdToUsers                             PatternCustomReferences[]               @relation("PatternCustomReferences_UpdatedByIdToUsers")
  PatternEmptyDispositionParties_PatternEmptyDispositionParties_CreatedByIdToUsers               PatternEmptyDispositionParties[]        @relation("PatternEmptyDispositionParties_CreatedByIdToUsers")
  PatternEmptyDispositionParties_PatternEmptyDispositionParties_UpdatedByIdToUsers               PatternEmptyDispositionParties[]        @relation("PatternEmptyDispositionParties_UpdatedByIdToUsers")
  PatternEmptyDispositionRouteSegments_PatternEmptyDispositionRouteSegments_CreatedByIdToUsers   PatternEmptyDispositionRouteSegments[]  @relation("PatternEmptyDispositionRouteSegments_CreatedByIdToUsers")
  PatternEmptyDispositionRouteSegments_PatternEmptyDispositionRouteSegments_UpdatedByIdToUsers   PatternEmptyDispositionRouteSegments[]  @relation("PatternEmptyDispositionRouteSegments_UpdatedByIdToUsers")
  PatternExtendedReferences_PatternExtendedReferences_CreatedByIdToUsers                         PatternExtendedReferences[]             @relation("PatternExtendedReferences_CreatedByIdToUsers")
  PatternExtendedReferences_PatternExtendedReferences_UpdatedByIdToUsers                         PatternExtendedReferences[]             @relation("PatternExtendedReferences_UpdatedByIdToUsers")
  PatternNotifications_PatternNotifications_CreatedByIdToUsers                                   PatternNotifications[]                  @relation("PatternNotifications_CreatedByIdToUsers")
  PatternNotifications_PatternNotifications_UpdatedByIdToUsers                                   PatternNotifications[]                  @relation("PatternNotifications_UpdatedByIdToUsers")
  PatternParties_PatternParties_CreatedByIdToUsers                                               PatternParties[]                        @relation("PatternParties_CreatedByIdToUsers")
  PatternParties_PatternParties_UpdatedByIdToUsers                                               PatternParties[]                        @relation("PatternParties_UpdatedByIdToUsers")
  PatternPartyBillingSegments_PatternPartyBillingSegments_CreatedByIdToUsers                     PatternPartyBillingSegments[]           @relation("PatternPartyBillingSegments_CreatedByIdToUsers")
  PatternPartyBillingSegments_PatternPartyBillingSegments_UpdatedByIdToUsers                     PatternPartyBillingSegments[]           @relation("PatternPartyBillingSegments_UpdatedByIdToUsers")
  PatternPriceAuthorities_PatternPriceAuthorities_CreatedByIdToUsers                             PatternPriceAuthorities[]               @relation("PatternPriceAuthorities_CreatedByIdToUsers")
  PatternPriceAuthorities_PatternPriceAuthorities_UpdatedByIdToUsers                             PatternPriceAuthorities[]               @relation("PatternPriceAuthorities_UpdatedByIdToUsers")
  PatternRates_PatternRates_CreatedByIdToUsers                                                   PatternRates[]                          @relation("PatternRates_CreatedByIdToUsers")
  PatternRates_PatternRates_UpdatedByIdToUsers                                                   PatternRates[]                          @relation("PatternRates_UpdatedByIdToUsers")
  PatternRouteSegments_PatternRouteSegments_CreatedByIdToUsers                                   PatternRouteSegments[]                  @relation("PatternRouteSegments_CreatedByIdToUsers")
  PatternRouteSegments_PatternRouteSegments_UpdatedByIdToUsers                                   PatternRouteSegments[]                  @relation("PatternRouteSegments_UpdatedByIdToUsers")
  Patterns_Patterns_CreatedByIdToUsers                                                           Patterns[]                              @relation("Patterns_CreatedByIdToUsers")
  Patterns_Patterns_UpdatedByIdToUsers                                                           Patterns[]                              @relation("Patterns_UpdatedByIdToUsers")
  PatternSpecialHandlingCodes_PatternSpecialHandlingCodes_CreatedByIdToUsers                     PatternSpecialHandlingCodes[]           @relation("PatternSpecialHandlingCodes_CreatedByIdToUsers")
  PatternSpecialHandlingCodes_PatternSpecialHandlingCodes_UpdatedByIdToUsers                     PatternSpecialHandlingCodes[]           @relation("PatternSpecialHandlingCodes_UpdatedByIdToUsers")
  RateCommodities_RateCommodities_CreatedByIdToUsers                                             RateCommodities[]                       @relation("RateCommodities_CreatedByIdToUsers")
  RateCommodities_RateCommodities_UpdatedByIdToUsers                                             RateCommodities[]                       @relation("RateCommodities_UpdatedByIdToUsers")
  RateContractComments_RateContractComments_CreatedByIdToUsers                                   RateContractComments[]                  @relation("RateContractComments_CreatedByIdToUsers")
  RateContractComments_RateContractComments_UpdatedByIdToUsers                                   RateContractComments[]                  @relation("RateContractComments_UpdatedByIdToUsers")
  RateContractComments_RateContractComments_UserIdToUsers                                        RateContractComments[]                  @relation("RateContractComments_UserIdToUsers")
  RateContracts_RateContracts_CreatedByIdToUsers                                                 RateContracts[]                         @relation("RateContracts_CreatedByIdToUsers")
  RateContracts_RateContracts_UpdatedByIdToUsers                                                 RateContracts[]                         @relation("RateContracts_UpdatedByIdToUsers")
  RateDetailComments_RateDetailComments_CreatedByIdToUsers                                       RateDetailComments[]                    @relation("RateDetailComments_CreatedByIdToUsers")
  RateDetailComments_RateDetailComments_UpdatedByIdToUsers                                       RateDetailComments[]                    @relation("RateDetailComments_UpdatedByIdToUsers")
  RateDetailComments_RateDetailComments_UserIdToUsers                                            RateDetailComments[]                    @relation("RateDetailComments_UserIdToUsers")
  RateDetails_RateDetails_CreatedByIdToUsers                                                     RateDetails[]                           @relation("RateDetails_CreatedByIdToUsers")
  RateDetails_RateDetails_UpdatedByIdToUsers                                                     RateDetails[]                           @relation("RateDetails_UpdatedByIdToUsers")
  RateRequestAdditionalComments                                                                  RateRequestAdditionalComments[]
  RateRequestComments                                                                            RateRequestComments[]
  RateRouteSegments_RateRouteSegments_CreatedByIdToUsers                                         RateRouteSegments[]                     @relation("RateRouteSegments_CreatedByIdToUsers")
  RateRouteSegments_RateRouteSegments_UpdatedByIdToUsers                                         RateRouteSegments[]                     @relation("RateRouteSegments_UpdatedByIdToUsers")
  Rates_Rates_CreatedByIdToUsers                                                                 Rates[]                                 @relation("Rates_CreatedByIdToUsers")
  Rates_Rates_UpdatedByIdToUsers                                                                 Rates[]                                 @relation("Rates_UpdatedByIdToUsers")
  RateTemplateDetails_RateTemplateDetails_CreatedByIdToUsers                                     RateTemplateDetails[]                   @relation("RateTemplateDetails_CreatedByIdToUsers")
  RateTemplateDetails_RateTemplateDetails_UpdatedByIdToUsers                                     RateTemplateDetails[]                   @relation("RateTemplateDetails_UpdatedByIdToUsers")
  RateTemplates_RateTemplates_CreatedByIdToUsers                                                 RateTemplates[]                         @relation("RateTemplates_CreatedByIdToUsers")
  RateTemplates_RateTemplates_UpdatedByIdToUsers                                                 RateTemplates[]                         @relation("RateTemplates_UpdatedByIdToUsers")
  Reports_Reports_CreatedByIdToUsers                                                             Reports[]                               @relation("Reports_CreatedByIdToUsers")
  Reports_Reports_UpdatedByIdToUsers                                                             Reports[]                               @relation("Reports_UpdatedByIdToUsers")
  ReportScheduleNotifications_ReportScheduleNotifications_CreatedByIdToUsers                     ReportScheduleNotifications[]           @relation("ReportScheduleNotifications_CreatedByIdToUsers")
  ReportScheduleNotifications_ReportScheduleNotifications_UpdatedByIdToUsers                     ReportScheduleNotifications[]           @relation("ReportScheduleNotifications_UpdatedByIdToUsers")
  ServiceLogComments_ServiceLogComments_CreatedByIdToUsers                                       ServiceLogComments[]                    @relation("ServiceLogComments_CreatedByIdToUsers")
  ServiceLogComments_ServiceLogComments_UpdatedByIdToUsers                                       ServiceLogComments[]                    @relation("ServiceLogComments_UpdatedByIdToUsers")
  ServiceLogs_ServiceLogs_CreatedByIdToUsers                                                     ServiceLogs[]                           @relation("ServiceLogs_CreatedByIdToUsers")
  ServiceLogs_ServiceLogs_UpdatedByIdToUsers                                                     ServiceLogs[]                           @relation("ServiceLogs_UpdatedByIdToUsers")
  ShipmentAccountCodes_ShipmentAccountCodes_CreatedByIdToUsers                                   ShipmentAccountCodes[]                  @relation("ShipmentAccountCodes_CreatedByIdToUsers")
  ShipmentAccountCodes_ShipmentAccountCodes_UpdatedByIdToUsers                                   ShipmentAccountCodes[]                  @relation("ShipmentAccountCodes_UpdatedByIdToUsers")
  ShipmentCommodities_ShipmentCommodities_CreatedByIdToUsers                                     ShipmentCommodities[]                   @relation("ShipmentCommodities_CreatedByIdToUsers")
  ShipmentCommodities_ShipmentCommodities_UpdatedByIdToUsers                                     ShipmentCommodities[]                   @relation("ShipmentCommodities_UpdatedByIdToUsers")
  ShipmentContacts_ShipmentContacts_CreatedByIdToUsers                                           ShipmentContacts[]                      @relation("ShipmentContacts_CreatedByIdToUsers")
  ShipmentContacts_ShipmentContacts_UpdatedByIdToUsers                                           ShipmentContacts[]                      @relation("ShipmentContacts_UpdatedByIdToUsers")
  ShipmentCustomReferences_ShipmentCustomReferences_CreatedByIdToUsers                           ShipmentCustomReferences[]              @relation("ShipmentCustomReferences_CreatedByIdToUsers")
  ShipmentCustomReferences_ShipmentCustomReferences_UpdatedByIdToUsers                           ShipmentCustomReferences[]              @relation("ShipmentCustomReferences_UpdatedByIdToUsers")
  ShipmentEmptyDispositionParties_ShipmentEmptyDispositionParties_CreatedByIdToUsers             ShipmentEmptyDispositionParties[]       @relation("ShipmentEmptyDispositionParties_CreatedByIdToUsers")
  ShipmentEmptyDispositionParties_ShipmentEmptyDispositionParties_UpdatedByIdToUsers             ShipmentEmptyDispositionParties[]       @relation("ShipmentEmptyDispositionParties_UpdatedByIdToUsers")
  ShipmentEmptyDispositionRouteSegments_ShipmentEmptyDispositionRouteSegments_CreatedByIdToUsers ShipmentEmptyDispositionRouteSegments[] @relation("ShipmentEmptyDispositionRouteSegments_CreatedByIdToUsers")
  ShipmentEmptyDispositionRouteSegments_ShipmentEmptyDispositionRouteSegments_UpdatedByIdToUsers ShipmentEmptyDispositionRouteSegments[] @relation("ShipmentEmptyDispositionRouteSegments_UpdatedByIdToUsers")
  ShipmentEquipmentAccruals_ShipmentEquipmentAccruals_CreatedByIdToUsers                         ShipmentEquipmentAccruals[]             @relation("ShipmentEquipmentAccruals_CreatedByIdToUsers")
  ShipmentEquipmentAccruals_ShipmentEquipmentAccruals_UpdatedByIdToUsers                         ShipmentEquipmentAccruals[]             @relation("ShipmentEquipmentAccruals_UpdatedByIdToUsers")
  ShipmentEquipmentCarLocationMessages_ShipmentEquipmentCarLocationMessages_CreatedByIdToUsers   ShipmentEquipmentCarLocationMessages[]  @relation("ShipmentEquipmentCarLocationMessages_CreatedByIdToUsers")
  ShipmentEquipmentCarLocationMessages_ShipmentEquipmentCarLocationMessages_UpdatedByIdToUsers   ShipmentEquipmentCarLocationMessages[]  @relation("ShipmentEquipmentCarLocationMessages_UpdatedByIdToUsers")
  ShipmentEquipmentRouteSegments_ShipmentEquipmentRouteSegments_CreatedByIdToUsers               ShipmentEquipmentRouteSegments[]        @relation("ShipmentEquipmentRouteSegments_CreatedByIdToUsers")
  ShipmentEquipmentRouteSegments_ShipmentEquipmentRouteSegments_UpdatedByIdToUsers               ShipmentEquipmentRouteSegments[]        @relation("ShipmentEquipmentRouteSegments_UpdatedByIdToUsers")
  ShipmentEquipments_ShipmentEquipments_CreatedByIdToUsers                                       ShipmentEquipments[]                    @relation("ShipmentEquipments_CreatedByIdToUsers")
  ShipmentEquipments_ShipmentEquipments_UpdatedByIdToUsers                                       ShipmentEquipments[]                    @relation("ShipmentEquipments_UpdatedByIdToUsers")
  ShipmentEquipmentSeals_ShipmentEquipmentSeals_CreatedByIdToUsers                               ShipmentEquipmentSeals[]                @relation("ShipmentEquipmentSeals_CreatedByIdToUsers")
  ShipmentEquipmentSeals_ShipmentEquipmentSeals_UpdatedByIdToUsers                               ShipmentEquipmentSeals[]                @relation("ShipmentEquipmentSeals_UpdatedByIdToUsers")
  ShipmentNotifications_ShipmentNotifications_CreatedByIdToUsers                                 ShipmentNotifications[]                 @relation("ShipmentNotifications_CreatedByIdToUsers")
  ShipmentNotifications_ShipmentNotifications_UpdatedByIdToUsers                                 ShipmentNotifications[]                 @relation("ShipmentNotifications_UpdatedByIdToUsers")
  ShipmentParties_ShipmentParties_CreatedByIdToUsers                                             ShipmentParties[]                       @relation("ShipmentParties_CreatedByIdToUsers")
  ShipmentParties_ShipmentParties_UpdatedByIdToUsers                                             ShipmentParties[]                       @relation("ShipmentParties_UpdatedByIdToUsers")
  ShipmentPartyBillingSegments_ShipmentPartyBillingSegments_CreatedByIdToUsers                   ShipmentPartyBillingSegments[]          @relation("ShipmentPartyBillingSegments_CreatedByIdToUsers")
  ShipmentPartyBillingSegments_ShipmentPartyBillingSegments_UpdatedByIdToUsers                   ShipmentPartyBillingSegments[]          @relation("ShipmentPartyBillingSegments_UpdatedByIdToUsers")
  ShipmentPartyContacts_ShipmentPartyContacts_CreatedByIdToUsers                                 ShipmentPartyContacts[]                 @relation("ShipmentPartyContacts_CreatedByIdToUsers")
  ShipmentPartyContacts_ShipmentPartyContacts_UpdatedByIdToUsers                                 ShipmentPartyContacts[]                 @relation("ShipmentPartyContacts_UpdatedByIdToUsers")
  ShipmentPriceAuthorities_ShipmentPriceAuthorities_CreatedByIdToUsers                           ShipmentPriceAuthorities[]              @relation("ShipmentPriceAuthorities_CreatedByIdToUsers")
  ShipmentPriceAuthorities_ShipmentPriceAuthorities_UpdatedByIdToUsers                           ShipmentPriceAuthorities[]              @relation("ShipmentPriceAuthorities_UpdatedByIdToUsers")
  ShipmentRates_ShipmentRates_CreatedByIdToUsers                                                 ShipmentRates[]                         @relation("ShipmentRates_CreatedByIdToUsers")
  ShipmentRates_ShipmentRates_UpdatedByIdToUsers                                                 ShipmentRates[]                         @relation("ShipmentRates_UpdatedByIdToUsers")
  ShipmentRouteSegments_ShipmentRouteSegments_CreatedByIdToUsers                                 ShipmentRouteSegments[]                 @relation("ShipmentRouteSegments_CreatedByIdToUsers")
  ShipmentRouteSegments_ShipmentRouteSegments_UpdatedByIdToUsers                                 ShipmentRouteSegments[]                 @relation("ShipmentRouteSegments_UpdatedByIdToUsers")
  Shipments_Shipments_CreatedByIdToUsers                                                         Shipments[]                             @relation("Shipments_CreatedByIdToUsers")
  Shipments_Shipments_UpdatedByIdToUsers                                                         Shipments[]                             @relation("Shipments_UpdatedByIdToUsers")
  ShipmentSpecialHandlingCodes_ShipmentSpecialHandlingCodes_CreatedByIdToUsers                   ShipmentSpecialHandlingCodes[]          @relation("ShipmentSpecialHandlingCodes_CreatedByIdToUsers")
  ShipmentSpecialHandlingCodes_ShipmentSpecialHandlingCodes_UpdatedByIdToUsers                   ShipmentSpecialHandlingCodes[]          @relation("ShipmentSpecialHandlingCodes_UpdatedByIdToUsers")
  ShipmentTransactionComments_ShipmentTransactionComments_CreatedByIdToUsers                     ShipmentTransactionComments[]           @relation("ShipmentTransactionComments_CreatedByIdToUsers")
  ShipmentTransactionComments_ShipmentTransactionComments_UpdatedByIdToUsers                     ShipmentTransactionComments[]           @relation("ShipmentTransactionComments_UpdatedByIdToUsers")
  ShipmentTransactions_ShipmentTransactions_CreatedByIdToUsers                                   ShipmentTransactions[]                  @relation("ShipmentTransactions_CreatedByIdToUsers")
  ShipmentTransactions_ShipmentTransactions_UpdatedByIdToUsers                                   ShipmentTransactions[]                  @relation("ShipmentTransactions_UpdatedByIdToUsers")
  UserClients                                                                                    UserClients[]
  UserRoles                                                                                      UserRoles[]
  other_Users_UsersToUsers_CreatedById                                                           Users[]                                 @relation("UsersToUsers_CreatedById")
  other_Users_UsersToUsers_UpdatedById                                                           Users[]                                 @relation("UsersToUsers_UpdatedById")
  Vendors_UsersToVendors_CreatedById                                                             Vendors[]                               @relation("UsersToVendors_CreatedById")
  Vendors_UsersToVendors_UpdatedById                                                             Vendors[]                               @relation("UsersToVendors_UpdatedById")
  Waybills_UsersToWaybills_CreatedById                                                           Waybills[]                              @relation("UsersToWaybills_CreatedById")
  Waybills_UsersToWaybills_UpdatedById                                                           Waybills[]                              @relation("UsersToWaybills_UpdatedById")

  @@index([FirstName, LastName, AuthId], map: "IX_Users_AuthId")
}

model Vendors {
  Id                               Int               @id(map: "PK_Vendors") @default(autoincrement())
  ClientID                         Int?
  CarrierID                        Int?
  Number                           String            @db.VarChar(12)
  Name                             String            @db.VarChar(100)
  IsActive                         Boolean           @default(true, map: "DF_Vendors_IsActive")
  IsDeleted                        Boolean           @default(false, map: "DF_Vendors_IsDeleted")
  CreatedAt                        DateTime          @default(now(), map: "DF__Vendors__Created__789FAC88")
  UpdatedAt                        DateTime?
  CreatedById                      Int?
  UpdatedById                      Int?
  Carriers                         Carriers?         @relation(fields: [CarrierID], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Vendors_Carriers")
  Clients                          Clients?          @relation(fields: [ClientID], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Vendors_Clients")
  Users_UsersToVendors_CreatedById Users?            @relation("UsersToVendors_CreatedById", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Vendors_Users_CreatedById")
  Users_UsersToVendors_UpdatedById Users?            @relation("UsersToVendors_UpdatedById", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Vendors_Users_UpdatedById")
  FreightAccounts                  FreightAccounts[]
  RateContracts                    RateContracts[]

  @@unique([ClientID, Number], map: "CK_Vendors_ClientID_Number")
  @@index([Id, Name, ClientID, IsActive], map: "IX_Vendors_ClientId_IsActive")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model ViewDemurrageReport {
  Id                          Int       @default(autoincrement())
  ClientId                    Int
  DemurageRunId               Int?
  DemurrageId                 Int
  Vendor                      String?   @db.VarChar(50)
  Contract                    String?   @db.VarChar(50)
  DemurrageRule               String    @db.VarChar(50)
  FleetName                   String?   @db.VarChar(50)
  ShipmentId                  Int?
  Shipped                     DateTime?
  ShipperParty                String?   @db.VarChar(60)
  PickupParty                 String?   @db.VarChar(60)
  ConsigneeParty              String?   @db.VarChar(60)
  InCareOfParty               String?   @db.VarChar(60)
  Bol                         String?   @db.VarChar(30)
  PurchaseOrder               String?   @db.VarChar(30)
  CommodityCode               String?   @db.VarChar(50)
  CommodityName               String?   @db.VarChar(50)
  STCC                        String?   @db.VarChar(50)
  DemurrageDate               DateTime?
  DemurrageRate               Float?    @db.Money
  EquipmentCode               String    @db.VarChar(10)
  Fleet                       String?   @db.VarChar(60)
  SCAC                        String?   @db.VarChar(50)
  LoadedEmpty                 String?   @db.VarChar(1)
  PlacedCLMId                 Int?
  Placed                      DateTime?
  Available                   DateTime?
  ReleasedCLMId               Int?
  Released                    DateTime?
  iHeldDays                   Int?
  FreeDays                    Int?
  LocationSPLC                String?   @db.VarChar(50)
  LocationCity                String?   @db.VarChar(30)
  LocationState               String?   @db.Char(2)
  DestinationSPLC             String?   @db.VarChar(50)
  DestinationCity             String?   @db.VarChar(30)
  DestinationState            String?   @db.Char(2)
  Carrier                     String?   @db.VarChar(60)
  ChargeDate                  DateTime?
  CommodityStcc               String?   @db.VarChar(10)
  ConstructivePlacementDate   DateTime?
  DemurrageDays               Int?
  DemurrageEnd                DateTime?
  DemurrageRuleId             Int?
  DemurrageStart              DateTime?
  FlatFee                     Float?    @db.Money
  EquipmentId                 Int?
  EquipmentOwnershipType      String?   @db.VarChar(50)
  InFee                       Float?    @db.Money
  LoadedPlacementActual       DateTime?
  OriginCity                  String?   @db.VarChar(30)
  OriginState                 String?   @db.Char(2)
  OutFee                      Float?    @db.Money
  SightingCityCode            String?   @db.VarChar(9)
  SightingCityName            String?   @db.VarChar(20)
  SightingDestinationCityCode String?   @db.VarChar(9)
  SightingDestinationCityName String?   @db.VarChar(2)
  SightingDestinationState    String?   @db.Char(2)
  SightingEventCode           String?   @db.Char(1)
  SightingEventName           String?   @db.VarChar(50)
  SightingLoadedEmpty         String?   @db.Char(1)
  SightingSource              String?   @db.VarChar(50)
  SightingSplc                String?   @db.VarChar(9)
  SightingState               String?   @db.Char(2)
  SwitchDay                   Boolean?

  @@ignore
}

model VolumeUnits {
  Id              Int               @id(map: "PK_VolumeUnits") @default(autoincrement())
  Code            String            @db.Char(1)
  Enumeration     String            @db.VarChar(30)
  Name            String            @db.VarChar(50)
  Abbreviation    String?           @db.VarChar(10)
  ToGallon        Decimal           @default(0, map: "DF_VolumeUnits_ToG") @db.Decimal(18, 8)
  ToLiter         Decimal           @default(0, map: "DF_VolumeUnits_ToV") @db.Decimal(18, 8)
  IsActive        Boolean           @default(true, map: "DF_VolumeQualifiers_IsActive")
  SortOrder       Int?
  FreightInvoices FreightInvoices[]
  Patterns        Patterns[]
  Shipments       Shipments[]
  Waybills        Waybills[]

  @@unique([Id, Code], map: "CK_VolumeUnit_Code")
  @@unique([Id, Enumeration], map: "IX_VolumeUnits_Enumeration")
}

model WaybillCommodities {
  Id                        Int                         @id(map: "PK_WaybillCommodities") @default(autoincrement())
  WaybillId                 Int
  Commodity                 String                      @db.VarChar(100)
  Stcc                      String                      @db.VarChar(7)
  LadingDescription         String                      @db.VarChar(Max)
  Weight                    Decimal?                    @db.Decimal(13, 3)
  Volume                    Decimal?                    @db.Decimal(11, 3)
  LadingQuantity            Int
  PackingFormId             Int
  LadingValue               Decimal?                    @db.Decimal(11, 2)
  CurrencyId                Int?
  SourceId                  Int?
  PackingForms              PackingForms                @relation(fields: [PackingFormId], references: [Id], onUpdate: NoAction, map: "FK_WaybillCommodities_PackingForms")
  Waybills                  Waybills                    @relation(fields: [WaybillId], references: [Id], onUpdate: NoAction, map: "FK_WaybillCommodities_Waybills")
  WaybillHazardousMaterials WaybillHazardousMaterials[]

  @@index([Commodity, Id, Stcc, WaybillId], map: "IX_WaybillCommodities_WaybillId")
}

model WaybillContacts {
  Id            Int          @id(map: "PK_WaybillContacts") @default(autoincrement())
  WaybillId     Int
  ContactId     Int?
  ContactTypeId Int
  Name          String?      @db.VarChar(35)
  PhoneNumber   String?      @db.VarChar(30)
  FaxNumber     String?      @db.VarChar(30)
  EmailAddress  String?      @db.VarChar(80)
  Contacts      Contacts?    @relation(fields: [ContactId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_WaybillContacts_Contacts")
  ContactTypes  ContactTypes @relation(fields: [ContactTypeId], references: [Id], onUpdate: NoAction, map: "FK_WaybillContacts_ContactTypes")
  Waybills      Waybills     @relation(fields: [WaybillId], references: [Id], onUpdate: NoAction, map: "FK_WaybillContacts_Waybills")
}

model WaybillEmptyDispositionParties {
  Id           Int        @id(map: "PK_WaybillEmptyParties") @default(autoincrement())
  WaybillId    Int
  PartyTypeId  Int
  Name         String     @db.VarChar(35)
  AddressLine1 String?    @db.VarChar(55)
  AddressLine2 String?    @db.VarChar(55)
  AddressLine3 String?    @db.VarChar(55)
  AddressLine4 String?    @db.VarChar(55)
  City         String?    @db.VarChar(30)
  State        String?    @db.Char(2)
  PostalCode   String?    @db.VarChar(15)
  Country      String?    @db.Char(2)
  Splc         String?    @db.VarChar(9)
  ReferenceId  String?    @db.VarChar(80)
  PartyTypes   PartyTypes @relation(fields: [PartyTypeId], references: [Id], onUpdate: NoAction, map: "FK_WaybillEmptyDispositionParties_PartyTypes")
  Waybills     Waybills   @relation(fields: [WaybillId], references: [Id], onUpdate: NoAction, map: "FK_WaybillEmptyDispositionParties_Waybills")

  @@index([WaybillId, Name], map: "IX_WaybillEmptyDispositionParties_Name")
  @@index([Name, WaybillId, PartyTypeId], map: "IX_WaybillEmptyDispositionParties_WaybillId_PartyId")
}

model WaybillEmptyDispositionRouteSegments {
  Id                    Int                  @id(map: "PK_Waybill") @default(autoincrement())
  WaybillId             Int
  SequenceNumber        Int
  Scac                  String               @db.VarChar(4)
  RoutingSequenceCodeId Int
  JunctionRule260       String?              @db.VarChar(5)
  JunctionSplc          String?              @db.VarChar(9)
  RoutingSequenceCodes  RoutingSequenceCodes @relation(fields: [RoutingSequenceCodeId], references: [Id], onUpdate: NoAction, map: "FK_WaybillEmptyDispositionRouteSegments_RoutingSequenceCodes")
  Waybills              Waybills             @relation(fields: [WaybillId], references: [Id], onUpdate: NoAction, map: "FK_WaybillEmptyDispositionRouteSegments_Waybills")

  @@index([WaybillId], map: "IX_WaybillEmptyDispositionRouteSegments_WaybillId")
}

model WaybillEquipments {
  Id                    Int                     @id(map: "PK_WaybillEquipments") @default(autoincrement())
  WaybillId             Int
  SequenceNumber        Int                     @default(0, map: "DF_WaybillEquipments_SequenceCode")
  EquipmentCode         String?                 @db.VarChar(10)
  EquipmentInitial      String                  @db.VarChar(4)
  EquipmentNumber       String                  @db.VarChar(6)
  SealNumbers           String?                 @db.VarChar(500)
  Weight                Decimal?                @db.Decimal(13, 3)
  Volume                Decimal?                @db.Decimal(11, 3)
  EquipmentTypeId       Int                     @default(11, map: "DF_WaybillEquipments_EquipmentTypeId")
  GrainCode             String?                 @db.VarChar(30)
  GrainOrderReference   String?                 @db.VarChar(30)
  GrainLoadWeek         Int?
  GrainIncentive        String?                 @db.VarChar(30)
  GrainTrainRun         Int?
  GrainBlockSize        Int?
  GrainCot              String?                 @db.VarChar(30)
  IsLeadCar             Boolean
  Waybills              Waybills                @relation(fields: [WaybillId], references: [Id], onUpdate: NoAction, map: "FK_WaybillEquipments_Waybills")
  WaybillEquipmentSeals WaybillEquipmentSeals[]

  @@index([EquipmentCode, Weight, WaybillId], map: "IX_WaybillEquipments_WaybillId")
  @@index([EquipmentCode], map: "WaybillEquipments_EquipmentCode")
}

model WaybillEquipmentSeals {
  Id                 Int               @id(map: "PK_WaybillEquipmentSeals") @default(autoincrement())
  WaybillEquipmentId Int
  SealNumber         String            @db.VarChar(15)
  WaybillEquipments  WaybillEquipments @relation(fields: [WaybillEquipmentId], references: [Id], onUpdate: NoAction, map: "FK_WaybillEquipmentSeals_WaybillEquipments")

  @@index([SealNumber, WaybillEquipmentId], map: "IX_WaybillEquipmentSeals_WaybillEquipmentId")
}

model WaybillExtendedReferences {
  Id                      Int       @id(map: "PK_WaybillReferences") @default(autoincrement())
  WaybillId               Int
  ExtendedReferenceTypeId Int
  ReferenceText           String?   @db.VarChar(80)
  ReferenceDate           DateTime? @db.Date

  @@index([ReferenceText, WaybillId, ExtendedReferenceTypeId], map: "IX_WaybillExtendedReferences_ExtendedReferenceTypeId")
}

model WaybillHazardousMaterialCanadianRequirements {
  Id                          Int                       @id(map: "PK_WaybillHazardousMaterialCanadianRequirements") @default(autoincrement())
  WaybillHazardousMaterialId  Int
  EmergencyResponsePlanNumber String                    @db.VarChar(12)
  PhoneNumber1                String                    @db.VarChar(80)
  PhoneNumber2                String?                   @db.VarChar(80)
  IsSpecialCommodity          Boolean?
  WaybillHazardousMaterials   WaybillHazardousMaterials @relation(fields: [WaybillHazardousMaterialId], references: [Id], onUpdate: NoAction, map: "FK_WaybillHazardousMaterialCanadianRequirements_WaybillHazardousMaterials")

  @@index([EmergencyResponsePlanNumber, IsSpecialCommodity, PhoneNumber1, PhoneNumber2, WaybillHazardousMaterialId], map: "IX_WaybillHazardousMaterialCanadianRequirements_WaybillHazardousMaterialId")
}

model WaybillHazardousMaterialClassifications {
  Id                         Int                       @id(map: "PK_WaybillHazardousMaterialClassifications") @default(autoincrement())
  WaybillHazardousMaterialId Int
  HazardousClassQualifierId  Int
  HazardousClassificationId  Int?
  IsReportableQuantity       Boolean                   @default(true, map: "DF_WaybillHazardousMaterialClassifications_IsReportableQuantity")
  HazardousClassQualifiers   HazardousClassQualifiers  @relation(fields: [HazardousClassQualifierId], references: [Id], onUpdate: NoAction, map: "FK_WaybillHazardousMaterialClassifications_HazardousClassQualifiers")
  WaybillHazardousMaterials  WaybillHazardousMaterials @relation(fields: [WaybillHazardousMaterialId], references: [Id], onUpdate: NoAction, map: "FK_WaybillHazardousMaterialClassifications_WaybillHazardousMaterials")

  @@index([HazardousClassQualifierId, IsReportableQuantity, WaybillHazardousMaterialId], map: "IX_WaybillHazardousMaterialClassifications_WaybillHazardousMaterialId")
}

model WaybillHazardousMaterialContacts {
  Id                         Int                       @id(map: "PK_WaybillHazardousMaterialContacts") @default(autoincrement())
  WaybillHazardousMaterialId Int
  ContactId                  Int?
  ContactTypeId              Int
  Name                       String?                   @db.VarChar(35)
  PhoneNumber                String?                   @db.VarChar(30)
  FaxNumber                  String?                   @db.VarChar(30)
  EmailAddress               String?                   @db.VarChar(80)
  WaybillHazardousMaterials  WaybillHazardousMaterials @relation(fields: [WaybillHazardousMaterialId], references: [Id], onUpdate: NoAction, map: "FK_WaybillHazardousMaterialContacts_WaybillHazardousMaterials")

  @@index([ContactTypeId, EmailAddress, FaxNumber, Name, WaybillHazardousMaterialId], map: "IX_WaybillHazardousMaterialContacts_WaybillHazardousMaterialId")
}

model WaybillHazardousMaterialEpaRequirements {
  Id                         Int                        @id(map: "PK_WaybillHazardousMaterialEpaRequirements") @default(autoincrement())
  WaybillHazardousMaterialId Int?
  WasteStreamNumberCode      String?                    @db.VarChar(6)
  WasteCharacteristicsCode   String?                    @db.VarChar(16)
  WaybillHazardousMaterials  WaybillHazardousMaterials? @relation(fields: [WaybillHazardousMaterialId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_WaybillHazardousMaterialEpaRequirements_WaybillHazardousMaterials")

  @@index([WasteCharacteristicsCode, WasteStreamNumberCode, WaybillHazardousMaterialId], map: "IX_WaybillHazardousMaterialEpaRequirements_WaybillHazardousMaterialId")
}

model WaybillHazardousMaterialFreeForms {
  Id                             Int                           @id(map: "PK_WaybillHazardousMaterialFreeForms") @default(autoincrement())
  WaybillHazardousMaterialId     Int
  ShippingInformationQualifierId Int
  ShippingInformation1           String                        @db.VarChar(250)
  ShippingInformation2           String?                       @db.VarChar(25)
  HazardZoneCodeId               Int?
  FreeFormDate                   DateTime?                     @db.Date
  HazardZoneCodes                HazardZoneCodes?              @relation(fields: [HazardZoneCodeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_WaybillHazardousMaterialFreeForms_HazardZoneCodes")
  ShippingInformationQualifiers  ShippingInformationQualifiers @relation(fields: [ShippingInformationQualifierId], references: [Id], onUpdate: NoAction, map: "FK_WaybillHazardousMaterialFreeForms_ShippingInformationQualifiers")
  WaybillHazardousMaterials      WaybillHazardousMaterials     @relation(fields: [WaybillHazardousMaterialId], references: [Id], onUpdate: NoAction, map: "FK_WaybillHazardousMaterialFreeForms_WaybillHazardousMaterials")

  @@index([HazardZoneCodeId, ShippingInformation1, ShippingInformation2, ShippingInformationQualifierId, WaybillHazardousMaterialId], map: "IX_WaybillHazardousMaterialFreeForms_WaybillHazardousMaterialId")
}

model WaybillHazardousMaterialReferences {
  Id                         Int                       @id(map: "PK_WaybillHazardousMaterialReferences") @default(autoincrement())
  WaybillHazardousMaterialId Int
  ExtendedReferenceTypeId    Int
  ReferenceText              String                    @db.VarChar(30)
  ReferenceDate              DateTime?                 @db.Date
  ExtendedReferenceTypes     ExtendedReferenceTypes    @relation(fields: [ExtendedReferenceTypeId], references: [Id], onUpdate: NoAction, map: "FK_WaybillHazardousMaterialReferences_ExtendedReferenceTypes")
  WaybillHazardousMaterials  WaybillHazardousMaterials @relation(fields: [WaybillHazardousMaterialId], references: [Id], onUpdate: NoAction, map: "FK_WaybillHazardousMaterialReferences_WaybillHazardousMaterials")

  @@index([ExtendedReferenceTypeId, ReferenceDate, ReferenceText, WaybillHazardousMaterialId], map: "IX_WaybillHazardousMaterialReferences_WaybillHazardousMaterialId")
}

model WaybillHazardousMaterials {
  Id                                           Int                                            @id(map: "PK_WaybillHazardousMaterials") @default(autoincrement())
  WaybillCommodityId                           Int
  Name                                         String                                         @db.VarChar(125)
  UnNaCode                                     String?                                        @db.VarChar(6)
  PageNumber                                   String?                                        @db.VarChar(6)
  Stcc                                         String?                                        @db.VarChar(7)
  RegulatoryNumber                             String?                                        @db.VarChar(5)
  PackingGroupCodeId                           Int?
  SourceId                                     Int?
  PackingGroupCodes                            PackingGroupCodes?                             @relation(fields: [PackingGroupCodeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_WaybillHazardousMaterials_PackingGroupCodes")
  WaybillCommodities                           WaybillCommodities                             @relation(fields: [WaybillCommodityId], references: [Id], onUpdate: NoAction, map: "FK_WaybillHazardousMaterials_WaybillCommodities")
  WaybillHazardousMaterialCanadianRequirements WaybillHazardousMaterialCanadianRequirements[]
  WaybillHazardousMaterialClassifications      WaybillHazardousMaterialClassifications[]
  WaybillHazardousMaterialContacts             WaybillHazardousMaterialContacts[]
  WaybillHazardousMaterialEpaRequirements      WaybillHazardousMaterialEpaRequirements[]
  WaybillHazardousMaterialFreeForms            WaybillHazardousMaterialFreeForms[]
  WaybillHazardousMaterialReferences           WaybillHazardousMaterialReferences[]
  WaybillHazardousMaterialShippingNames        WaybillHazardousMaterialShippingNames[]

  @@index([WaybillCommodityId], map: "IX_WaybillHazardousMaterials_WaybillCommodityId")
}

model WaybillHazardousMaterialShippingNames {
  Id                         Int                       @id(map: "PK_WaybillHazardousMaterialShippingNames") @default(autoincrement())
  WaybillHazardousMaterialId Int
  ShippingName               String                    @db.VarChar(125)
  ShippingNameQualifierId    Int
  IsNotOtherwiseSpecified    Boolean
  ShippingNameQualifiers     ShippingNameQualifiers    @relation(fields: [ShippingNameQualifierId], references: [Id], onUpdate: NoAction, map: "FK_WaybillHazardousMaterialShippingNames_CommodityHazardousMaterialShippingNameQualifiers")
  WaybillHazardousMaterials  WaybillHazardousMaterials @relation(fields: [WaybillHazardousMaterialId], references: [Id], onUpdate: NoAction, map: "FK_WaybillHazardousMaterialShippingNames_WaybillHazardousMaterials")

  @@index([IsNotOtherwiseSpecified, ShippingName, ShippingNameQualifierId, WaybillHazardousMaterialId], map: "IX_WaybillHazardousMaterialShippingNames_WaybillHazardousMaterialId")
}

model WaybillHazardousReferences {
  Id                      Int       @id(map: "PK_WaybillHazardousReferences") @default(autoincrement())
  WaybillId               Int
  ExtendedReferenceTypeId Int
  ReferenceText           String    @db.VarChar(50)
  ReferenceDate           DateTime? @db.Date
  Waybills                Waybills  @relation(fields: [WaybillId], references: [Id], onUpdate: NoAction, map: "FK_WaybillHazardousReferences_Waybills")

  @@index([WaybillId], map: "IX_WaybillHazardousReferences_WaybillId")
}

model WaybillParties {
  Id                          Int                           @id(map: "PK_WaybillParties") @default(autoincrement())
  WaybillId                   Int
  PartyTypeId                 Int
  Name                        String                        @db.VarChar(35)
  AddressLine1                String?                       @db.VarChar(55)
  AddressLine2                String?                       @db.VarChar(55)
  AddressLine3                String?                       @db.VarChar(55)
  AddressLine4                String?                       @db.VarChar(55)
  City                        String?                       @db.VarChar(30)
  State                       String?                       @db.Char(2)
  PostalCode                  String?                       @db.VarChar(15)
  Country                     String?                       @db.Char(2)
  Splc                        String?                       @db.VarChar(9)
  ReferenceId                 String?                       @db.VarChar(80)
  Address                     String?                       @db.VarChar(330)
  PartyTypes                  PartyTypes                    @relation(fields: [PartyTypeId], references: [Id], onUpdate: NoAction, map: "FK_WaybillParties_PartyTypes")
  Waybills                    Waybills                      @relation(fields: [WaybillId], references: [Id], onUpdate: NoAction, map: "FK_WaybillParties_Waybills")
  WaybillPartyBillingSegments WaybillPartyBillingSegments[]
  WaybillPartyContacts        WaybillPartyContacts[]

  @@index([Name, WaybillId, PartyTypeId], map: "IX_WaybillParties")
  @@index([WaybillId, Name], map: "IX_WaybillParties_Name")
}

model WaybillPartyBillingSegments {
  Id                 Int            @id(map: "PK_WaybillPartyBillingSegments") @default(autoincrement())
  WaybillPartyId     Int
  OriginFsac         String?        @db.VarChar(5)
  DestinationFsac    String?        @db.VarChar(5)
  OriginSplc         String?        @db.VarChar(9)
  OriginCity         String         @db.VarChar(30)
  OriginState        String?        @db.Char(2)
  OriginCountry      String?        @db.Char(2)
  DestinationSplc    String?        @db.VarChar(9)
  DestinationCity    String         @db.VarChar(30)
  DestinationState   String?        @db.Char(2)
  DestinationCountry String?        @db.Char(2)
  Scac1              String         @db.VarChar(4)
  Scac2              String?        @db.VarChar(4)
  Scac3              String?        @db.VarChar(4)
  WaybillParties     WaybillParties @relation(fields: [WaybillPartyId], references: [Id], onUpdate: NoAction, map: "FK_WaybillPartyBillingSegments_WaybillParties")

  @@index([WaybillPartyId], map: "IX_WaybillPartyBillingSegments_WaybillId")
}

model WaybillPartyContacts {
  Id             Int            @id(map: "PK_WaybillPartyContacts") @default(autoincrement())
  WaybillPartyId Int
  ContactId      Int?
  ContactTypeId  Int
  Name           String?        @db.VarChar(35)
  PhoneNumber    String?        @db.VarChar(30)
  FaxNumber      String?        @db.VarChar(30)
  EmailAddress   String?        @db.VarChar(80)
  Contacts       Contacts?      @relation(fields: [ContactId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_WaybillPartyContacts_Contacts")
  ContactTypes   ContactTypes   @relation(fields: [ContactTypeId], references: [Id], onUpdate: NoAction, map: "FK_WaybillPartyContacts_ContactTypes")
  WaybillParties WaybillParties @relation(fields: [WaybillPartyId], references: [Id], onUpdate: NoAction, map: "FK_WaybillPartyContacts_WaybillParties")

  @@index([WaybillPartyId], map: "IX_WaybillPartyContacts_WaybillId")
}

model WaybillPriceAuthorities {
  Id                   Int                 @id(map: "PK_WaybillPriceAuthorities") @default(autoincrement())
  WaybillId            Int
  PriceAuthorityTypeId Int
  CarrierId            Int?
  ContractNumber       String              @db.VarChar(30)
  AuthorityNumber      String?             @db.VarChar(10)
  AuthoritySuffix      String?             @db.VarChar(2)
  TariffItemNumber     String?             @db.VarChar(16)
  Carriers             Carriers?           @relation(fields: [CarrierId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_WaybillPriceAuthorities_Carriers")
  PriceAuthorityTypes  PriceAuthorityTypes @relation(fields: [PriceAuthorityTypeId], references: [Id], onUpdate: NoAction, map: "FK_WaybillPriceAuthorities_PriceAuthorityTypes")
  Waybills             Waybills            @relation(fields: [WaybillId], references: [Id], onUpdate: NoAction, map: "FK_WaybillPriceAuthorities_Waybills")

  @@index([WaybillId], map: "IX_WaybillPriceAuthorities_WaybillId")
}

model WaybillRouteSegments {
  Id                    Int                  @id(map: "PK_WaybillRouteSegments") @default(autoincrement())
  WaybillId             Int
  SequenceNumber        Int
  Scac                  String               @db.VarChar(4)
  RoutingSequenceCodeId Int
  JunctionRule260       String?              @db.VarChar(5)
  JunctionSplc          String?              @db.VarChar(9)
  RoutingSequenceCodes  RoutingSequenceCodes @relation(fields: [RoutingSequenceCodeId], references: [Id], onUpdate: NoAction, map: "FK_WaybillRouteSegments_RoutingSequenceCodes")
  Waybills              Waybills             @relation(fields: [WaybillId], references: [Id], onUpdate: NoAction, map: "FK_WaybillRouteSegments_Waybills")

  @@index([WaybillId], map: "IX_WaybillRouteSegments_WaybillId")
}

model Waybills {
  Id                                   Int                                    @id(map: "PK_Waybills") @default(autoincrement())
  PaymentMethodId                      Int
  CarrierId                            Int
  LeadEquipment                        String                                 @db.VarChar(10)
  ShipperParty                         String?                                @db.VarChar(60)
  PickupParty                          String?                                @db.VarChar(60)
  ConsigneeParty                       String?                                @db.VarChar(60)
  InCareOfParty                        String?                                @db.VarChar(60)
  AccountOfParty                       String?                                @db.VarChar(60)
  AccountOfOriginParty                 String?                                @db.VarChar(60)
  AccountOfDestinationParty            String?                                @db.VarChar(60)
  PayerFreightParty                    String?                                @db.VarChar(60)
  Rule11Party1                         String?                                @db.VarChar(60)
  Rule11Party2                         String?                                @db.VarChar(60)
  Rule11Party3                         String?                                @db.VarChar(60)
  CustomsBrokerParty                   String?                                @db.VarChar(60)
  CanadianCustomsBrokerParty           String?                                @db.VarChar(60)
  MexicanCustomsBrokerParty            String?                                @db.VarChar(60)
  USCustomsBrokerParty                 String?                                @db.VarChar(60)
  ImporterParty                        String?                                @db.VarChar(60)
  ForwarderParty                       String?                                @db.VarChar(60)
  WeightUnitId                         Int                                    @default(3, map: "DF_Waybills_WeightUnitId")
  VolumeUnitId                         Int?
  ShipmentQualifierId                  Int                                    @default(5, map: "DF_Waybills_ShipmentQualifierId")
  IsSectionSeven                       Boolean
  IsRevenueMove                        Boolean                                @default(true, map: "DF_Waybills_IsRevenueMove")
  IsWeighInRoute                       Boolean                                @default(false, map: "DF_Waybills_IsWeighInRoute_1")
  IsEmptyMove                          Boolean
  HasEmptyReturn                       Boolean                                @default(true, map: "DF_Waybills_HasEmptyReturn")
  IsUnitTrain                          Boolean
  IsHazardous                          Boolean
  WeightQualifierId                    Int                                    @default(3, map: "DF_Waybills_WeightQualifierId")
  WeightTypeId                         Int?                                   @default(12, map: "DF_Waybills_WeightType1")
  BillingTypeId                        Int
  TimeZoneId                           Int
  Shipped                              DateTime
  Expected                             DateTime?
  WaybillNumber                        Int
  Bol                                  String                                 @db.VarChar(30)
  PurchaseOrder                        String?                                @db.VarChar(30)
  CustomerOrder                        String?                                @db.VarChar(30)
  Lot                                  String?                                @db.VarChar(30)
  Route                                String                                 @db.VarChar(200)
  EmptyDispositionRoute                String?                                @db.VarChar(200)
  OriginCity                           String                                 @db.VarChar(30)
  OriginState                          String                                 @db.Char(2)
  OriginCountry                        String                                 @db.Char(2)
  DestinationCity                      String                                 @db.VarChar(30)
  DestinationState                     String                                 @db.Char(2)
  DestinationCountry                   String                                 @db.Char(2)
  IsDeleted                            Boolean                                @default(false, map: "DF_Waybills_IsDeleted")
  CreatedAt                            DateTime                               @default(now(), map: "DF__Waybills__Creat__6F16424E")
  UpdatedAt                            DateTime?
  CreatedById                          Int?
  UpdatedById                          Int?
  SourceId                             Int?
  ExpectedShip                         DateTime?
  ExpectedReceive                      DateTime?
  BillingTypes                         BillingTypes                           @relation(fields: [BillingTypeId], references: [Id], onUpdate: NoAction, map: "FK_Waybills_BillingTypes")
  Carriers                             Carriers                               @relation(fields: [CarrierId], references: [Id], onUpdate: NoAction, map: "FK_Waybills_Carriers")
  Users_UsersToWaybills_CreatedById    Users?                                 @relation("UsersToWaybills_CreatedById", fields: [CreatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Waybills_Users_CreatedById")
  PaymentMethods                       PaymentMethods                         @relation(fields: [PaymentMethodId], references: [Id], onUpdate: NoAction, map: "FK_Waybills_PaymentMethods")
  ShipmentQualifiers                   ShipmentQualifiers                     @relation(fields: [ShipmentQualifierId], references: [Id], onUpdate: NoAction, map: "FK_Waybills_ShipmentQualifiers")
  TimeZones                            TimeZones                              @relation(fields: [TimeZoneId], references: [Id], onUpdate: NoAction, map: "FK_Waybills_TimeZones")
  Users_UsersToWaybills_UpdatedById    Users?                                 @relation("UsersToWaybills_UpdatedById", fields: [UpdatedById], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Waybills_Users_UpdatedById")
  VolumeUnits                          VolumeUnits?                           @relation(fields: [VolumeUnitId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Waybills_VolumeUnits")
  WeightQualifiers                     WeightQualifiers                       @relation(fields: [WeightQualifierId], references: [Id], onUpdate: NoAction, map: "FK_Waybills_WeightQualifiers")
  WeightTypes                          WeightTypes?                           @relation(fields: [WeightTypeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Waybills_WeightTypes")
  WeightUnits                          WeightUnits                            @relation(fields: [WeightUnitId], references: [Id], onUpdate: NoAction, map: "FK_Waybills_WeightUnits")
  Shipments                            Shipments[]
  WaybillCommodities                   WaybillCommodities[]
  WaybillContacts                      WaybillContacts[]
  WaybillEmptyDispositionParties       WaybillEmptyDispositionParties[]
  WaybillEmptyDispositionRouteSegments WaybillEmptyDispositionRouteSegments[]
  WaybillEquipments                    WaybillEquipments[]
  WaybillHazardousReferences           WaybillHazardousReferences[]
  WaybillParties                       WaybillParties[]
  WaybillPriceAuthorities              WaybillPriceAuthorities[]
  WaybillRouteSegments                 WaybillRouteSegments[]
  WaybillSpecialHandlingCodes          WaybillSpecialHandlingCodes[]
  WaybillStatuses                      WaybillStatuses[]

  @@index([CarrierId], map: "IX_Waybills_CarrierId")
  @@index([Id, CarrierId, LeadEquipment, ShipmentQualifierId, WaybillNumber], map: "IX_Waybills_CarrierId_LeadEquipment_ShipmentQualifierId_WaybillNumber")
  @@index([Bol, CarrierId, Id, IsEmptyMove, LeadEquipment, ShipmentQualifierId, ShipperParty, WaybillNumber, Shipped], map: "IX_Waybills_Shipped")
  @@index([Bol, Id, ShipperParty, Shipped], map: "IX_Waybills_Shipped_Id_ShipperParty_Bol")
  @@index([SourceId], map: "IX_Waybills_SourceId")
}

model WaybillSpecialHandlingCodes {
  Id                    Int                  @default(autoincrement())
  WaybillId             Int
  SpecialHandlingCodeId Int
  SpecialHandlingCodes  SpecialHandlingCodes @relation(fields: [SpecialHandlingCodeId], references: [Id], onUpdate: NoAction, map: "FK_WaybillSpecialHandlingCodes_SpecialHandlingCodes")
  Waybills              Waybills             @relation(fields: [WaybillId], references: [Id], onUpdate: NoAction, map: "FK_WaybillSpecialHandlingCodes_Waybills")

  @@id([WaybillId, SpecialHandlingCodeId], map: "PK_WaybillSpecialHandlingCodes")
  @@index([WaybillId], map: "IX_WaybillSpecialHandlingCodes_WaybillId")
}

model WaybillStatuses {
  Id          Int       @id(map: "PK_WaybillStatuses") @default(autoincrement())
  WaybillId   Int
  ClientId    Int
  IsActive    Boolean   @default(true, map: "DF_WaybillStatuses_IsActive")
  CreatedAt   DateTime  @default(now(), map: "DF_WaybillStatuses_CreatedAt")
  UpdatedAt   DateTime?
  CreatedById Int
  UpdatedById Int?
  Clients     Clients   @relation(fields: [ClientId], references: [Id], onUpdate: NoAction, map: "FK_WaybillStatuses_ClientId")
  Waybills    Waybills  @relation(fields: [WaybillId], references: [Id], onUpdate: NoAction, map: "FK_WaybillStatuses_WaybillId")

  @@unique([Id, WaybillId, ClientId], map: "IX_WaybillClientStatuses_WaybillId_ClientId")
}

model WaybillTransactions {
  Id                   Int             @id(map: "PK_WaybillTransactions") @default(autoincrement())
  WaybillId            Int
  TransactionSetId     Int
  TransactionPurposeId Int             @default(1, map: "DF_WaybillTransactions_TransactionPurposeId")
  LeadEquipment        String?         @db.VarChar(10)
  ReferenceNumber      String?         @db.VarChar(30)
  ReferenceDate        DateTime?       @db.DateTime
  Scac                 String?         @db.VarChar(4)
  SenderId             String?         @db.VarChar(15)
  ReceiverId           String?         @db.VarChar(15)
  FileName             String?         @db.VarChar(200)
  TransactionText      String?         @db.VarChar(Max)
  DateCreated          DateTime?
  DateSent             DateTime?
  DateAcknowledged     DateTime?
  TransactionSets      TransactionSets @relation(fields: [TransactionSetId], references: [Id], onUpdate: NoAction, map: "FK_WaybillTransactions_TransactionSets")
}

model WeightQualifiers {
  Id                Int                 @id(map: "PK_WeightQualifiers") @default(autoincrement())
  Code              String              @db.Char(1)
  Enumeration       String              @db.VarChar(30)
  Name              String              @db.VarChar(50)
  Abbreviation      String?             @db.VarChar(10)
  IsActive          Boolean             @default(true, map: "DF_WeightQualifiers_IsActive")
  SortOrder         Int?
  FreightInvoices   FreightInvoices[]
  InvoiceEquipments InvoiceEquipments[]
  Patterns          Patterns[]
  Shipments         Shipments[]
  Waybills          Waybills[]

  @@unique([Id, Code], map: "IX_WeightQualifiers_Code")
  @@unique([Id, Enumeration], map: "IX_WeightQualifiers_Enumeration")
}

model WeightTypes {
  Id              Int               @id(map: "PK_WeightTypes") @default(autoincrement())
  Code            String            @db.Char(1)
  Enumeration     String            @db.VarChar(30)
  Name            String            @db.VarChar(50)
  IsActive        Boolean           @default(true, map: "DF_ShipmentWeightCode_IsActive")
  SortOrder       Int?
  FreightInvoices FreightInvoices[]
  Patterns        Patterns[]
  Shipments       Shipments[]
  Waybills        Waybills[]

  @@unique([Id, Code], map: "IX_WeightTypes_Code")
  @@unique([Id, Enumeration], map: "IX_WeightTypes_Enumeration")
}

model WeightUnits {
  Id              Int               @id(map: "PK_WeightUnits") @default(autoincrement())
  Code            String            @db.Char(1)
  Enumeration     String            @db.VarChar(30)
  Name            String            @db.VarChar(50)
  Abbreviation    String?           @db.VarChar(10)
  ToKg            Decimal           @db.Decimal(18, 8)
  ToLb            Decimal           @db.Decimal(18, 8)
  ToMt            Decimal           @db.Decimal(18, 8)
  ToNt            Decimal           @db.Decimal(18, 8)
  IsActive        Boolean           @default(true, map: "DF_WeightUnits_IsActive")
  SortOrder       Int?
  FreightInvoices FreightInvoices[]
  Patterns        Patterns[]
  Shipments       Shipments[]
  Waybills        Waybills[]

  @@unique([Id, Code], map: "IX_WeightUnits_Code")
  @@unique([Id, Enumeration], map: "IX_WeightUnits_Enumeration")
}
